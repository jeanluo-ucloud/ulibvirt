# Makefile.in generated by automake 1.11.1 from Makefile.am.
# tests/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008, 2009  Free Software Foundation,
# Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





pkgdatadir = $(datadir)/libvirt
pkgincludedir = $(includedir)/libvirt
pkglibdir = $(libdir)/libvirt
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-unknown-linux-gnu
host_triplet = x86_64-unknown-linux-gnu
#am__append_1 = ../src/libvirt_probes.lo
am__append_2 = \
	virnetmessagetest \
	virnetsockettest \
	virnetdaemontest \
	virnetserverclienttest \
	$(NULL)

am__append_3 = virnettlscontexttest virnettlssessiontest
am__append_4 = fchosttest scsihosttest \
	vircaps2xmltest virresctrltest
am__append_5 = virusbmock.la \
	virnetdevbandwidthmock.la \
	virnumamock.la \
	virtestmock.la \
	$(NULL)

am__append_6 = fdstreamtest
am__append_7 = virdbustest \
                 virsystemdtest \
                 $(NULL)

am__append_8 = virdbusmock.la
am__append_9 = virpolkittest
am__append_10 = securityselinuxtest \
                 viridentitytest

am__append_11 = securityselinuxlabeltest
#am__append_12 = xml2sexprtest sexpr2xmltest \
#	xmconfigtest xencapstest

#am__append_13 = xlconfigtest libxlxml2domconfigtest
#am__append_14 = virmocklibxl.la
am__append_15 = qemuxml2argvtest qemuxml2xmltest \
	qemuargv2xmltest qemuhelptest domainsnapshotxml2xmltest \
	qemumonitortest qemumonitorjsontest qemuhotplugtest \
	qemuagenttest qemucapabilitiestest qemucaps2xmltest \
	qemumemlocktest \
	qemucommandutiltest

am__append_16 = qemucapsprobe
am__append_17 = libqemumonitortestutils.la \
		libqemutestdriver.la \
		qemuxml2argvmock.la \
		qemucaps2xmlmock.la \
		qemucapsprobemock.la \
		qemucpumock.la \
		$(NULL)

am__append_18 = lxcxml2xmltest lxcconf2xmltest
am__append_19 = openvzutilstest
am__append_20 = esxutilstest
am__append_21 = vboxsnapshotxmltest
am__append_22 = vmx2xmltest xml2vmxtest
am__append_23 = vmwarevertest
#am__append_24 = bhyvexml2argvtest bhyvexml2xmltest bhyveargv2xmltest
#am__append_25 = bhyvexml2argvmock.la bhyveargv2xmlmock.la
#am__append_26 = objectlocking
am__append_27 = virjsontest
am__append_28 = \
		networkxml2conftest \
		networkxml2firewalltest \
		$(NULL)

#am__append_29 = storagebackendsheepdogtest
am__append_30 = nwfilterebiptablestest \
	nwfilterxml2firewalltest
am__append_31 = storagevolxml2argvtest \
	virstorageutiltest
am__append_32 = virstoragetest
am__append_33 = virscsitest
am__append_34 = nsslinktest nssguestlinktest
am__append_35 = nsstest nssguesttest
am__append_36 = nssmock.la
am__append_37 = virusbtest \
	virnetdevbandwidthtest \
	$(NULL)

am__append_38 = $(libvirtd_test_scripts)
am__append_39 = \
	eventtest \
	virdrivermoduletest

#am__append_40 = $(libvirtd_test_scripts)
#am__append_41 = virt-aa-helper-test
#noinst_PROGRAMS = $(am__EXEEXT_31) $(am__EXEEXT_34)
check_PROGRAMS = $(am__EXEEXT_31) $(am__EXEEXT_34)
TESTS = $(am__EXEEXT_31) $(am__EXEEXT_37)
am__append_42 = xml2sexprtest.c sexpr2xmltest.c xmconfigtest.c \
	xencapstest.c \
	testutilsxen.c testutilsxen.h

#am__append_43 = ../src/libvirt_driver_network_impl.la
am__append_44 = xlconfigtest.c libxlxml2domconfigtest.c
am__append_45 = ../src/libvirt_driver_network_impl.la
am__append_46 = ../src/libvirt_driver_storage_impl.la
#am__append_47 = ../src/libvirt_qemu_probes.lo
#am__append_48 = qemuxml2argvtest.c qemuxml2xmltest.c qemuargv2xmltest.c \
#	qemuhelptest.c domainsnapshotxml2xmltest.c \
#	qemumonitortest.c testutilsqemu.c testutilsqemu.h \
#	qemumonitorjsontest.c qemuhotplugtest.c \
#	qemuagenttest.c qemucapabilitiestest.c \
#	qemucaps2xmltest.c qemucommandutiltest.c \
#	qemumemlocktest.c qemucpumock.c testutilshostcpus.h \
#	$(QEMUMONITORTESTUTILS_SOURCES)

am__append_49 = ../src/libvirt_driver_network_impl.la
#am__append_50 = lxcxml2xmltest.c testutilslxc.c testutilslxc.h
#am__append_51 = openvzutilstest.c
#am__append_52 = esxutilstest.c
#am__append_53 = vboxsnapshotxmltest.c
#am__append_54 = vmx2xmltest.c xml2vmxtest.c
#am__append_55 = vmwarevertest.c
#am__append_56 = ../src/libvirt_driver_storage_impl.la
am__append_57 = \
	bhyvexml2argvtest.c \
	bhyveargv2xmltest.c \
	bhyvexml2xmltest.c \
	bhyvexml2argvmock.c \
	bhyveargv2xmlmock.c

#am__append_58 = networkxml2conftest.c
am__append_59 = storagebackendsheepdogtest.c
#am__append_60 = storagevolxml2argvtest.c \
#	virstorageutiltest.c
am__append_61 = testutilsqemu.c testutilsqemu.h
am__append_62 = libqemumonitortestutils.la $(qemu_LDADDS) $(GNULIB_LIBS)
am__append_63 = testutilslxc.c testutilslxc.h
am__append_64 = testutilsqemu.c testutilsqemu.h
#am__append_65 = testutilsxen.c testutilsxen.h
am__append_66 = testutilsqemu.c testutilsqemu.h
am__append_67 = libqemutestdriver.la $(GNULIB_LIBS)
#am__append_68 = testutilsxen.c testutilsxen.h
#am__append_69 = ../src/libvirt_driver_libxl_impl.la $(GNULIB_LIBS)
#am__append_70 = ../src/libvirt_driver_bhyve_impl.la $(GNULIB_LIBS)
am__append_71 = pkix_asn1_tab.c
am__append_72 = -ltasn1
am__append_73 = pkix_asn1_tab.c
am__append_74 = -ltasn1
#am__append_75 = pkix_asn1_tab.c
#am__append_76 = \
#	virnettlscontexttest.c virnettlssessiontest.c \
#	virnettlshelpers.h virnettlshelpers.c \
#	testutils.h testutils.c pkix_asn1_tab.c

am__append_77 = $(SELINUX_LIBS)
#viridentitytest_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_2) \
#	$(am__DEPENDENCIES_7)
#am__append_78 = vircaps2xmltest.c virnumamock.c virfilewrapper.c \
#			  virfilewrapper.h virresctrltest.c

#am__append_79 = nsstest.c nssmock.c nsslinktest.c
am__append_80 = virmacmaptest
#am__append_81 = virmacmaptest.c
#am__append_82 = virdbustest.c virdbusmock.c virsystemdtest.c
#am__append_83 = libsecurityselinuxhelper.la
am__append_84 = libsecurityselinuxhelper.la
#am__append_85 = fchosttest.c scsihosttest.c \
#	virscsitest.c
am__append_86 = objectlocking.ml
subdir = tests
DIST_COMMON = $(srcdir)/Makefile.am $(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/00gnulib.m4 \
	$(top_srcdir)/m4/absolute-header.m4 $(top_srcdir)/m4/alloca.m4 \
	$(top_srcdir)/m4/arpa_inet_h.m4 \
	$(top_srcdir)/m4/asm-underscore.m4 \
	$(top_srcdir)/m4/autobuild.m4 $(top_srcdir)/m4/base64.m4 \
	$(top_srcdir)/m4/btowc.m4 $(top_srcdir)/m4/builtin-expect.m4 \
	$(top_srcdir)/m4/byteswap.m4 $(top_srcdir)/m4/calloc.m4 \
	$(top_srcdir)/m4/canonicalize.m4 $(top_srcdir)/m4/chown.m4 \
	$(top_srcdir)/m4/clock_time.m4 $(top_srcdir)/m4/close.m4 \
	$(top_srcdir)/m4/codeset.m4 $(top_srcdir)/m4/configmake.m4 \
	$(top_srcdir)/m4/count-leading-zeros.m4 \
	$(top_srcdir)/m4/count-one-bits.m4 $(top_srcdir)/m4/ctype.m4 \
	$(top_srcdir)/m4/dirname.m4 \
	$(top_srcdir)/m4/double-slash-root.m4 $(top_srcdir)/m4/dup.m4 \
	$(top_srcdir)/m4/dup2.m4 $(top_srcdir)/m4/eealloc.m4 \
	$(top_srcdir)/m4/environ.m4 $(top_srcdir)/m4/errno_h.m4 \
	$(top_srcdir)/m4/error.m4 $(top_srcdir)/m4/execinfo.m4 \
	$(top_srcdir)/m4/exponentd.m4 $(top_srcdir)/m4/exponentf.m4 \
	$(top_srcdir)/m4/exponentl.m4 $(top_srcdir)/m4/extensions.m4 \
	$(top_srcdir)/m4/extern-inline.m4 \
	$(top_srcdir)/m4/fatal-signal.m4 $(top_srcdir)/m4/fclose.m4 \
	$(top_srcdir)/m4/fcntl-o.m4 $(top_srcdir)/m4/fcntl.m4 \
	$(top_srcdir)/m4/fcntl_h.m4 $(top_srcdir)/m4/fdatasync.m4 \
	$(top_srcdir)/m4/fdopen.m4 $(top_srcdir)/m4/fflush.m4 \
	$(top_srcdir)/m4/ffs.m4 $(top_srcdir)/m4/ffsl.m4 \
	$(top_srcdir)/m4/flexmember.m4 $(top_srcdir)/m4/float_h.m4 \
	$(top_srcdir)/m4/fnmatch.m4 $(top_srcdir)/m4/fpieee.m4 \
	$(top_srcdir)/m4/fpurge.m4 $(top_srcdir)/m4/freading.m4 \
	$(top_srcdir)/m4/fseek.m4 $(top_srcdir)/m4/fseeko.m4 \
	$(top_srcdir)/m4/fstat.m4 $(top_srcdir)/m4/fsync.m4 \
	$(top_srcdir)/m4/ftell.m4 $(top_srcdir)/m4/ftello.m4 \
	$(top_srcdir)/m4/ftruncate.m4 $(top_srcdir)/m4/func.m4 \
	$(top_srcdir)/m4/getaddrinfo.m4 $(top_srcdir)/m4/getcwd.m4 \
	$(top_srcdir)/m4/getdelim.m4 $(top_srcdir)/m4/getdtablesize.m4 \
	$(top_srcdir)/m4/getgroups.m4 $(top_srcdir)/m4/gethostname.m4 \
	$(top_srcdir)/m4/getline.m4 $(top_srcdir)/m4/getopt.m4 \
	$(top_srcdir)/m4/getpagesize.m4 $(top_srcdir)/m4/getpass.m4 \
	$(top_srcdir)/m4/getprogname.m4 $(top_srcdir)/m4/gettext.m4 \
	$(top_srcdir)/m4/gettimeofday.m4 \
	$(top_srcdir)/m4/getugroups.m4 $(top_srcdir)/m4/gl-openssl.m4 \
	$(top_srcdir)/m4/glibc21.m4 $(top_srcdir)/m4/gnulib-common.m4 \
	$(top_srcdir)/m4/gnulib-comp.m4 $(top_srcdir)/m4/grantpt.m4 \
	$(top_srcdir)/m4/hard-locale.m4 \
	$(top_srcdir)/m4/host-cpu-c-abi.m4 $(top_srcdir)/m4/hostent.m4 \
	$(top_srcdir)/m4/iconv.m4 $(top_srcdir)/m4/include_next.m4 \
	$(top_srcdir)/m4/inet_ntop.m4 $(top_srcdir)/m4/inet_pton.m4 \
	$(top_srcdir)/m4/intlmacosx.m4 $(top_srcdir)/m4/intmax_t.m4 \
	$(top_srcdir)/m4/inttypes-pri.m4 $(top_srcdir)/m4/inttypes.m4 \
	$(top_srcdir)/m4/inttypes_h.m4 $(top_srcdir)/m4/ioctl.m4 \
	$(top_srcdir)/m4/isatty.m4 $(top_srcdir)/m4/isblank.m4 \
	$(top_srcdir)/m4/isnand.m4 $(top_srcdir)/m4/isnanf.m4 \
	$(top_srcdir)/m4/isnanl.m4 $(top_srcdir)/m4/langinfo_h.m4 \
	$(top_srcdir)/m4/largefile.m4 $(top_srcdir)/m4/lcmessage.m4 \
	$(top_srcdir)/m4/ldexp.m4 $(top_srcdir)/m4/lib-ld.m4 \
	$(top_srcdir)/m4/lib-link.m4 $(top_srcdir)/m4/lib-prefix.m4 \
	$(top_srcdir)/m4/libtool.m4 $(top_srcdir)/m4/limits-h.m4 \
	$(top_srcdir)/m4/localcharset.m4 $(top_srcdir)/m4/locale-fr.m4 \
	$(top_srcdir)/m4/locale-ja.m4 $(top_srcdir)/m4/locale-tr.m4 \
	$(top_srcdir)/m4/locale-zh.m4 $(top_srcdir)/m4/locale_h.m4 \
	$(top_srcdir)/m4/localeconv.m4 $(top_srcdir)/m4/localename.m4 \
	$(top_srcdir)/m4/localtime-buffer.m4 $(top_srcdir)/m4/lock.m4 \
	$(top_srcdir)/m4/longlong.m4 $(top_srcdir)/m4/lseek.m4 \
	$(top_srcdir)/m4/lstat.m4 $(top_srcdir)/m4/ltoptions.m4 \
	$(top_srcdir)/m4/ltsugar.m4 $(top_srcdir)/m4/ltversion.m4 \
	$(top_srcdir)/m4/lt~obsolete.m4 $(top_srcdir)/m4/malloc.m4 \
	$(top_srcdir)/m4/malloca.m4 $(top_srcdir)/m4/manywarnings.m4 \
	$(top_srcdir)/m4/math_h.m4 $(top_srcdir)/m4/mbrtowc.m4 \
	$(top_srcdir)/m4/mbsinit.m4 $(top_srcdir)/m4/mbsrtowcs.m4 \
	$(top_srcdir)/m4/mbstate_t.m4 $(top_srcdir)/m4/mbtowc.m4 \
	$(top_srcdir)/m4/md5.m4 $(top_srcdir)/m4/memchr.m4 \
	$(top_srcdir)/m4/mgetgroups.m4 $(top_srcdir)/m4/mkdtemp.m4 \
	$(top_srcdir)/m4/mkostemp.m4 $(top_srcdir)/m4/mkostemps.m4 \
	$(top_srcdir)/m4/mktime.m4 $(top_srcdir)/m4/mmap-anon.m4 \
	$(top_srcdir)/m4/mode_t.m4 $(top_srcdir)/m4/msvc-inval.m4 \
	$(top_srcdir)/m4/msvc-nothrow.m4 $(top_srcdir)/m4/multiarch.m4 \
	$(top_srcdir)/m4/nanosleep.m4 $(top_srcdir)/m4/net_if_h.m4 \
	$(top_srcdir)/m4/netdb_h.m4 $(top_srcdir)/m4/netinet_in_h.m4 \
	$(top_srcdir)/m4/nl_langinfo.m4 $(top_srcdir)/m4/nls.m4 \
	$(top_srcdir)/m4/nocrash.m4 $(top_srcdir)/m4/nonblocking.m4 \
	$(top_srcdir)/m4/off_t.m4 $(top_srcdir)/m4/onceonly.m4 \
	$(top_srcdir)/m4/open-cloexec.m4 $(top_srcdir)/m4/open.m4 \
	$(top_srcdir)/m4/passfd.m4 $(top_srcdir)/m4/pathmax.m4 \
	$(top_srcdir)/m4/perror.m4 $(top_srcdir)/m4/physmem.m4 \
	$(top_srcdir)/m4/pipe.m4 $(top_srcdir)/m4/pipe2.m4 \
	$(top_srcdir)/m4/po.m4 $(top_srcdir)/m4/poll.m4 \
	$(top_srcdir)/m4/poll_h.m4 $(top_srcdir)/m4/posix-shell.m4 \
	$(top_srcdir)/m4/posix_openpt.m4 \
	$(top_srcdir)/m4/posix_spawn.m4 $(top_srcdir)/m4/printf.m4 \
	$(top_srcdir)/m4/progtest.m4 $(top_srcdir)/m4/pthread.m4 \
	$(top_srcdir)/m4/pthread_rwlock_rdlock.m4 \
	$(top_srcdir)/m4/pthread_sigmask.m4 \
	$(top_srcdir)/m4/ptsname.m4 $(top_srcdir)/m4/ptsname_r.m4 \
	$(top_srcdir)/m4/pty.m4 $(top_srcdir)/m4/pty_h.m4 \
	$(top_srcdir)/m4/putenv.m4 $(top_srcdir)/m4/raise.m4 \
	$(top_srcdir)/m4/random_r.m4 $(top_srcdir)/m4/rawmemchr.m4 \
	$(top_srcdir)/m4/read.m4 $(top_srcdir)/m4/readlink.m4 \
	$(top_srcdir)/m4/realloc.m4 $(top_srcdir)/m4/regex.m4 \
	$(top_srcdir)/m4/sched_h.m4 $(top_srcdir)/m4/secure_getenv.m4 \
	$(top_srcdir)/m4/select.m4 $(top_srcdir)/m4/servent.m4 \
	$(top_srcdir)/m4/setenv.m4 $(top_srcdir)/m4/setlocale.m4 \
	$(top_srcdir)/m4/sha256.m4 $(top_srcdir)/m4/sig_atomic_t.m4 \
	$(top_srcdir)/m4/sigaction.m4 $(top_srcdir)/m4/signal_h.m4 \
	$(top_srcdir)/m4/signalblocking.m4 $(top_srcdir)/m4/signbit.m4 \
	$(top_srcdir)/m4/sigpipe.m4 $(top_srcdir)/m4/size_max.m4 \
	$(top_srcdir)/m4/sleep.m4 $(top_srcdir)/m4/snprintf.m4 \
	$(top_srcdir)/m4/socketlib.m4 $(top_srcdir)/m4/sockets.m4 \
	$(top_srcdir)/m4/socklen.m4 $(top_srcdir)/m4/sockpfaf.m4 \
	$(top_srcdir)/m4/spawn_h.m4 $(top_srcdir)/m4/ssize_t.m4 \
	$(top_srcdir)/m4/stat-time.m4 $(top_srcdir)/m4/stat.m4 \
	$(top_srcdir)/m4/stdalign.m4 $(top_srcdir)/m4/stdarg.m4 \
	$(top_srcdir)/m4/stdbool.m4 $(top_srcdir)/m4/stddef_h.m4 \
	$(top_srcdir)/m4/stdint.m4 $(top_srcdir)/m4/stdint_h.m4 \
	$(top_srcdir)/m4/stdio_h.m4 $(top_srcdir)/m4/stdlib_h.m4 \
	$(top_srcdir)/m4/stpcpy.m4 $(top_srcdir)/m4/strcase.m4 \
	$(top_srcdir)/m4/strchrnul.m4 $(top_srcdir)/m4/strdup.m4 \
	$(top_srcdir)/m4/strerror.m4 $(top_srcdir)/m4/strerror_r.m4 \
	$(top_srcdir)/m4/string_h.m4 $(top_srcdir)/m4/strings_h.m4 \
	$(top_srcdir)/m4/strndup.m4 $(top_srcdir)/m4/strnlen.m4 \
	$(top_srcdir)/m4/strptime.m4 $(top_srcdir)/m4/strsep.m4 \
	$(top_srcdir)/m4/strtok_r.m4 $(top_srcdir)/m4/symlink.m4 \
	$(top_srcdir)/m4/sys_ioctl_h.m4 \
	$(top_srcdir)/m4/sys_select_h.m4 \
	$(top_srcdir)/m4/sys_socket_h.m4 \
	$(top_srcdir)/m4/sys_stat_h.m4 $(top_srcdir)/m4/sys_time_h.m4 \
	$(top_srcdir)/m4/sys_types_h.m4 $(top_srcdir)/m4/sys_uio_h.m4 \
	$(top_srcdir)/m4/sys_utsname_h.m4 \
	$(top_srcdir)/m4/sys_wait_h.m4 $(top_srcdir)/m4/tempname.m4 \
	$(top_srcdir)/m4/termios_h.m4 $(top_srcdir)/m4/thread.m4 \
	$(top_srcdir)/m4/threadlib.m4 $(top_srcdir)/m4/time_h.m4 \
	$(top_srcdir)/m4/time_r.m4 $(top_srcdir)/m4/timegm.m4 \
	$(top_srcdir)/m4/tm_gmtoff.m4 $(top_srcdir)/m4/ttyname_r.m4 \
	$(top_srcdir)/m4/uname.m4 $(top_srcdir)/m4/ungetc.m4 \
	$(top_srcdir)/m4/unistd_h.m4 $(top_srcdir)/m4/unlockpt.m4 \
	$(top_srcdir)/m4/usleep.m4 $(top_srcdir)/m4/vasnprintf.m4 \
	$(top_srcdir)/m4/vasprintf.m4 $(top_srcdir)/m4/virt-acl.m4 \
	$(top_srcdir)/m4/virt-apparmor.m4 $(top_srcdir)/m4/virt-arg.m4 \
	$(top_srcdir)/m4/virt-atomic.m4 $(top_srcdir)/m4/virt-attr.m4 \
	$(top_srcdir)/m4/virt-audit.m4 $(top_srcdir)/m4/virt-avahi.m4 \
	$(top_srcdir)/m4/virt-blkid.m4 $(top_srcdir)/m4/virt-capng.m4 \
	$(top_srcdir)/m4/virt-chrdev-lock-files.m4 \
	$(top_srcdir)/m4/virt-compile-pie.m4 \
	$(top_srcdir)/m4/virt-compile-warnings.m4 \
	$(top_srcdir)/m4/virt-curl.m4 $(top_srcdir)/m4/virt-dbus.m4 \
	$(top_srcdir)/m4/virt-debug.m4 \
	$(top_srcdir)/m4/virt-default-editor.m4 \
	$(top_srcdir)/m4/virt-devmapper.m4 \
	$(top_srcdir)/m4/virt-dlopen.m4 \
	$(top_srcdir)/m4/virt-driver-bhyve.m4 \
	$(top_srcdir)/m4/virt-driver-esx.m4 \
	$(top_srcdir)/m4/virt-driver-hyperv.m4 \
	$(top_srcdir)/m4/virt-driver-interface.m4 \
	$(top_srcdir)/m4/virt-driver-libvirtd.m4 \
	$(top_srcdir)/m4/virt-driver-libxl.m4 \
	$(top_srcdir)/m4/virt-driver-lxc.m4 \
	$(top_srcdir)/m4/virt-driver-modules.m4 \
	$(top_srcdir)/m4/virt-driver-network.m4 \
	$(top_srcdir)/m4/virt-driver-openvz.m4 \
	$(top_srcdir)/m4/virt-driver-phyp.m4 \
	$(top_srcdir)/m4/virt-driver-qemu.m4 \
	$(top_srcdir)/m4/virt-driver-remote.m4 \
	$(top_srcdir)/m4/virt-driver-test.m4 \
	$(top_srcdir)/m4/virt-driver-uml.m4 \
	$(top_srcdir)/m4/virt-driver-vbox.m4 \
	$(top_srcdir)/m4/virt-driver-vmware.m4 \
	$(top_srcdir)/m4/virt-driver-vz.m4 \
	$(top_srcdir)/m4/virt-driver-xen.m4 \
	$(top_srcdir)/m4/virt-driver-xenapi.m4 \
	$(top_srcdir)/m4/virt-dtrace.m4 \
	$(top_srcdir)/m4/virt-external-programs.m4 \
	$(top_srcdir)/m4/virt-firewalld.m4 \
	$(top_srcdir)/m4/virt-fuse.m4 $(top_srcdir)/m4/virt-gluster.m4 \
	$(top_srcdir)/m4/virt-gnutls.m4 $(top_srcdir)/m4/virt-hal.m4 \
	$(top_srcdir)/m4/virt-host-validate.m4 \
	$(top_srcdir)/m4/virt-init-script.m4 \
	$(top_srcdir)/m4/virt-lib.m4 $(top_srcdir)/m4/virt-libnl.m4 \
	$(top_srcdir)/m4/virt-libpcap.m4 \
	$(top_srcdir)/m4/virt-libssh.m4 \
	$(top_srcdir)/m4/virt-libxml.m4 \
	$(top_srcdir)/m4/virt-linker-no-indirect.m4 \
	$(top_srcdir)/m4/virt-linker-relro.m4 \
	$(top_srcdir)/m4/virt-loader-nvram.m4 \
	$(top_srcdir)/m4/virt-login-shell.m4 \
	$(top_srcdir)/m4/virt-macvtap.m4 \
	$(top_srcdir)/m4/virt-netcf.m4 $(top_srcdir)/m4/virt-nss.m4 \
	$(top_srcdir)/m4/virt-numactl.m4 \
	$(top_srcdir)/m4/virt-numad.m4 \
	$(top_srcdir)/m4/virt-nwfilter.m4 \
	$(top_srcdir)/m4/virt-openwsman.m4 \
	$(top_srcdir)/m4/virt-parted.m4 \
	$(top_srcdir)/m4/virt-pciaccess.m4 \
	$(top_srcdir)/m4/virt-pm-utils.m4 \
	$(top_srcdir)/m4/virt-polkit.m4 \
	$(top_srcdir)/m4/virt-pthread.m4 \
	$(top_srcdir)/m4/virt-readline.m4 \
	$(top_srcdir)/m4/virt-result.m4 \
	$(top_srcdir)/m4/virt-sanlock.m4 $(top_srcdir)/m4/virt-sasl.m4 \
	$(top_srcdir)/m4/virt-secdriver-apparmor.m4 \
	$(top_srcdir)/m4/virt-secdriver-selinux.m4 \
	$(top_srcdir)/m4/virt-selinux.m4 $(top_srcdir)/m4/virt-ssh2.m4 \
	$(top_srcdir)/m4/virt-storage-dir.m4 \
	$(top_srcdir)/m4/virt-storage-disk.m4 \
	$(top_srcdir)/m4/virt-storage-fs.m4 \
	$(top_srcdir)/m4/virt-storage-gluster.m4 \
	$(top_srcdir)/m4/virt-storage-iscsi.m4 \
	$(top_srcdir)/m4/virt-storage-lvm.m4 \
	$(top_srcdir)/m4/virt-storage-mpath.m4 \
	$(top_srcdir)/m4/virt-storage-rbd.m4 \
	$(top_srcdir)/m4/virt-storage-scsi.m4 \
	$(top_srcdir)/m4/virt-storage-sheepdog.m4 \
	$(top_srcdir)/m4/virt-storage-vstorage.m4 \
	$(top_srcdir)/m4/virt-storage-zfs.m4 \
	$(top_srcdir)/m4/virt-sysctl.m4 \
	$(top_srcdir)/m4/virt-tls-priority.m4 \
	$(top_srcdir)/m4/virt-udev.m4 \
	$(top_srcdir)/m4/virt-virtualport.m4 \
	$(top_srcdir)/m4/virt-win-common.m4 \
	$(top_srcdir)/m4/virt-win-cygwin.m4 \
	$(top_srcdir)/m4/virt-win-mingw.m4 \
	$(top_srcdir)/m4/virt-win-symbols.m4 \
	$(top_srcdir)/m4/virt-win-windres.m4 \
	$(top_srcdir)/m4/virt-wireshark.m4 \
	$(top_srcdir)/m4/virt-xdr.m4 \
	$(top_srcdir)/m4/virt-xml-catalog.m4 \
	$(top_srcdir)/m4/virt-yajl.m4 $(top_srcdir)/m4/vsnprintf.m4 \
	$(top_srcdir)/m4/wait-process.m4 $(top_srcdir)/m4/waitpid.m4 \
	$(top_srcdir)/m4/warnings.m4 $(top_srcdir)/m4/wchar_h.m4 \
	$(top_srcdir)/m4/wchar_t.m4 $(top_srcdir)/m4/wcrtomb.m4 \
	$(top_srcdir)/m4/wctob.m4 $(top_srcdir)/m4/wctomb.m4 \
	$(top_srcdir)/m4/wctype_h.m4 $(top_srcdir)/m4/wint_t.m4 \
	$(top_srcdir)/m4/write.m4 $(top_srcdir)/m4/xalloc.m4 \
	$(top_srcdir)/m4/xsize.m4 $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(SHELL) $(top_srcdir)/build-aux/mkinstalldirs
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
#bhyveargv2xmlmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__bhyveargv2xmlmock_la_SOURCES_DIST = bhyveargv2xmlmock.c
#am_bhyveargv2xmlmock_la_OBJECTS =  \
#	bhyveargv2xmlmock_la-bhyveargv2xmlmock.lo
bhyveargv2xmlmock_la_OBJECTS = $(am_bhyveargv2xmlmock_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
bhyveargv2xmlmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(bhyveargv2xmlmock_la_CFLAGS) $(CFLAGS) \
	$(bhyveargv2xmlmock_la_LDFLAGS) $(LDFLAGS) -o $@
#am_bhyveargv2xmlmock_la_rpath =
##am_bhyveargv2xmlmock_la_rpath =
#bhyvexml2argvmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__bhyvexml2argvmock_la_SOURCES_DIST = bhyvexml2argvmock.c
#am_bhyvexml2argvmock_la_OBJECTS =  \
#	bhyvexml2argvmock_la-bhyvexml2argvmock.lo
bhyvexml2argvmock_la_OBJECTS = $(am_bhyvexml2argvmock_la_OBJECTS)
bhyvexml2argvmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(bhyvexml2argvmock_la_CFLAGS) $(CFLAGS) \
	$(bhyvexml2argvmock_la_LDFLAGS) $(LDFLAGS) -o $@
#am_bhyvexml2argvmock_la_rpath =
##am_bhyvexml2argvmock_la_rpath =
domaincapsmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_domaincapsmock_la_OBJECTS = domaincapsmock_la-domaincapsmock.lo
domaincapsmock_la_OBJECTS = $(am_domaincapsmock_la_OBJECTS)
domaincapsmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(domaincapsmock_la_CFLAGS) $(CFLAGS) \
	$(domaincapsmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_domaincapsmock_la_rpath =
#am_domaincapsmock_la_rpath =
libqemumonitortestutils_la_LIBADD =
am__libqemumonitortestutils_la_SOURCES_DIST = qemumonitortestutils.c \
	qemumonitortestutils.h
am__objects_1 = qemumonitortestutils.lo
am_libqemumonitortestutils_la_OBJECTS =  \
	$(am__objects_1)
libqemumonitortestutils_la_OBJECTS =  \
	$(am_libqemumonitortestutils_la_OBJECTS)
am_libqemumonitortestutils_la_rpath =
#am_libqemumonitortestutils_la_rpath =
libqemutestdriver_la_DEPENDENCIES = $(qemu_LDADDS)
am_libqemutestdriver_la_OBJECTS =
libqemutestdriver_la_OBJECTS = $(am_libqemutestdriver_la_OBJECTS)
libqemutestdriver_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libqemutestdriver_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libqemutestdriver_la_rpath =
#am_libqemutestdriver_la_rpath =
libsecurityselinuxhelper_la_LIBADD =
am__libsecurityselinuxhelper_la_SOURCES_DIST =  \
	securityselinuxhelper.c
am_libsecurityselinuxhelper_la_OBJECTS = securityselinuxhelper.lo
libsecurityselinuxhelper_la_OBJECTS =  \
	$(am_libsecurityselinuxhelper_la_OBJECTS)
libsecurityselinuxhelper_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libsecurityselinuxhelper_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_libsecurityselinuxhelper_la_rpath =
#am_libsecurityselinuxhelper_la_rpath =
libshunload_la_DEPENDENCIES = ../src/libvirt.la
am_libshunload_la_OBJECTS = shunloadhelper.lo
libshunload_la_OBJECTS = $(am_libshunload_la_OBJECTS)
libshunload_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(AM_CFLAGS) $(CFLAGS) $(libshunload_la_LDFLAGS) $(LDFLAGS) -o \
	$@
am_libshunload_la_rpath =
#am_libshunload_la_rpath =
nssmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__nssmock_la_SOURCES_DIST = nssmock.c
am_nssmock_la_OBJECTS = nssmock_la-nssmock.lo
nssmock_la_OBJECTS = $(am_nssmock_la_OBJECTS)
nssmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nssmock_la_CFLAGS) \
	$(CFLAGS) $(nssmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_nssmock_la_rpath =
#am_nssmock_la_rpath =
qemucaps2xmlmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__qemucaps2xmlmock_la_SOURCES_DIST = qemucaps2xmlmock.c
am_qemucaps2xmlmock_la_OBJECTS =  \
	qemucaps2xmlmock_la-qemucaps2xmlmock.lo
qemucaps2xmlmock_la_OBJECTS = $(am_qemucaps2xmlmock_la_OBJECTS)
qemucaps2xmlmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(qemucaps2xmlmock_la_CFLAGS) $(CFLAGS) \
	$(qemucaps2xmlmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_qemucaps2xmlmock_la_rpath =
#am_qemucaps2xmlmock_la_rpath =
qemucapsprobemock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__qemucapsprobemock_la_SOURCES_DIST = qemucapsprobemock.c
am_qemucapsprobemock_la_OBJECTS =  \
	qemucapsprobemock_la-qemucapsprobemock.lo
qemucapsprobemock_la_OBJECTS = $(am_qemucapsprobemock_la_OBJECTS)
qemucapsprobemock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(qemucapsprobemock_la_CFLAGS) $(CFLAGS) \
	$(qemucapsprobemock_la_LDFLAGS) $(LDFLAGS) -o $@
am_qemucapsprobemock_la_rpath =
#am_qemucapsprobemock_la_rpath =
qemucpumock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__qemucpumock_la_SOURCES_DIST = qemucpumock.c testutilshostcpus.h
am_qemucpumock_la_OBJECTS =  \
	qemucpumock_la-qemucpumock.lo
qemucpumock_la_OBJECTS = $(am_qemucpumock_la_OBJECTS)
qemucpumock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(qemucpumock_la_CFLAGS) $(CFLAGS) $(qemucpumock_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_qemucpumock_la_rpath =
#am_qemucpumock_la_rpath =
qemuxml2argvmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__qemuxml2argvmock_la_SOURCES_DIST = qemuxml2argvmock.c
am_qemuxml2argvmock_la_OBJECTS =  \
	qemuxml2argvmock_la-qemuxml2argvmock.lo
qemuxml2argvmock_la_OBJECTS = $(am_qemuxml2argvmock_la_OBJECTS)
qemuxml2argvmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(qemuxml2argvmock_la_CFLAGS) $(CFLAGS) \
	$(qemuxml2argvmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_qemuxml2argvmock_la_rpath =
#am_qemuxml2argvmock_la_rpath =
vircgroupmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_vircgroupmock_la_OBJECTS = vircgroupmock_la-vircgroupmock.lo
vircgroupmock_la_OBJECTS = $(am_vircgroupmock_la_OBJECTS)
vircgroupmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(vircgroupmock_la_CFLAGS) $(CFLAGS) \
	$(vircgroupmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_vircgroupmock_la_rpath =
#am_vircgroupmock_la_rpath =
virdbusmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__virdbusmock_la_SOURCES_DIST = virdbusmock.c
am_virdbusmock_la_OBJECTS =  \
	virdbusmock_la-virdbusmock.lo
virdbusmock_la_OBJECTS = $(am_virdbusmock_la_OBJECTS)
virdbusmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virdbusmock_la_CFLAGS) $(CFLAGS) $(virdbusmock_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_virdbusmock_la_rpath =
#am_virdbusmock_la_rpath =
virdeterministichashmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virdeterministichashmock_la_OBJECTS =  \
	virdeterministichashmock_la-virdeterministichashmock.lo
virdeterministichashmock_la_OBJECTS =  \
	$(am_virdeterministichashmock_la_OBJECTS)
virdeterministichashmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virdeterministichashmock_la_CFLAGS) $(CFLAGS) \
	$(virdeterministichashmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virdeterministichashmock_la_rpath =
#am_virdeterministichashmock_la_rpath =
virfilecachemock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virfilecachemock_la_OBJECTS =  \
	virfilecachemock_la-virfilecachemock.lo
virfilecachemock_la_OBJECTS = $(am_virfilecachemock_la_OBJECTS)
virfilecachemock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virfilecachemock_la_CFLAGS) $(CFLAGS) \
	$(virfilecachemock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virfilecachemock_la_rpath =
#am_virfilecachemock_la_rpath =
virhostcpumock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virhostcpumock_la_OBJECTS = virhostcpumock_la-virhostcpumock.lo
virhostcpumock_la_OBJECTS = $(am_virhostcpumock_la_OBJECTS)
virhostcpumock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virhostcpumock_la_CFLAGS) $(CFLAGS) \
	$(virhostcpumock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virhostcpumock_la_rpath =
#am_virhostcpumock_la_rpath =
#virmocklibxl_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__virmocklibxl_la_SOURCES_DIST = virmocklibxl.c
#am_virmocklibxl_la_OBJECTS =  \
#	virmocklibxl_la-virmocklibxl.lo
virmocklibxl_la_OBJECTS = $(am_virmocklibxl_la_OBJECTS)
virmocklibxl_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virmocklibxl_la_CFLAGS) $(CFLAGS) $(virmocklibxl_la_LDFLAGS) \
	$(LDFLAGS) -o $@
#am_virmocklibxl_la_rpath =
##am_virmocklibxl_la_rpath =
virnetdaemonmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virnetdaemonmock_la_OBJECTS =  \
	virnetdaemonmock_la-virnetdaemonmock.lo
virnetdaemonmock_la_OBJECTS = $(am_virnetdaemonmock_la_OBJECTS)
virnetdaemonmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnetdaemonmock_la_CFLAGS) $(CFLAGS) \
	$(virnetdaemonmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virnetdaemonmock_la_rpath =
#am_virnetdaemonmock_la_rpath =
virnetdevbandwidthmock_la_DEPENDENCIES =  \
	$(MOCKLIBS_LIBS)
am__virnetdevbandwidthmock_la_SOURCES_DIST = virnetdevbandwidthmock.c
am_virnetdevbandwidthmock_la_OBJECTS = virnetdevbandwidthmock_la-virnetdevbandwidthmock.lo
virnetdevbandwidthmock_la_OBJECTS =  \
	$(am_virnetdevbandwidthmock_la_OBJECTS)
virnetdevbandwidthmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnetdevbandwidthmock_la_CFLAGS) $(CFLAGS) \
	$(virnetdevbandwidthmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virnetdevbandwidthmock_la_rpath =
#am_virnetdevbandwidthmock_la_rpath =
virnetdevmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virnetdevmock_la_OBJECTS = virnetdevmock_la-virnetdevmock.lo
virnetdevmock_la_OBJECTS = $(am_virnetdevmock_la_OBJECTS)
virnetdevmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnetdevmock_la_CFLAGS) $(CFLAGS) \
	$(virnetdevmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virnetdevmock_la_rpath =
#am_virnetdevmock_la_rpath =
virnetserverclientmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virnetserverclientmock_la_OBJECTS =  \
	virnetserverclientmock_la-virnetserverclientmock.lo
virnetserverclientmock_la_OBJECTS =  \
	$(am_virnetserverclientmock_la_OBJECTS)
virnetserverclientmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnetserverclientmock_la_CFLAGS) $(CFLAGS) \
	$(virnetserverclientmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virnetserverclientmock_la_rpath =
#am_virnetserverclientmock_la_rpath =
virnumamock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am__virnumamock_la_SOURCES_DIST = virnumamock.c
am_virnumamock_la_OBJECTS =  \
	virnumamock_la-virnumamock.lo
virnumamock_la_OBJECTS = $(am_virnumamock_la_OBJECTS)
virnumamock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnumamock_la_CFLAGS) $(CFLAGS) $(virnumamock_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_virnumamock_la_rpath =
#am_virnumamock_la_rpath =
virpcimock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virpcimock_la_OBJECTS = virpcimock_la-virpcimock.lo
virpcimock_la_OBJECTS = $(am_virpcimock_la_OBJECTS)
virpcimock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(virpcimock_la_CFLAGS) \
	$(CFLAGS) $(virpcimock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virpcimock_la_rpath =
#am_virpcimock_la_rpath =
virportallocatormock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virportallocatormock_la_OBJECTS =  \
	virportallocatormock_la-virportallocatormock.lo
virportallocatormock_la_OBJECTS =  \
	$(am_virportallocatormock_la_OBJECTS)
virportallocatormock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virportallocatormock_la_CFLAGS) $(CFLAGS) \
	$(virportallocatormock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virportallocatormock_la_rpath =
#am_virportallocatormock_la_rpath =
virrandommock_la_DEPENDENCIES = $(MOCKLIBS_LIBS)
am_virrandommock_la_OBJECTS = virrandommock_la-virrandommock.lo
virrandommock_la_OBJECTS = $(am_virrandommock_la_OBJECTS)
virrandommock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virrandommock_la_CFLAGS) $(CFLAGS) \
	$(virrandommock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virrandommock_la_rpath =
#am_virrandommock_la_rpath =
virtestmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS) \
	$(PROBES_O) ../src/libvirt_util.la
am__virtestmock_la_SOURCES_DIST = virtestmock.c
am_virtestmock_la_OBJECTS =  \
	virtestmock_la-virtestmock.lo
virtestmock_la_OBJECTS = $(am_virtestmock_la_OBJECTS)
virtestmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virtestmock_la_CFLAGS) $(CFLAGS) $(virtestmock_la_LDFLAGS) \
	$(LDFLAGS) -o $@
am_virtestmock_la_rpath =
#am_virtestmock_la_rpath =
virusbmock_la_DEPENDENCIES = $(MOCKLIBS_LIBS) \
	$(PROBES_O) ../src/libvirt_util.la
am__virusbmock_la_SOURCES_DIST = virusbmock.c
am_virusbmock_la_OBJECTS =  \
	virusbmock_la-virusbmock.lo
virusbmock_la_OBJECTS = $(am_virusbmock_la_OBJECTS)
virusbmock_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(virusbmock_la_CFLAGS) \
	$(CFLAGS) $(virusbmock_la_LDFLAGS) $(LDFLAGS) -o $@
am_virusbmock_la_rpath =
#am_virusbmock_la_rpath =
am__EXEEXT_1 = virnetmessagetest$(EXEEXT) \
	virnetsockettest$(EXEEXT) \
	virnetdaemontest$(EXEEXT) \
	virnetserverclienttest$(EXEEXT)
am__EXEEXT_2 = virnettlscontexttest$(EXEEXT) \
	virnettlssessiontest$(EXEEXT)
am__EXEEXT_3 = fchosttest$(EXEEXT) \
	scsihosttest$(EXEEXT) \
	vircaps2xmltest$(EXEEXT) \
	virresctrltest$(EXEEXT)
am__EXEEXT_4 = fdstreamtest$(EXEEXT)
am__EXEEXT_5 = virdbustest$(EXEEXT) \
	virsystemdtest$(EXEEXT)
am__EXEEXT_6 =  \
	virpolkittest$(EXEEXT)
am__EXEEXT_7 = securityselinuxtest$(EXEEXT) \
	viridentitytest$(EXEEXT)
am__EXEEXT_8 = securityselinuxlabeltest$(EXEEXT)
#am__EXEEXT_9 = xml2sexprtest$(EXEEXT) \
#	sexpr2xmltest$(EXEEXT) xmconfigtest$(EXEEXT) \
#	xencapstest$(EXEEXT)
#am__EXEEXT_10 = xlconfigtest$(EXEEXT) \
#	libxlxml2domconfigtest$(EXEEXT)
am__EXEEXT_11 = qemuxml2argvtest$(EXEEXT) \
	qemuxml2xmltest$(EXEEXT) \
	qemuargv2xmltest$(EXEEXT) \
	qemuhelptest$(EXEEXT) \
	domainsnapshotxml2xmltest$(EXEEXT) \
	qemumonitortest$(EXEEXT) \
	qemumonitorjsontest$(EXEEXT) \
	qemuhotplugtest$(EXEEXT) \
	qemuagenttest$(EXEEXT) \
	qemucapabilitiestest$(EXEEXT) \
	qemucaps2xmltest$(EXEEXT) \
	qemumemlocktest$(EXEEXT) \
	qemucommandutiltest$(EXEEXT)
am__EXEEXT_12 = lxcxml2xmltest$(EXEEXT) \
	lxcconf2xmltest$(EXEEXT)
am__EXEEXT_13 = openvzutilstest$(EXEEXT)
am__EXEEXT_14 = esxutilstest$(EXEEXT)
am__EXEEXT_15 = vboxsnapshotxmltest$(EXEEXT)
am__EXEEXT_16 = vmx2xmltest$(EXEEXT) \
	xml2vmxtest$(EXEEXT)
am__EXEEXT_17 = vmwarevertest$(EXEEXT)
#am__EXEEXT_18 = bhyvexml2argvtest$(EXEEXT) \
#	bhyvexml2xmltest$(EXEEXT) \
#	bhyveargv2xmltest$(EXEEXT)
#am__EXEEXT_19 = objectlocking$(EXEEXT)
am__EXEEXT_20 = virjsontest$(EXEEXT)
am__EXEEXT_21 = networkxml2conftest$(EXEEXT) \
	networkxml2firewalltest$(EXEEXT)
#am__EXEEXT_22 = storagebackendsheepdogtest$(EXEEXT)
am__EXEEXT_23 = nwfilterebiptablestest$(EXEEXT) \
	nwfilterxml2firewalltest$(EXEEXT)
am__EXEEXT_24 = storagevolxml2argvtest$(EXEEXT) \
	virstorageutiltest$(EXEEXT)
am__EXEEXT_25 = virstoragetest$(EXEEXT)
am__EXEEXT_26 = virscsitest$(EXEEXT)
am__EXEEXT_27 = nsstest$(EXEEXT) nssguesttest$(EXEEXT)
am__EXEEXT_28 = virusbtest$(EXEEXT) \
	virnetdevbandwidthtest$(EXEEXT)
am__EXEEXT_29 = eventtest$(EXEEXT) \
	virdrivermoduletest$(EXEEXT)
am__EXEEXT_30 = virmacmaptest$(EXEEXT)
am__EXEEXT_31 = virshtest$(EXEEXT) sockettest$(EXEEXT) \
	virhostcputest$(EXEEXT) virbuftest$(EXEEXT) \
	commandtest$(EXEEXT) seclabeltest$(EXEEXT) \
	virhashtest$(EXEEXT) virconftest$(EXEEXT) \
	viratomictest$(EXEEXT) utiltest$(EXEEXT) shunloadtest$(EXEEXT) \
	virtimetest$(EXEEXT) viruritest$(EXEEXT) \
	virkeyfiletest$(EXEEXT) viralloctest$(EXEEXT) \
	virauthconfigtest$(EXEEXT) virbitmaptest$(EXEEXT) \
	vircgrouptest$(EXEEXT) vircryptotest$(EXEEXT) \
	virpcitest$(EXEEXT) virendiantest$(EXEEXT) \
	virfiletest$(EXEEXT) virfilecachetest$(EXEEXT) \
	virfirewalltest$(EXEEXT) viriscsitest$(EXEEXT) \
	virkeycodetest$(EXEEXT) virlockspacetest$(EXEEXT) \
	virlogtest$(EXEEXT) virrotatingfiletest$(EXEEXT) \
	virschematest$(EXEEXT) virstringtest$(EXEEXT) \
	virportallocatortest$(EXEEXT) sysinfotest$(EXEEXT) \
	virkmodtest$(EXEEXT) vircapstest$(EXEEXT) \
	domaincapstest$(EXEEXT) domainconftest$(EXEEXT) \
	virhostdevtest$(EXEEXT) virnetdevtest$(EXEEXT) \
	virtypedparamtest$(EXEEXT) $(am__EXEEXT_1) $(am__EXEEXT_2) \
	$(am__EXEEXT_3) $(am__EXEEXT_4) $(am__EXEEXT_5) \
	$(am__EXEEXT_6) $(am__EXEEXT_7) $(am__EXEEXT_8) \
	$(am__EXEEXT_9) $(am__EXEEXT_10) $(am__EXEEXT_11) \
	$(am__EXEEXT_12) $(am__EXEEXT_13) $(am__EXEEXT_14) \
	$(am__EXEEXT_15) $(am__EXEEXT_16) $(am__EXEEXT_17) \
	$(am__EXEEXT_18) $(am__EXEEXT_19) $(am__EXEEXT_20) \
	networkxml2xmltest$(EXEEXT) networkxml2xmlupdatetest$(EXEEXT) \
	$(am__EXEEXT_21) $(am__EXEEXT_22) nwfilterxml2xmltest$(EXEEXT) \
	$(am__EXEEXT_23) $(am__EXEEXT_24) $(am__EXEEXT_25) \
	$(am__EXEEXT_26) $(am__EXEEXT_27) \
	storagevolxml2xmltest$(EXEEXT) storagepoolxml2xmltest$(EXEEXT) \
	nodedevxml2xmltest$(EXEEXT) interfacexml2xmltest$(EXEEXT) \
	cputest$(EXEEXT) metadatatest$(EXEEXT) \
	secretxml2xmltest$(EXEEXT) genericxml2xmltest$(EXEEXT) \
	$(am__EXEEXT_28) $(am__EXEEXT_29) objecteventtest$(EXEEXT) \
	$(am__EXEEXT_30)
am__EXEEXT_32 = qemucapsprobe$(EXEEXT)
am__EXEEXT_33 = nsslinktest$(EXEEXT) \
	nssguestlinktest$(EXEEXT)
am__EXEEXT_34 = commandhelper$(EXEEXT) ssh$(EXEEXT) $(am__EXEEXT_32) \
	$(am__EXEEXT_33)
PROGRAMS = $(noinst_PROGRAMS)
am__bhyveargv2xmltest_SOURCES_DIST = bhyveargv2xmltest.c testutils.c \
	testutils.h
#am_bhyveargv2xmltest_OBJECTS =  \
#	bhyveargv2xmltest.$(OBJEXT) \
#	testutils.$(OBJEXT)
bhyveargv2xmltest_OBJECTS = $(am_bhyveargv2xmltest_OBJECTS)
am__DEPENDENCIES_1 =
am__DEPENDENCIES_2 = $(am__DEPENDENCIES_1) $(PROBES_O) $(GNULIB_LIBS) \
	../src/libvirt.la
#am__DEPENDENCIES_3 =  \
#	../src/libvirt_driver_bhyve_impl.la \
#	$(am__append_56) $(am__DEPENDENCIES_2)
#bhyveargv2xmltest_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_3)
am__bhyvexml2argvtest_SOURCES_DIST = bhyvexml2argvtest.c testutils.c \
	testutils.h
#am_bhyvexml2argvtest_OBJECTS =  \
#	bhyvexml2argvtest.$(OBJEXT) \
#	testutils.$(OBJEXT)
bhyvexml2argvtest_OBJECTS = $(am_bhyvexml2argvtest_OBJECTS)
#bhyvexml2argvtest_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_3)
am__bhyvexml2xmltest_SOURCES_DIST = bhyvexml2xmltest.c testutils.c \
	testutils.h
#am_bhyvexml2xmltest_OBJECTS =  \
#	bhyvexml2xmltest.$(OBJEXT) \
#	testutils.$(OBJEXT)
bhyvexml2xmltest_OBJECTS = $(am_bhyvexml2xmltest_OBJECTS)
#bhyvexml2xmltest_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_3)
am_commandhelper_OBJECTS = commandhelper.$(OBJEXT)
commandhelper_OBJECTS = $(am_commandhelper_OBJECTS)
commandhelper_DEPENDENCIES = $(am__DEPENDENCIES_1) $(GNULIB_LIBS)
commandhelper_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(commandhelper_LDFLAGS) $(LDFLAGS) -o $@
am_commandtest_OBJECTS = commandtest.$(OBJEXT) testutils.$(OBJEXT)
commandtest_OBJECTS = $(am_commandtest_OBJECTS)
commandtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__cputest_SOURCES_DIST = cputest.c testutils.c testutils.h \
	testutilsqemu.c testutilsqemu.h
am__objects_2 = testutilsqemu.$(OBJEXT)
am_cputest_OBJECTS = cputest.$(OBJEXT) testutils.$(OBJEXT) \
	$(am__objects_2)
cputest_OBJECTS = $(am_cputest_OBJECTS)
cputest_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \
	$(am__append_62)
am__domaincapstest_SOURCES_DIST = domaincapstest.c testutils.h \
	testutils.c testutilsqemu.c testutilsqemu.h testutilsxen.c \
	testutilsxen.h
#am__objects_3 = testutilsxen.$(OBJEXT)
am_domaincapstest_OBJECTS = domaincapstest.$(OBJEXT) \
	testutils.$(OBJEXT) $(am__objects_2) $(am__objects_3)
domaincapstest_OBJECTS = $(am_domaincapstest_OBJECTS)
domaincapstest_DEPENDENCIES = $(am__DEPENDENCIES_2) $(am__append_67) \
	$(am__append_69) $(am__append_70)
am_domainconftest_OBJECTS = domainconftest.$(OBJEXT) \
	testutils.$(OBJEXT)
domainconftest_OBJECTS = $(am_domainconftest_OBJECTS)
domainconftest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__domainsnapshotxml2xmltest_SOURCES_DIST =  \
	domainsnapshotxml2xmltest.c testutilsqemu.c testutilsqemu.h \
	testutils.c testutils.h
am_domainsnapshotxml2xmltest_OBJECTS =  \
	domainsnapshotxml2xmltest.$(OBJEXT) \
	testutilsqemu.$(OBJEXT) testutils.$(OBJEXT)
domainsnapshotxml2xmltest_OBJECTS =  \
	$(am_domainsnapshotxml2xmltest_OBJECTS)
domainsnapshotxml2xmltest_DEPENDENCIES =  \
	$(qemu_LDADDS) $(am__DEPENDENCIES_2)
am__esxutilstest_SOURCES_DIST = esxutilstest.c testutils.c testutils.h
am_esxutilstest_OBJECTS = esxutilstest.$(OBJEXT) \
	testutils.$(OBJEXT)
esxutilstest_OBJECTS = $(am_esxutilstest_OBJECTS)
esxutilstest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__eventtest_SOURCES_DIST = eventtest.c testutils.h testutils.c
am_eventtest_OBJECTS = eventtest.$(OBJEXT) \
	testutils.$(OBJEXT)
eventtest_OBJECTS = $(am_eventtest_OBJECTS)
eventtest_DEPENDENCIES = $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_2)
am__fchosttest_SOURCES_DIST = fchosttest.c testutils.h testutils.c
am_fchosttest_OBJECTS = fchosttest.$(OBJEXT) \
	testutils.$(OBJEXT)
fchosttest_OBJECTS = $(am_fchosttest_OBJECTS)
fchosttest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_fdstreamtest_OBJECTS = fdstreamtest.$(OBJEXT) testutils.$(OBJEXT)
fdstreamtest_OBJECTS = $(am_fdstreamtest_OBJECTS)
fdstreamtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_genericxml2xmltest_OBJECTS = genericxml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
genericxml2xmltest_OBJECTS = $(am_genericxml2xmltest_OBJECTS)
genericxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_interfacexml2xmltest_OBJECTS = interfacexml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
interfacexml2xmltest_OBJECTS = $(am_interfacexml2xmltest_OBJECTS)
interfacexml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__libxlxml2domconfigtest_SOURCES_DIST = libxlxml2domconfigtest.c \
	testutilsxen.c testutilsxen.h testutils.c testutils.h
#am_libxlxml2domconfigtest_OBJECTS =  \
#	libxlxml2domconfigtest.$(OBJEXT) \
#	testutilsxen.$(OBJEXT) testutils.$(OBJEXT)
libxlxml2domconfigtest_OBJECTS = $(am_libxlxml2domconfigtest_OBJECTS)
#am__DEPENDENCIES_4 =  \
#	../src/libvirt_driver_libxl_impl.la \
#	$(am__append_43) $(am__DEPENDENCIES_2)
#libxlxml2domconfigtest_DEPENDENCIES =  \
#	$(am__DEPENDENCIES_4) $(am__DEPENDENCIES_1)
am__lxcconf2xmltest_SOURCES_DIST = lxcconf2xmltest.c testutilslxc.c \
	testutilslxc.h testutils.c testutils.h
am_lxcconf2xmltest_OBJECTS = lxcconf2xmltest.$(OBJEXT) \
	testutilslxc.$(OBJEXT) testutils.$(OBJEXT)
lxcconf2xmltest_OBJECTS = $(am_lxcconf2xmltest_OBJECTS)
am__DEPENDENCIES_5 = ../src/libvirt_driver_lxc_impl.la \
	$(am__append_49) $(am__DEPENDENCIES_2)
lxcconf2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_5)
am__lxcxml2xmltest_SOURCES_DIST = lxcxml2xmltest.c testutilslxc.c \
	testutilslxc.h testutils.c testutils.h
am_lxcxml2xmltest_OBJECTS = lxcxml2xmltest.$(OBJEXT) \
	testutilslxc.$(OBJEXT) testutils.$(OBJEXT)
lxcxml2xmltest_OBJECTS = $(am_lxcxml2xmltest_OBJECTS)
lxcxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_5)
am_metadatatest_OBJECTS = metadatatest.$(OBJEXT) testutils.$(OBJEXT)
metadatatest_OBJECTS = $(am_metadatatest_OBJECTS)
metadatatest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
am__networkxml2conftest_SOURCES_DIST = networkxml2conftest.c \
	testutils.c testutils.h
am_networkxml2conftest_OBJECTS =  \
	networkxml2conftest.$(OBJEXT) \
	testutils.$(OBJEXT)
networkxml2conftest_OBJECTS = $(am_networkxml2conftest_OBJECTS)
networkxml2conftest_DEPENDENCIES =  \
	../src/libvirt_driver_network_impl.la \
	$(am__DEPENDENCIES_2)
am__networkxml2firewalltest_SOURCES_DIST = networkxml2firewalltest.c \
	testutils.c testutils.h
am_networkxml2firewalltest_OBJECTS =  \
	networkxml2firewalltest.$(OBJEXT) \
	testutils.$(OBJEXT)
networkxml2firewalltest_OBJECTS =  \
	$(am_networkxml2firewalltest_OBJECTS)
networkxml2firewalltest_DEPENDENCIES =  \
	../src/libvirt_driver_network_impl.la \
	$(am__DEPENDENCIES_2)
am_networkxml2xmltest_OBJECTS = networkxml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
networkxml2xmltest_OBJECTS = $(am_networkxml2xmltest_OBJECTS)
networkxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_networkxml2xmlupdatetest_OBJECTS =  \
	networkxml2xmlupdatetest.$(OBJEXT) testutils.$(OBJEXT)
networkxml2xmlupdatetest_OBJECTS =  \
	$(am_networkxml2xmlupdatetest_OBJECTS)
networkxml2xmlupdatetest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_nodedevxml2xmltest_OBJECTS = nodedevxml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
nodedevxml2xmltest_OBJECTS = $(am_nodedevxml2xmltest_OBJECTS)
nodedevxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__nssguestlinktest_SOURCES_DIST = nsslinktest.c
am_nssguestlinktest_OBJECTS =  \
	nssguestlinktest-nsslinktest.$(OBJEXT)
nssguestlinktest_OBJECTS = $(am_nssguestlinktest_OBJECTS)
nssguestlinktest_DEPENDENCIES =  \
	../tools/nss/libnss_libvirt_guest_impl.la
nssguestlinktest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(nssguestlinktest_CFLAGS) $(CFLAGS) \
	$(nssguestlinktest_LDFLAGS) $(LDFLAGS) -o $@
am__nssguesttest_SOURCES_DIST = nsstest.c testutils.h testutils.c
am_nssguesttest_OBJECTS =  \
	nssguesttest-nsstest.$(OBJEXT) \
	nssguesttest-testutils.$(OBJEXT)
nssguesttest_OBJECTS = $(am_nssguesttest_OBJECTS)
nssguesttest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	../tools/nss/libnss_libvirt_guest_impl.la
nssguesttest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nssguesttest_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__nsslinktest_SOURCES_DIST = nsslinktest.c
am_nsslinktest_OBJECTS =  \
	nsslinktest-nsslinktest.$(OBJEXT)
nsslinktest_OBJECTS = $(am_nsslinktest_OBJECTS)
nsslinktest_DEPENDENCIES =  \
	../tools/nss/libnss_libvirt_impl.la
nsslinktest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nsslinktest_CFLAGS) \
	$(CFLAGS) $(nsslinktest_LDFLAGS) $(LDFLAGS) -o $@
am__nsstest_SOURCES_DIST = nsstest.c testutils.h testutils.c
am_nsstest_OBJECTS = nsstest-nsstest.$(OBJEXT) \
	nsstest-testutils.$(OBJEXT)
nsstest_OBJECTS = $(am_nsstest_OBJECTS)
nsstest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	../tools/nss/libnss_libvirt_impl.la
nsstest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(nsstest_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__nwfilterebiptablestest_SOURCES_DIST = nwfilterebiptablestest.c \
	testutils.c testutils.h
am_nwfilterebiptablestest_OBJECTS =  \
	nwfilterebiptablestest.$(OBJEXT) \
	testutils.$(OBJEXT)
nwfilterebiptablestest_OBJECTS = $(am_nwfilterebiptablestest_OBJECTS)
nwfilterebiptablestest_DEPENDENCIES =  \
	../src/libvirt_driver_nwfilter_impl.la \
	$(am__DEPENDENCIES_2)
am__nwfilterxml2firewalltest_SOURCES_DIST =  \
	nwfilterxml2firewalltest.c testutils.c testutils.h
am_nwfilterxml2firewalltest_OBJECTS =  \
	nwfilterxml2firewalltest.$(OBJEXT) \
	testutils.$(OBJEXT)
nwfilterxml2firewalltest_OBJECTS =  \
	$(am_nwfilterxml2firewalltest_OBJECTS)
nwfilterxml2firewalltest_DEPENDENCIES =  \
	../src/libvirt_driver_nwfilter_impl.la \
	$(am__DEPENDENCIES_2)
am_nwfilterxml2xmltest_OBJECTS = nwfilterxml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
nwfilterxml2xmltest_OBJECTS = $(am_nwfilterxml2xmltest_OBJECTS)
nwfilterxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_objecteventtest_OBJECTS = objecteventtest.$(OBJEXT) \
	testutils.$(OBJEXT)
objecteventtest_OBJECTS = $(am_objecteventtest_OBJECTS)
objecteventtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__objectlocking_SOURCES_DIST = objectlocking.ml
am_objectlocking_OBJECTS =
objectlocking_OBJECTS = $(am_objectlocking_OBJECTS)
objectlocking_LDADD = $(LDADD)
am__openvzutilstest_SOURCES_DIST = openvzutilstest.c testutils.c \
	testutils.h
am_openvzutilstest_OBJECTS =  \
	openvzutilstest.$(OBJEXT) \
	testutils.$(OBJEXT)
openvzutilstest_OBJECTS = $(am_openvzutilstest_OBJECTS)
openvzutilstest_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am__qemuagenttest_SOURCES_DIST = qemuagenttest.c testutils.c \
	testutils.h testutilsqemu.c testutilsqemu.h
am_qemuagenttest_OBJECTS = qemuagenttest.$(OBJEXT) \
	testutils.$(OBJEXT) testutilsqemu.$(OBJEXT)
qemuagenttest_OBJECTS = $(am_qemuagenttest_OBJECTS)
qemuagenttest_DEPENDENCIES =  \
	libqemumonitortestutils.la $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemuargv2xmltest_SOURCES_DIST = qemuargv2xmltest.c testutilsqemu.c \
	testutilsqemu.h testutils.c testutils.h
am_qemuargv2xmltest_OBJECTS =  \
	qemuargv2xmltest.$(OBJEXT) \
	testutilsqemu.$(OBJEXT) testutils.$(OBJEXT)
qemuargv2xmltest_OBJECTS = $(am_qemuargv2xmltest_OBJECTS)
qemuargv2xmltest_DEPENDENCIES = $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemucapabilitiestest_SOURCES_DIST = qemucapabilitiestest.c \
	testutils.c testutils.h testutilsqemu.c testutilsqemu.h
am_qemucapabilitiestest_OBJECTS =  \
	qemucapabilitiestest.$(OBJEXT) \
	testutils.$(OBJEXT) testutilsqemu.$(OBJEXT)
qemucapabilitiestest_OBJECTS = $(am_qemucapabilitiestest_OBJECTS)
qemucapabilitiestest_DEPENDENCIES =  \
	libqemumonitortestutils.la $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemucaps2xmltest_SOURCES_DIST = qemucaps2xmltest.c testutils.c \
	testutils.h
am_qemucaps2xmltest_OBJECTS =  \
	qemucaps2xmltest.$(OBJEXT) testutils.$(OBJEXT)
qemucaps2xmltest_OBJECTS = $(am_qemucaps2xmltest_OBJECTS)
qemucaps2xmltest_DEPENDENCIES = $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemucapsprobe_SOURCES_DIST = qemucapsprobe.c
am_qemucapsprobe_OBJECTS = qemucapsprobe.$(OBJEXT)
qemucapsprobe_OBJECTS = $(am_qemucapsprobe_OBJECTS)
qemucapsprobe_DEPENDENCIES = libqemutestdriver.la \
	$(am__DEPENDENCIES_2)
am__qemucommandutiltest_SOURCES_DIST = qemucommandutiltest.c \
	testutils.c testutils.h testutilsqemu.c testutilsqemu.h
am_qemucommandutiltest_OBJECTS =  \
	qemucommandutiltest.$(OBJEXT) \
	testutils.$(OBJEXT) testutilsqemu.$(OBJEXT)
qemucommandutiltest_OBJECTS = $(am_qemucommandutiltest_OBJECTS)
qemucommandutiltest_DEPENDENCIES =  \
	libqemumonitortestutils.la $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemuhelptest_SOURCES_DIST = qemuhelptest.c testutils.c testutils.h
am_qemuhelptest_OBJECTS = qemuhelptest.$(OBJEXT) \
	testutils.$(OBJEXT)
qemuhelptest_OBJECTS = $(am_qemuhelptest_OBJECTS)
qemuhelptest_DEPENDENCIES = $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemuhotplugtest_SOURCES_DIST = qemuhotplugtest.c testutils.c \
	testutils.h testutilsqemu.c testutilsqemu.h
am_qemuhotplugtest_OBJECTS =  \
	qemuhotplugtest.$(OBJEXT) testutils.$(OBJEXT) \
	testutilsqemu.$(OBJEXT)
qemuhotplugtest_OBJECTS = $(am_qemuhotplugtest_OBJECTS)
qemuhotplugtest_DEPENDENCIES =  \
	libqemumonitortestutils.la $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemumemlocktest_SOURCES_DIST = qemumemlocktest.c testutilsqemu.c \
	testutilsqemu.h testutils.c testutils.h
am_qemumemlocktest_OBJECTS =  \
	qemumemlocktest.$(OBJEXT) \
	testutilsqemu.$(OBJEXT) testutils.$(OBJEXT)
qemumemlocktest_OBJECTS = $(am_qemumemlocktest_OBJECTS)
qemumemlocktest_DEPENDENCIES = $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemumonitorjsontest_SOURCES_DIST = qemumonitorjsontest.c \
	testutils.c testutils.h testutilsqemu.c testutilsqemu.h
am_qemumonitorjsontest_OBJECTS =  \
	qemumonitorjsontest.$(OBJEXT) \
	testutils.$(OBJEXT) testutilsqemu.$(OBJEXT)
qemumonitorjsontest_OBJECTS = $(am_qemumonitorjsontest_OBJECTS)
qemumonitorjsontest_DEPENDENCIES =  \
	libqemumonitortestutils.la $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemumonitortest_SOURCES_DIST = qemumonitortest.c testutils.c \
	testutils.h testutilsqemu.c testutilsqemu.h
am_qemumonitortest_OBJECTS =  \
	qemumonitortest.$(OBJEXT) testutils.$(OBJEXT) \
	testutilsqemu.$(OBJEXT)
qemumonitortest_OBJECTS = $(am_qemumonitortest_OBJECTS)
qemumonitortest_DEPENDENCIES =  \
	libqemumonitortestutils.la $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__qemuxml2argvtest_SOURCES_DIST = qemuxml2argvtest.c testutilsqemu.c \
	testutilsqemu.h testutils.c testutils.h
am_qemuxml2argvtest_OBJECTS =  \
	qemuxml2argvtest.$(OBJEXT) \
	testutilsqemu.$(OBJEXT) testutils.$(OBJEXT)
qemuxml2argvtest_OBJECTS = $(am_qemuxml2argvtest_OBJECTS)
qemuxml2argvtest_DEPENDENCIES = libqemutestdriver.la \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
am__qemuxml2xmltest_SOURCES_DIST = qemuxml2xmltest.c testutilsqemu.c \
	testutilsqemu.h testutils.c testutils.h
am_qemuxml2xmltest_OBJECTS =  \
	qemuxml2xmltest.$(OBJEXT) \
	testutilsqemu.$(OBJEXT) testutils.$(OBJEXT)
qemuxml2xmltest_OBJECTS = $(am_qemuxml2xmltest_OBJECTS)
qemuxml2xmltest_DEPENDENCIES = $(qemu_LDADDS) \
	$(am__DEPENDENCIES_2)
am__scsihosttest_SOURCES_DIST = scsihosttest.c testutils.h testutils.c
am_scsihosttest_OBJECTS = scsihosttest.$(OBJEXT) \
	testutils.$(OBJEXT)
scsihosttest_OBJECTS = $(am_scsihosttest_OBJECTS)
scsihosttest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_seclabeltest_OBJECTS = seclabeltest.$(OBJEXT) testutils.$(OBJEXT)
seclabeltest_OBJECTS = $(am_seclabeltest_OBJECTS)
seclabeltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_secretxml2xmltest_OBJECTS = secretxml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
secretxml2xmltest_OBJECTS = $(am_secretxml2xmltest_OBJECTS)
secretxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__securityselinuxlabeltest_SOURCES_DIST =  \
	securityselinuxlabeltest.c testutils.h testutils.c \
	testutilsqemu.h testutilsqemu.c
am_securityselinuxlabeltest_OBJECTS = securityselinuxlabeltest.$(OBJEXT) \
	testutils.$(OBJEXT) \
	testutilsqemu.$(OBJEXT)
securityselinuxlabeltest_OBJECTS =  \
	$(am_securityselinuxlabeltest_OBJECTS)
am__securityselinuxtest_SOURCES_DIST = securityselinuxtest.c \
	testutils.h testutils.c
am_securityselinuxtest_OBJECTS = securityselinuxtest.$(OBJEXT) \
	testutils.$(OBJEXT)
securityselinuxtest_OBJECTS = $(am_securityselinuxtest_OBJECTS)
am__sexpr2xmltest_SOURCES_DIST = sexpr2xmltest.c testutilsxen.c \
	testutilsxen.h testutils.c testutils.h
#am_sexpr2xmltest_OBJECTS = sexpr2xmltest.$(OBJEXT) \
#	testutilsxen.$(OBJEXT) testutils.$(OBJEXT)
sexpr2xmltest_OBJECTS = $(am_sexpr2xmltest_OBJECTS)
#am__DEPENDENCIES_6 = ../src/libvirt_driver_xen_impl.la \
#	$(am__DEPENDENCIES_2)
#sexpr2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_6)
am_shunloadtest_OBJECTS = shunloadtest.$(OBJEXT)
shunloadtest_OBJECTS = $(am_shunloadtest_OBJECTS)
am_sockettest_OBJECTS = sockettest.$(OBJEXT) testutils.$(OBJEXT)
sockettest_OBJECTS = $(am_sockettest_OBJECTS)
sockettest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_ssh_OBJECTS = ssh.$(OBJEXT)
ssh_OBJECTS = $(am_ssh_OBJECTS)
ssh_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__storagebackendsheepdogtest_SOURCES_DIST =  \
	storagebackendsheepdogtest.c testutils.c testutils.h
#am_storagebackendsheepdogtest_OBJECTS = storagebackendsheepdogtest.$(OBJEXT) \
#	testutils.$(OBJEXT)
storagebackendsheepdogtest_OBJECTS =  \
	$(am_storagebackendsheepdogtest_OBJECTS)
#storagebackendsheepdogtest_DEPENDENCIES = ../src/libvirt_driver_storage_impl.la \
#	../src/libvirt_storage_backend_sheepdog_priv.la \
#	$(am__DEPENDENCIES_2)
am_storagepoolxml2xmltest_OBJECTS = storagepoolxml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
storagepoolxml2xmltest_OBJECTS = $(am_storagepoolxml2xmltest_OBJECTS)
storagepoolxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__storagevolxml2argvtest_SOURCES_DIST = storagevolxml2argvtest.c \
	testutils.c testutils.h
am_storagevolxml2argvtest_OBJECTS =  \
	storagevolxml2argvtest.$(OBJEXT) \
	testutils.$(OBJEXT)
storagevolxml2argvtest_OBJECTS = $(am_storagevolxml2argvtest_OBJECTS)
storagevolxml2argvtest_DEPENDENCIES =  \
	$(am__DEPENDENCIES_1) \
	../src/libvirt_driver_storage_impl.la \
	../src/libvirt_conf.la \
	../src/libvirt_util.la \
	$(am__DEPENDENCIES_2)
am_storagevolxml2xmltest_OBJECTS = storagevolxml2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
storagevolxml2xmltest_OBJECTS = $(am_storagevolxml2xmltest_OBJECTS)
storagevolxml2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_sysinfotest_OBJECTS = sysinfotest.$(OBJEXT) testutils.$(OBJEXT)
sysinfotest_OBJECTS = $(am_sysinfotest_OBJECTS)
sysinfotest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_utiltest_OBJECTS = utiltest.$(OBJEXT) testutils.$(OBJEXT)
utiltest_OBJECTS = $(am_utiltest_OBJECTS)
utiltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__vboxsnapshotxmltest_SOURCES_DIST = vboxsnapshotxmltest.c \
	testutils.c testutils.h
am_vboxsnapshotxmltest_OBJECTS =  \
	vboxsnapshotxmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
vboxsnapshotxmltest_OBJECTS = $(am_vboxsnapshotxmltest_OBJECTS)
vboxsnapshotxmltest_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2) $(vbox_LDADDS)
am_viralloctest_OBJECTS = viralloctest.$(OBJEXT) testutils.$(OBJEXT)
viralloctest_OBJECTS = $(am_viralloctest_OBJECTS)
viralloctest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_viratomictest_OBJECTS = viratomictest.$(OBJEXT) testutils.$(OBJEXT)
viratomictest_OBJECTS = $(am_viratomictest_OBJECTS)
viratomictest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virauthconfigtest_OBJECTS = virauthconfigtest.$(OBJEXT) \
	testutils.$(OBJEXT)
virauthconfigtest_OBJECTS = $(am_virauthconfigtest_OBJECTS)
virauthconfigtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virbitmaptest_OBJECTS = virbitmaptest.$(OBJEXT) testutils.$(OBJEXT)
virbitmaptest_OBJECTS = $(am_virbitmaptest_OBJECTS)
virbitmaptest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virbuftest_OBJECTS = virbuftest.$(OBJEXT) testutils.$(OBJEXT)
virbuftest_OBJECTS = $(am_virbuftest_OBJECTS)
virbuftest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__vircaps2xmltest_SOURCES_DIST = vircaps2xmltest.c testutils.h \
	testutils.c virfilewrapper.h virfilewrapper.c
am_vircaps2xmltest_OBJECTS =  \
	vircaps2xmltest.$(OBJEXT) testutils.$(OBJEXT) \
	virfilewrapper.$(OBJEXT)
vircaps2xmltest_OBJECTS = $(am_vircaps2xmltest_OBJECTS)
vircaps2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__vircapstest_SOURCES_DIST = vircapstest.c testutils.h testutils.c \
	testutilslxc.c testutilslxc.h testutilsqemu.c testutilsqemu.h \
	testutilsxen.c testutilsxen.h
am__objects_4 = testutilslxc.$(OBJEXT)
#am__objects_5 = testutilsxen.$(OBJEXT)
am_vircapstest_OBJECTS = vircapstest.$(OBJEXT) testutils.$(OBJEXT) \
	$(am__objects_4) $(am__objects_2) $(am__objects_5)
vircapstest_OBJECTS = $(am_vircapstest_OBJECTS)
vircapstest_DEPENDENCIES = $(qemu_LDADDS) $(am__DEPENDENCIES_2)
am_vircgrouptest_OBJECTS = vircgrouptest.$(OBJEXT) testutils.$(OBJEXT)
vircgrouptest_OBJECTS = $(am_vircgrouptest_OBJECTS)
vircgrouptest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virconftest_OBJECTS = virconftest.$(OBJEXT) testutils.$(OBJEXT)
virconftest_OBJECTS = $(am_virconftest_OBJECTS)
virconftest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_vircryptotest_OBJECTS = vircryptotest.$(OBJEXT) testutils.$(OBJEXT)
vircryptotest_OBJECTS = $(am_vircryptotest_OBJECTS)
vircryptotest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__virdbustest_SOURCES_DIST = virdbustest.c testutils.h testutils.c
am_virdbustest_OBJECTS =  \
	virdbustest-virdbustest.$(OBJEXT) \
	virdbustest-testutils.$(OBJEXT)
virdbustest_OBJECTS = $(am_virdbustest_OBJECTS)
virdbustest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
virdbustest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(virdbustest_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am__virdrivermoduletest_SOURCES_DIST = virdrivermoduletest.c \
	testutils.h testutils.c
am_virdrivermoduletest_OBJECTS =  \
	virdrivermoduletest.$(OBJEXT) \
	testutils.$(OBJEXT)
virdrivermoduletest_OBJECTS = $(am_virdrivermoduletest_OBJECTS)
virdrivermoduletest_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2)
am_virendiantest_OBJECTS = virendiantest.$(OBJEXT) testutils.$(OBJEXT)
virendiantest_OBJECTS = $(am_virendiantest_OBJECTS)
virendiantest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virfilecachetest_OBJECTS = virfilecachetest.$(OBJEXT) \
	testutils.$(OBJEXT)
virfilecachetest_OBJECTS = $(am_virfilecachetest_OBJECTS)
virfilecachetest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virfiletest_OBJECTS = virfiletest.$(OBJEXT) testutils.$(OBJEXT)
virfiletest_OBJECTS = $(am_virfiletest_OBJECTS)
virfiletest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virfirewalltest_OBJECTS =  \
	virfirewalltest-virfirewalltest.$(OBJEXT) \
	virfirewalltest-testutils.$(OBJEXT)
virfirewalltest_OBJECTS = $(am_virfirewalltest_OBJECTS)
virfirewalltest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
virfirewalltest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virfirewalltest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_virhashtest_OBJECTS = virhashtest.$(OBJEXT) testutils.$(OBJEXT)
virhashtest_OBJECTS = $(am_virhashtest_OBJECTS)
virhashtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virhostcputest_OBJECTS = virhostcputest.$(OBJEXT) \
	testutils.$(OBJEXT) virfilewrapper.$(OBJEXT)
virhostcputest_OBJECTS = $(am_virhostcputest_OBJECTS)
virhostcputest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virhostdevtest_OBJECTS = virhostdevtest.$(OBJEXT) \
	testutils.$(OBJEXT)
virhostdevtest_OBJECTS = $(am_virhostdevtest_OBJECTS)
virhostdevtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_viridentitytest_OBJECTS = viridentitytest.$(OBJEXT) \
	testutils.$(OBJEXT)
viridentitytest_OBJECTS = $(am_viridentitytest_OBJECTS)
am__DEPENDENCIES_7 = $(am__DEPENDENCIES_1)
am_viriscsitest_OBJECTS = viriscsitest.$(OBJEXT) testutils.$(OBJEXT)
viriscsitest_OBJECTS = $(am_viriscsitest_OBJECTS)
viriscsitest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virjsontest_OBJECTS = virjsontest.$(OBJEXT) testutils.$(OBJEXT)
virjsontest_OBJECTS = $(am_virjsontest_OBJECTS)
virjsontest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virkeycodetest_OBJECTS = virkeycodetest.$(OBJEXT) \
	testutils.$(OBJEXT)
virkeycodetest_OBJECTS = $(am_virkeycodetest_OBJECTS)
virkeycodetest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virkeyfiletest_OBJECTS = virkeyfiletest.$(OBJEXT) \
	testutils.$(OBJEXT)
virkeyfiletest_OBJECTS = $(am_virkeyfiletest_OBJECTS)
virkeyfiletest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virkmodtest_OBJECTS = virkmodtest.$(OBJEXT) testutils.$(OBJEXT)
virkmodtest_OBJECTS = $(am_virkmodtest_OBJECTS)
virkmodtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virlockspacetest_OBJECTS = virlockspacetest.$(OBJEXT) \
	testutils.$(OBJEXT)
virlockspacetest_OBJECTS = $(am_virlockspacetest_OBJECTS)
virlockspacetest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virlogtest_OBJECTS = virlogtest.$(OBJEXT) testutils.$(OBJEXT)
virlogtest_OBJECTS = $(am_virlogtest_OBJECTS)
virlogtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__virmacmaptest_SOURCES_DIST = virmacmaptest.c testutils.h \
	testutils.c
am_virmacmaptest_OBJECTS = virmacmaptest.$(OBJEXT) \
	testutils.$(OBJEXT)
virmacmaptest_OBJECTS = $(am_virmacmaptest_OBJECTS)
virmacmaptest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virnetdaemontest_OBJECTS =  \
	virnetdaemontest-virnetdaemontest.$(OBJEXT) \
	virnetdaemontest-testutils.$(OBJEXT)
virnetdaemontest_OBJECTS = $(am_virnetdaemontest_OBJECTS)
virnetdaemontest_DEPENDENCIES = $(am__DEPENDENCIES_2)
virnetdaemontest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnetdaemontest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am__virnetdevbandwidthtest_SOURCES_DIST = virnetdevbandwidthtest.c \
	testutils.h testutils.c
am_virnetdevbandwidthtest_OBJECTS =  \
	virnetdevbandwidthtest.$(OBJEXT) \
	testutils.$(OBJEXT)
virnetdevbandwidthtest_OBJECTS = $(am_virnetdevbandwidthtest_OBJECTS)
virnetdevbandwidthtest_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1)
am_virnetdevtest_OBJECTS = virnetdevtest-virnetdevtest.$(OBJEXT) \
	virnetdevtest-testutils.$(OBJEXT)
virnetdevtest_OBJECTS = $(am_virnetdevtest_OBJECTS)
virnetdevtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
virnetdevtest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(virnetdevtest_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_virnetmessagetest_OBJECTS =  \
	virnetmessagetest-virnetmessagetest.$(OBJEXT) \
	virnetmessagetest-testutils.$(OBJEXT)
virnetmessagetest_OBJECTS = $(am_virnetmessagetest_OBJECTS)
virnetmessagetest_DEPENDENCIES = $(am__DEPENDENCIES_2)
virnetmessagetest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnetmessagetest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) \
	-o $@
am_virnetserverclienttest_OBJECTS =  \
	virnetserverclienttest-virnetserverclienttest.$(OBJEXT) \
	virnetserverclienttest-testutils.$(OBJEXT)
virnetserverclienttest_OBJECTS = $(am_virnetserverclienttest_OBJECTS)
virnetserverclienttest_DEPENDENCIES = $(am__DEPENDENCIES_2)
virnetserverclienttest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virnetserverclienttest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_virnetsockettest_OBJECTS = virnetsockettest.$(OBJEXT) \
	testutils.$(OBJEXT)
virnetsockettest_OBJECTS = $(am_virnetsockettest_OBJECTS)
virnetsockettest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__virnettlscontexttest_SOURCES_DIST = virnettlscontexttest.c \
	virnettlshelpers.h virnettlshelpers.c testutils.h testutils.c \
	pkix_asn1_tab.c
am__objects_6 =  \
	pkix_asn1_tab.$(OBJEXT)
am_virnettlscontexttest_OBJECTS =  \
	virnettlscontexttest.$(OBJEXT) \
	virnettlshelpers.$(OBJEXT) \
	testutils.$(OBJEXT) $(am__objects_6)
virnettlscontexttest_OBJECTS = $(am_virnettlscontexttest_OBJECTS)
virnettlscontexttest_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am__virnettlssessiontest_SOURCES_DIST = virnettlssessiontest.c \
	virnettlshelpers.h virnettlshelpers.c testutils.h testutils.c \
	pkix_asn1_tab.c
am_virnettlssessiontest_OBJECTS =  \
	virnettlssessiontest.$(OBJEXT) \
	virnettlshelpers.$(OBJEXT) \
	testutils.$(OBJEXT) $(am__objects_6)
virnettlssessiontest_OBJECTS = $(am_virnettlssessiontest_OBJECTS)
virnettlssessiontest_DEPENDENCIES =  \
	$(am__DEPENDENCIES_2) $(am__DEPENDENCIES_1) \
	$(am__DEPENDENCIES_1)
am_virpcitest_OBJECTS = virpcitest.$(OBJEXT) testutils.$(OBJEXT)
virpcitest_OBJECTS = $(am_virpcitest_OBJECTS)
virpcitest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__virpolkittest_SOURCES_DIST = virpolkittest.c testutils.h \
	testutils.c
am_virpolkittest_OBJECTS =  \
	virpolkittest-virpolkittest.$(OBJEXT) \
	virpolkittest-testutils.$(OBJEXT)
virpolkittest_OBJECTS = $(am_virpolkittest_OBJECTS)
virpolkittest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
virpolkittest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(virpolkittest_CFLAGS) \
	$(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
am_virportallocatortest_OBJECTS = virportallocatortest.$(OBJEXT) \
	testutils.$(OBJEXT)
virportallocatortest_OBJECTS = $(am_virportallocatortest_OBJECTS)
virportallocatortest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__virresctrltest_SOURCES_DIST = virresctrltest.c testutils.h \
	testutils.c virfilewrapper.h virfilewrapper.c
am_virresctrltest_OBJECTS = virresctrltest.$(OBJEXT) \
	testutils.$(OBJEXT) virfilewrapper.$(OBJEXT)
virresctrltest_OBJECTS = $(am_virresctrltest_OBJECTS)
virresctrltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virrotatingfiletest_OBJECTS =  \
	virrotatingfiletest-virrotatingfiletest.$(OBJEXT) \
	virrotatingfiletest-testutils.$(OBJEXT)
virrotatingfiletest_OBJECTS = $(am_virrotatingfiletest_OBJECTS)
virrotatingfiletest_DEPENDENCIES = $(am__DEPENDENCIES_2)
virrotatingfiletest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virrotatingfiletest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_virschematest_OBJECTS = virschematest.$(OBJEXT) testutils.$(OBJEXT)
virschematest_OBJECTS = $(am_virschematest_OBJECTS)
virschematest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
am__virscsitest_SOURCES_DIST = virscsitest.c testutils.h testutils.c
am_virscsitest_OBJECTS = virscsitest.$(OBJEXT) \
	testutils.$(OBJEXT)
virscsitest_OBJECTS = $(am_virscsitest_OBJECTS)
virscsitest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virshtest_OBJECTS = virshtest.$(OBJEXT) testutils.$(OBJEXT)
virshtest_OBJECTS = $(am_virshtest_OBJECTS)
virshtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virstoragetest_OBJECTS = virstoragetest.$(OBJEXT) \
	testutils.$(OBJEXT)
virstoragetest_OBJECTS = $(am_virstoragetest_OBJECTS)
virstoragetest_DEPENDENCIES = $(am__DEPENDENCIES_2) ../src/libvirt.la \
	../src/libvirt_conf.la ../src/libvirt_util.la \
	../src/libvirt_driver_storage_impl.la ../gnulib/lib/libgnu.la
am__virstorageutiltest_SOURCES_DIST = virstorageutiltest.c testutils.c \
	testutils.h
am_virstorageutiltest_OBJECTS =  \
	virstorageutiltest.$(OBJEXT) \
	testutils.$(OBJEXT)
virstorageutiltest_OBJECTS = $(am_virstorageutiltest_OBJECTS)
virstorageutiltest_DEPENDENCIES =  \
	../src/libvirt_driver_storage_impl.la \
	$(am__DEPENDENCIES_2)
am_virstringtest_OBJECTS = virstringtest.$(OBJEXT) testutils.$(OBJEXT)
virstringtest_OBJECTS = $(am_virstringtest_OBJECTS)
virstringtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__virsystemdtest_SOURCES_DIST = virsystemdtest.c testutils.h \
	testutils.c
am_virsystemdtest_OBJECTS =  \
	virsystemdtest-virsystemdtest.$(OBJEXT) \
	virsystemdtest-testutils.$(OBJEXT)
virsystemdtest_OBJECTS = $(am_virsystemdtest_OBJECTS)
virsystemdtest_DEPENDENCIES = $(am__DEPENDENCIES_2) \
	$(am__DEPENDENCIES_1)
virsystemdtest_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CCLD) \
	$(virsystemdtest_CFLAGS) $(CFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o \
	$@
am_virtimetest_OBJECTS = virtimetest.$(OBJEXT) testutils.$(OBJEXT)
virtimetest_OBJECTS = $(am_virtimetest_OBJECTS)
virtimetest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_virtypedparamtest_OBJECTS = virtypedparamtest.$(OBJEXT) \
	testutils.$(OBJEXT)
virtypedparamtest_OBJECTS = $(am_virtypedparamtest_OBJECTS)
virtypedparamtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am_viruritest_OBJECTS = viruritest.$(OBJEXT) testutils.$(OBJEXT)
viruritest_OBJECTS = $(am_viruritest_OBJECTS)
viruritest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__virusbtest_SOURCES_DIST = virusbtest.c testutils.h testutils.c
am_virusbtest_OBJECTS = virusbtest.$(OBJEXT) \
	testutils.$(OBJEXT)
virusbtest_OBJECTS = $(am_virusbtest_OBJECTS)
virusbtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__vmwarevertest_SOURCES_DIST = vmwarevertest.c testutils.c \
	testutils.h
am_vmwarevertest_OBJECTS = vmwarevertest.$(OBJEXT) \
	testutils.$(OBJEXT)
vmwarevertest_OBJECTS = $(am_vmwarevertest_OBJECTS)
vmwarevertest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__vmx2xmltest_SOURCES_DIST = vmx2xmltest.c testutils.c testutils.h
am_vmx2xmltest_OBJECTS = vmx2xmltest.$(OBJEXT) \
	testutils.$(OBJEXT)
vmx2xmltest_OBJECTS = $(am_vmx2xmltest_OBJECTS)
vmx2xmltest_DEPENDENCIES = $(am__DEPENDENCIES_2)
am__xencapstest_SOURCES_DIST = xencapstest.c testutils.h testutils.c
#am_xencapstest_OBJECTS = xencapstest.$(OBJEXT) \
#	testutils.$(OBJEXT)
xencapstest_OBJECTS = $(am_xencapstest_OBJECTS)
#xencapstest_DEPENDENCIES = $(am__DEPENDENCIES_6)
am__xlconfigtest_SOURCES_DIST = xlconfigtest.c testutilsxen.c \
	testutilsxen.h testutils.c testutils.h
#am_xlconfigtest_OBJECTS = xlconfigtest.$(OBJEXT) \
#	testutilsxen.$(OBJEXT) testutils.$(OBJEXT)
xlconfigtest_OBJECTS = $(am_xlconfigtest_OBJECTS)
#xlconfigtest_DEPENDENCIES = $(am__DEPENDENCIES_4)
am__xmconfigtest_SOURCES_DIST = xmconfigtest.c testutilsxen.c \
	testutilsxen.h testutils.c testutils.h
#am_xmconfigtest_OBJECTS = xmconfigtest.$(OBJEXT) \
#	testutilsxen.$(OBJEXT) testutils.$(OBJEXT)
xmconfigtest_OBJECTS = $(am_xmconfigtest_OBJECTS)
#xmconfigtest_DEPENDENCIES = $(am__DEPENDENCIES_6)
am__xml2sexprtest_SOURCES_DIST = xml2sexprtest.c testutilsxen.c \
	testutilsxen.h testutils.c testutils.h
#am_xml2sexprtest_OBJECTS = xml2sexprtest.$(OBJEXT) \
#	testutilsxen.$(OBJEXT) testutils.$(OBJEXT)
xml2sexprtest_OBJECTS = $(am_xml2sexprtest_OBJECTS)
#xml2sexprtest_DEPENDENCIES = $(am__DEPENDENCIES_6)
am__xml2vmxtest_SOURCES_DIST = xml2vmxtest.c testutils.c testutils.h
am_xml2vmxtest_OBJECTS = xml2vmxtest.$(OBJEXT) \
	testutils.$(OBJEXT)
xml2vmxtest_OBJECTS = $(am_xml2vmxtest_OBJECTS)
xml2vmxtest_DEPENDENCIES = $(am__DEPENDENCIES_2)
DEFAULT_INCLUDES = -I. -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/build-aux/depcomp
am__depfiles_maybe = depfiles
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC    " $@;
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD  " $@;
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN   " $@;
SOURCES = $(bhyveargv2xmlmock_la_SOURCES) \
	$(bhyvexml2argvmock_la_SOURCES) $(domaincapsmock_la_SOURCES) \
	$(libqemumonitortestutils_la_SOURCES) \
	$(libqemutestdriver_la_SOURCES) \
	$(libsecurityselinuxhelper_la_SOURCES) \
	$(libshunload_la_SOURCES) $(nssmock_la_SOURCES) \
	$(qemucaps2xmlmock_la_SOURCES) $(qemucapsprobemock_la_SOURCES) \
	$(qemucpumock_la_SOURCES) $(qemuxml2argvmock_la_SOURCES) \
	$(vircgroupmock_la_SOURCES) $(virdbusmock_la_SOURCES) \
	$(virdeterministichashmock_la_SOURCES) \
	$(virfilecachemock_la_SOURCES) $(virhostcpumock_la_SOURCES) \
	$(virmocklibxl_la_SOURCES) $(virnetdaemonmock_la_SOURCES) \
	$(virnetdevbandwidthmock_la_SOURCES) \
	$(virnetdevmock_la_SOURCES) \
	$(virnetserverclientmock_la_SOURCES) $(virnumamock_la_SOURCES) \
	$(virpcimock_la_SOURCES) $(virportallocatormock_la_SOURCES) \
	$(virrandommock_la_SOURCES) $(virtestmock_la_SOURCES) \
	$(virusbmock_la_SOURCES) $(bhyveargv2xmltest_SOURCES) \
	$(bhyvexml2argvtest_SOURCES) $(bhyvexml2xmltest_SOURCES) \
	$(commandhelper_SOURCES) $(commandtest_SOURCES) \
	$(cputest_SOURCES) $(domaincapstest_SOURCES) \
	$(domainconftest_SOURCES) $(domainsnapshotxml2xmltest_SOURCES) \
	$(esxutilstest_SOURCES) $(eventtest_SOURCES) \
	$(fchosttest_SOURCES) $(fdstreamtest_SOURCES) \
	$(genericxml2xmltest_SOURCES) $(interfacexml2xmltest_SOURCES) \
	$(libxlxml2domconfigtest_SOURCES) $(lxcconf2xmltest_SOURCES) \
	$(lxcxml2xmltest_SOURCES) $(metadatatest_SOURCES) \
	$(networkxml2conftest_SOURCES) \
	$(networkxml2firewalltest_SOURCES) \
	$(networkxml2xmltest_SOURCES) \
	$(networkxml2xmlupdatetest_SOURCES) \
	$(nodedevxml2xmltest_SOURCES) $(nssguestlinktest_SOURCES) \
	$(nssguesttest_SOURCES) $(nsslinktest_SOURCES) \
	$(nsstest_SOURCES) $(nwfilterebiptablestest_SOURCES) \
	$(nwfilterxml2firewalltest_SOURCES) \
	$(nwfilterxml2xmltest_SOURCES) $(objecteventtest_SOURCES) \
	$(objectlocking_SOURCES) $(openvzutilstest_SOURCES) \
	$(qemuagenttest_SOURCES) $(qemuargv2xmltest_SOURCES) \
	$(qemucapabilitiestest_SOURCES) $(qemucaps2xmltest_SOURCES) \
	$(qemucapsprobe_SOURCES) $(qemucommandutiltest_SOURCES) \
	$(qemuhelptest_SOURCES) $(qemuhotplugtest_SOURCES) \
	$(qemumemlocktest_SOURCES) $(qemumonitorjsontest_SOURCES) \
	$(qemumonitortest_SOURCES) $(qemuxml2argvtest_SOURCES) \
	$(qemuxml2xmltest_SOURCES) $(scsihosttest_SOURCES) \
	$(seclabeltest_SOURCES) $(secretxml2xmltest_SOURCES) \
	$(securityselinuxlabeltest_SOURCES) \
	$(securityselinuxtest_SOURCES) $(sexpr2xmltest_SOURCES) \
	$(shunloadtest_SOURCES) $(sockettest_SOURCES) $(ssh_SOURCES) \
	$(storagebackendsheepdogtest_SOURCES) \
	$(storagepoolxml2xmltest_SOURCES) \
	$(storagevolxml2argvtest_SOURCES) \
	$(storagevolxml2xmltest_SOURCES) $(sysinfotest_SOURCES) \
	$(utiltest_SOURCES) $(vboxsnapshotxmltest_SOURCES) \
	$(viralloctest_SOURCES) $(viratomictest_SOURCES) \
	$(virauthconfigtest_SOURCES) $(virbitmaptest_SOURCES) \
	$(virbuftest_SOURCES) $(vircaps2xmltest_SOURCES) \
	$(vircapstest_SOURCES) $(vircgrouptest_SOURCES) \
	$(virconftest_SOURCES) $(vircryptotest_SOURCES) \
	$(virdbustest_SOURCES) $(virdrivermoduletest_SOURCES) \
	$(virendiantest_SOURCES) $(virfilecachetest_SOURCES) \
	$(virfiletest_SOURCES) $(virfirewalltest_SOURCES) \
	$(virhashtest_SOURCES) $(virhostcputest_SOURCES) \
	$(virhostdevtest_SOURCES) $(viridentitytest_SOURCES) \
	$(viriscsitest_SOURCES) $(virjsontest_SOURCES) \
	$(virkeycodetest_SOURCES) $(virkeyfiletest_SOURCES) \
	$(virkmodtest_SOURCES) $(virlockspacetest_SOURCES) \
	$(virlogtest_SOURCES) $(virmacmaptest_SOURCES) \
	$(virnetdaemontest_SOURCES) $(virnetdevbandwidthtest_SOURCES) \
	$(virnetdevtest_SOURCES) $(virnetmessagetest_SOURCES) \
	$(virnetserverclienttest_SOURCES) $(virnetsockettest_SOURCES) \
	$(virnettlscontexttest_SOURCES) \
	$(virnettlssessiontest_SOURCES) $(virpcitest_SOURCES) \
	$(virpolkittest_SOURCES) $(virportallocatortest_SOURCES) \
	$(virresctrltest_SOURCES) $(virrotatingfiletest_SOURCES) \
	$(virschematest_SOURCES) $(virscsitest_SOURCES) \
	$(virshtest_SOURCES) $(virstoragetest_SOURCES) \
	$(virstorageutiltest_SOURCES) $(virstringtest_SOURCES) \
	$(virsystemdtest_SOURCES) $(virtimetest_SOURCES) \
	$(virtypedparamtest_SOURCES) $(viruritest_SOURCES) \
	$(virusbtest_SOURCES) $(vmwarevertest_SOURCES) \
	$(vmx2xmltest_SOURCES) $(xencapstest_SOURCES) \
	$(xlconfigtest_SOURCES) $(xmconfigtest_SOURCES) \
	$(xml2sexprtest_SOURCES) $(xml2vmxtest_SOURCES)
DIST_SOURCES = $(am__bhyveargv2xmlmock_la_SOURCES_DIST) \
	$(am__bhyvexml2argvmock_la_SOURCES_DIST) \
	$(domaincapsmock_la_SOURCES) \
	$(am__libqemumonitortestutils_la_SOURCES_DIST) \
	$(libqemutestdriver_la_SOURCES) \
	$(am__libsecurityselinuxhelper_la_SOURCES_DIST) \
	$(libshunload_la_SOURCES) $(am__nssmock_la_SOURCES_DIST) \
	$(am__qemucaps2xmlmock_la_SOURCES_DIST) \
	$(am__qemucapsprobemock_la_SOURCES_DIST) \
	$(am__qemucpumock_la_SOURCES_DIST) \
	$(am__qemuxml2argvmock_la_SOURCES_DIST) \
	$(vircgroupmock_la_SOURCES) $(am__virdbusmock_la_SOURCES_DIST) \
	$(virdeterministichashmock_la_SOURCES) \
	$(virfilecachemock_la_SOURCES) $(virhostcpumock_la_SOURCES) \
	$(am__virmocklibxl_la_SOURCES_DIST) \
	$(virnetdaemonmock_la_SOURCES) \
	$(am__virnetdevbandwidthmock_la_SOURCES_DIST) \
	$(virnetdevmock_la_SOURCES) \
	$(virnetserverclientmock_la_SOURCES) \
	$(am__virnumamock_la_SOURCES_DIST) $(virpcimock_la_SOURCES) \
	$(virportallocatormock_la_SOURCES) $(virrandommock_la_SOURCES) \
	$(am__virtestmock_la_SOURCES_DIST) \
	$(am__virusbmock_la_SOURCES_DIST) \
	$(am__bhyveargv2xmltest_SOURCES_DIST) \
	$(am__bhyvexml2argvtest_SOURCES_DIST) \
	$(am__bhyvexml2xmltest_SOURCES_DIST) $(commandhelper_SOURCES) \
	$(commandtest_SOURCES) $(am__cputest_SOURCES_DIST) \
	$(am__domaincapstest_SOURCES_DIST) $(domainconftest_SOURCES) \
	$(am__domainsnapshotxml2xmltest_SOURCES_DIST) \
	$(am__esxutilstest_SOURCES_DIST) $(am__eventtest_SOURCES_DIST) \
	$(am__fchosttest_SOURCES_DIST) $(fdstreamtest_SOURCES) \
	$(genericxml2xmltest_SOURCES) $(interfacexml2xmltest_SOURCES) \
	$(am__libxlxml2domconfigtest_SOURCES_DIST) \
	$(am__lxcconf2xmltest_SOURCES_DIST) \
	$(am__lxcxml2xmltest_SOURCES_DIST) $(metadatatest_SOURCES) \
	$(am__networkxml2conftest_SOURCES_DIST) \
	$(am__networkxml2firewalltest_SOURCES_DIST) \
	$(networkxml2xmltest_SOURCES) \
	$(networkxml2xmlupdatetest_SOURCES) \
	$(nodedevxml2xmltest_SOURCES) \
	$(am__nssguestlinktest_SOURCES_DIST) \
	$(am__nssguesttest_SOURCES_DIST) \
	$(am__nsslinktest_SOURCES_DIST) $(am__nsstest_SOURCES_DIST) \
	$(am__nwfilterebiptablestest_SOURCES_DIST) \
	$(am__nwfilterxml2firewalltest_SOURCES_DIST) \
	$(nwfilterxml2xmltest_SOURCES) $(objecteventtest_SOURCES) \
	$(am__objectlocking_SOURCES_DIST) \
	$(am__openvzutilstest_SOURCES_DIST) \
	$(am__qemuagenttest_SOURCES_DIST) \
	$(am__qemuargv2xmltest_SOURCES_DIST) \
	$(am__qemucapabilitiestest_SOURCES_DIST) \
	$(am__qemucaps2xmltest_SOURCES_DIST) \
	$(am__qemucapsprobe_SOURCES_DIST) \
	$(am__qemucommandutiltest_SOURCES_DIST) \
	$(am__qemuhelptest_SOURCES_DIST) \
	$(am__qemuhotplugtest_SOURCES_DIST) \
	$(am__qemumemlocktest_SOURCES_DIST) \
	$(am__qemumonitorjsontest_SOURCES_DIST) \
	$(am__qemumonitortest_SOURCES_DIST) \
	$(am__qemuxml2argvtest_SOURCES_DIST) \
	$(am__qemuxml2xmltest_SOURCES_DIST) \
	$(am__scsihosttest_SOURCES_DIST) $(seclabeltest_SOURCES) \
	$(secretxml2xmltest_SOURCES) \
	$(am__securityselinuxlabeltest_SOURCES_DIST) \
	$(am__securityselinuxtest_SOURCES_DIST) \
	$(am__sexpr2xmltest_SOURCES_DIST) $(shunloadtest_SOURCES) \
	$(sockettest_SOURCES) $(ssh_SOURCES) \
	$(am__storagebackendsheepdogtest_SOURCES_DIST) \
	$(storagepoolxml2xmltest_SOURCES) \
	$(am__storagevolxml2argvtest_SOURCES_DIST) \
	$(storagevolxml2xmltest_SOURCES) $(sysinfotest_SOURCES) \
	$(utiltest_SOURCES) $(am__vboxsnapshotxmltest_SOURCES_DIST) \
	$(viralloctest_SOURCES) $(viratomictest_SOURCES) \
	$(virauthconfigtest_SOURCES) $(virbitmaptest_SOURCES) \
	$(virbuftest_SOURCES) $(am__vircaps2xmltest_SOURCES_DIST) \
	$(am__vircapstest_SOURCES_DIST) $(vircgrouptest_SOURCES) \
	$(virconftest_SOURCES) $(vircryptotest_SOURCES) \
	$(am__virdbustest_SOURCES_DIST) \
	$(am__virdrivermoduletest_SOURCES_DIST) \
	$(virendiantest_SOURCES) $(virfilecachetest_SOURCES) \
	$(virfiletest_SOURCES) $(virfirewalltest_SOURCES) \
	$(virhashtest_SOURCES) $(virhostcputest_SOURCES) \
	$(virhostdevtest_SOURCES) $(viridentitytest_SOURCES) \
	$(viriscsitest_SOURCES) $(virjsontest_SOURCES) \
	$(virkeycodetest_SOURCES) $(virkeyfiletest_SOURCES) \
	$(virkmodtest_SOURCES) $(virlockspacetest_SOURCES) \
	$(virlogtest_SOURCES) $(am__virmacmaptest_SOURCES_DIST) \
	$(virnetdaemontest_SOURCES) \
	$(am__virnetdevbandwidthtest_SOURCES_DIST) \
	$(virnetdevtest_SOURCES) $(virnetmessagetest_SOURCES) \
	$(virnetserverclienttest_SOURCES) $(virnetsockettest_SOURCES) \
	$(am__virnettlscontexttest_SOURCES_DIST) \
	$(am__virnettlssessiontest_SOURCES_DIST) $(virpcitest_SOURCES) \
	$(am__virpolkittest_SOURCES_DIST) \
	$(virportallocatortest_SOURCES) \
	$(am__virresctrltest_SOURCES_DIST) \
	$(virrotatingfiletest_SOURCES) $(virschematest_SOURCES) \
	$(am__virscsitest_SOURCES_DIST) $(virshtest_SOURCES) \
	$(virstoragetest_SOURCES) \
	$(am__virstorageutiltest_SOURCES_DIST) \
	$(virstringtest_SOURCES) $(am__virsystemdtest_SOURCES_DIST) \
	$(virtimetest_SOURCES) $(virtypedparamtest_SOURCES) \
	$(viruritest_SOURCES) $(am__virusbtest_SOURCES_DIST) \
	$(am__vmwarevertest_SOURCES_DIST) \
	$(am__vmx2xmltest_SOURCES_DIST) \
	$(am__xencapstest_SOURCES_DIST) \
	$(am__xlconfigtest_SOURCES_DIST) \
	$(am__xmconfigtest_SOURCES_DIST) \
	$(am__xml2sexprtest_SOURCES_DIST) \
	$(am__xml2vmxtest_SOURCES_DIST)
ETAGS = etags
CTAGS = ctags
am__tty_colors = \
red=; grn=; lgn=; blu=; std=
am__EXEEXT_35 = libvirtd-fail libvirtd-pool virsh-cpuset \
	virsh-define-dev-segfault virsh-int-overflow virsh-optparse \
	virsh-read-bufsiz virsh-read-non-seekable virsh-schedinfo \
	virsh-self-test virt-admin-self-test virsh-start \
	virsh-undefine virsh-uriprecedence virsh-vcpupin
am__EXEEXT_36 = $(am__EXEEXT_35)
am__EXEEXT_37 = $(am__EXEEXT_36) $(am__append_41)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
pkglibexecdir = ${libexecdir}/${PACKAGE}
ACLOCAL = ${SHELL} /usr/local/ulibvirt-3.9.0/build-aux/missing --run aclocal-1.11
ACL_CFLAGS = 
ACL_LIBS = -lacl
ADDR2LINE = /usr/bin/addr2line
ALLOCA = 
ALLOCA_H = alloca.h
AMTAR = ${SHELL} /usr/local/ulibvirt-3.9.0/build-aux/missing --run tar
AM_DEFAULT_VERBOSITY = 0
APPARMOR_CFLAGS = 
APPARMOR_LIBS = 
APPLE_UNIVERSAL_BUILD = 0
AR = ar
ARFLAGS = cr
AS = as
ASM_SYMBOL_PREFIX = ""
ATTR_CFLAGS = 
ATTR_LIBS = -lattr
AUDIT_CFLAGS = 
AUDIT_LIBS = -laudit
AUGPARSE = /usr/bin/augparse
AUTOCONF = ${SHELL} /usr/local/ulibvirt-3.9.0/build-aux/missing --run autoconf
AUTOHEADER = ${SHELL} /usr/local/ulibvirt-3.9.0/build-aux/missing --run autoheader
AUTOMAKE = ${SHELL} /usr/local/ulibvirt-3.9.0/build-aux/missing --run automake-1.11
AVAHI_CFLAGS = -D_REENTRANT  
AVAHI_LIBS = -lavahi-common -lavahi-client  
AWK = gawk
BHYVE = 
BHYVECTL = 
BHYVELOAD = 
BITSIZEOF_PTRDIFF_T = 
BITSIZEOF_SIG_ATOMIC_T = 
BITSIZEOF_SIZE_T = 
BITSIZEOF_WCHAR_T = 
BITSIZEOF_WINT_T = 
BLKID_CFLAGS = 
BLKID_LIBS = 
BYTESWAP_H = 
CAPNG_CFLAGS = 
CAPNG_LIBS = -lcap-ng
CC = gcc -std=gnu99
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2 -DLIBXL_API_VERSION=0x040400
CONFIG_INCLUDE = config.h
COVERAGE_CFLAGS = 
COVERAGE_LDFLAGS = 
CPP = gcc -E
CPPFLAGS = 
CURL_CFLAGS = -DCURL_DISABLE_TYPECHECK  
CURL_LIBS = -lcurl  
CYGPATH_W = echo
CYGWIN_EXTRA_LDFLAGS = 
CYGWIN_EXTRA_LIBADD = 
DBUS_CFLAGS = -I/usr/include/dbus-1.0 -I/usr/lib64/dbus-1.0/include  
DBUS_LIBS = -L/lib64 -ldbus-1 -lpthread -lrt  
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DEVMAPPER_CFLAGS =  
DEVMAPPER_LIBS = -L/lib64 -ldevmapper  
DLLTOOL = dlltool
DLOPEN_LIBS = -ldl
DMIDECODE = /usr/sbin/dmidecode
DNSMASQ = /usr/sbin/dnsmasq
DRIVER_MODULES_LDFLAGS = -export-dynamic
DRIVER_MODULES_LIBS = -ldl
DSYMUTIL = 
DTRACE = 
DUMPBIN = 
EBTABLES_PATH = /sbin/ebtables
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EMULTIHOP_HIDDEN = 
EMULTIHOP_VALUE = 
ENOLINK_HIDDEN = 
ENOLINK_VALUE = 
EOVERFLOW_HIDDEN = 
EOVERFLOW_VALUE = 
ERRNO_H = 
EXECINFO_H = 
EXEEXT = 
FGREP = /bin/grep -F
FLOAT_H = 
FNMATCH_H = fnmatch.h
FUSE_CFLAGS = 
FUSE_LIBS = 
GETADDRINFO_LIB = 
GETHOSTNAME_LIB = 
GETOPT_CDEFS_H = getopt-cdefs.h
GETOPT_H = getopt.h
GETTEXT_CPPFLAGS = 
GETTEXT_MACRO_VERSION = 0.17
GLIBC21 = yes
GLUSTERFS_CFLAGS = 
GLUSTERFS_LIBS = 
GMSGFMT = /usr/bin/msgfmt
GMSGFMT_015 = /usr/bin/msgfmt
GNULIB_ACCEPT = 1
GNULIB_ACCEPT4 = 0
GNULIB_ACOSF = 0
GNULIB_ACOSL = 0
GNULIB_ASINF = 0
GNULIB_ASINL = 0
GNULIB_ATAN2F = 0
GNULIB_ATANF = 0
GNULIB_ATANL = 0
GNULIB_ATOLL = 0
GNULIB_BIND = 1
GNULIB_BTOWC = 1
GNULIB_CALLOC_POSIX = 1
GNULIB_CANONICALIZE_FILE_NAME = 1
GNULIB_CBRT = 0
GNULIB_CBRTF = 0
GNULIB_CBRTL = 0
GNULIB_CEIL = 0
GNULIB_CEILF = 0
GNULIB_CEILL = 0
GNULIB_CHDIR = 0
GNULIB_CHOWN = 1
GNULIB_CLOSE = 1
GNULIB_CONNECT = 1
GNULIB_COPYSIGN = 0
GNULIB_COPYSIGNF = 0
GNULIB_COPYSIGNL = 0
GNULIB_COSF = 0
GNULIB_COSHF = 0
GNULIB_COSL = 0
GNULIB_CTIME = 0
GNULIB_DPRINTF = 0
GNULIB_DUP = IN_LIBVIRT_GNULIB_TESTS
GNULIB_DUP2 = 1
GNULIB_DUP3 = 0
GNULIB_DUPLOCALE = 0
GNULIB_ENVIRON = 1
GNULIB_EUIDACCESS = 0
GNULIB_EXP2 = 0
GNULIB_EXP2F = 0
GNULIB_EXP2L = 0
GNULIB_EXPF = 0
GNULIB_EXPL = 0
GNULIB_EXPLICIT_BZERO = 0
GNULIB_EXPM1 = 0
GNULIB_EXPM1F = 0
GNULIB_EXPM1L = 0
GNULIB_FABSF = 0
GNULIB_FABSL = 0
GNULIB_FACCESSAT = 0
GNULIB_FCHDIR = 0
GNULIB_FCHMODAT = 0
GNULIB_FCHOWNAT = 0
GNULIB_FCLOSE = 1
GNULIB_FCNTL = 1
GNULIB_FDATASYNC = 1
GNULIB_FDOPEN = IN_LIBVIRT_GNULIB_TESTS
GNULIB_FFLUSH = 1
GNULIB_FFS = 1
GNULIB_FFSL = 1
GNULIB_FFSLL = 0
GNULIB_FGETC = 1
GNULIB_FGETS = 1
GNULIB_FLOOR = 0
GNULIB_FLOORF = 0
GNULIB_FLOORL = 0
GNULIB_FMA = 0
GNULIB_FMAF = 0
GNULIB_FMAL = 0
GNULIB_FMOD = 0
GNULIB_FMODF = 0
GNULIB_FMODL = 0
GNULIB_FOPEN = 0
GNULIB_FORKPTY = 0
GNULIB_FPRINTF = 1
GNULIB_FPRINTF_POSIX = 0
GNULIB_FPURGE = 1
GNULIB_FPUTC = 1
GNULIB_FPUTS = 1
GNULIB_FREAD = 1
GNULIB_FREOPEN = 0
GNULIB_FREXP = 0
GNULIB_FREXPF = 0
GNULIB_FREXPL = 0
GNULIB_FSCANF = 1
GNULIB_FSEEK = 1
GNULIB_FSEEKO = 1
GNULIB_FSTAT = 1
GNULIB_FSTATAT = 0
GNULIB_FSYNC = 1
GNULIB_FTELL = 1
GNULIB_FTELLO = 1
GNULIB_FTRUNCATE = IN_LIBVIRT_GNULIB_TESTS
GNULIB_FUTIMENS = 0
GNULIB_FWRITE = 1
GNULIB_GETADDRINFO = 1
GNULIB_GETC = 1
GNULIB_GETCHAR = 1
GNULIB_GETCWD = 1
GNULIB_GETDELIM = 1
GNULIB_GETDOMAINNAME = 0
GNULIB_GETDTABLESIZE = 1
GNULIB_GETGROUPS = 1
GNULIB_GETHOSTNAME = 1
GNULIB_GETLINE = 1
GNULIB_GETLOADAVG = 0
GNULIB_GETLOGIN = 0
GNULIB_GETLOGIN_R = 0
GNULIB_GETPAGESIZE = IN_LIBVIRT_GNULIB_TESTS
GNULIB_GETPEERNAME = 1
GNULIB_GETSOCKNAME = 1
GNULIB_GETSOCKOPT = IN_LIBVIRT_GNULIB_TESTS
GNULIB_GETSUBOPT = 0
GNULIB_GETTIMEOFDAY = 1
GNULIB_GETUSERSHELL = 0
GNULIB_GL_UNISTD_H_GETOPT = 1
GNULIB_GRANTPT = IN_LIBVIRT_GNULIB_TESTS
GNULIB_GROUP_MEMBER = 0
GNULIB_HYPOT = 0
GNULIB_HYPOTF = 0
GNULIB_HYPOTL = 0
GNULIB_ILOGB = 0
GNULIB_ILOGBF = 0
GNULIB_ILOGBL = 0
GNULIB_IMAXABS = 0
GNULIB_IMAXDIV = 0
GNULIB_INET_NTOP = 1
GNULIB_INET_PTON = 1
GNULIB_IOCTL = 1
GNULIB_ISATTY = 1
GNULIB_ISBLANK = IN_LIBVIRT_GNULIB_TESTS
GNULIB_ISFINITE = 0
GNULIB_ISINF = 0
GNULIB_ISNAN = 0
GNULIB_ISNAND = 0
GNULIB_ISNANF = 0
GNULIB_ISNANL = 0
GNULIB_ISWBLANK = 0
GNULIB_ISWCTYPE = 0
GNULIB_LCHMOD = 0
GNULIB_LCHOWN = 0
GNULIB_LDEXPF = 0
GNULIB_LDEXPL = 0
GNULIB_LINK = 0
GNULIB_LINKAT = 0
GNULIB_LISTEN = 1
GNULIB_LOCALECONV = 1
GNULIB_LOCALTIME = 0
GNULIB_LOG = 0
GNULIB_LOG10 = 0
GNULIB_LOG10F = 0
GNULIB_LOG10L = 0
GNULIB_LOG1P = 0
GNULIB_LOG1PF = 0
GNULIB_LOG1PL = 0
GNULIB_LOG2 = 0
GNULIB_LOG2F = 0
GNULIB_LOG2L = 0
GNULIB_LOGB = 0
GNULIB_LOGBF = 0
GNULIB_LOGBL = 0
GNULIB_LOGF = 0
GNULIB_LOGL = 0
GNULIB_LSEEK = 1
GNULIB_LSTAT = 1
GNULIB_MALLOC_POSIX = 1
GNULIB_MBRLEN = 0
GNULIB_MBRTOWC = 1
GNULIB_MBSCASECMP = 0
GNULIB_MBSCASESTR = 0
GNULIB_MBSCHR = 0
GNULIB_MBSCSPN = 0
GNULIB_MBSINIT = 1
GNULIB_MBSLEN = 0
GNULIB_MBSNCASECMP = 0
GNULIB_MBSNLEN = 0
GNULIB_MBSNRTOWCS = 0
GNULIB_MBSPBRK = 0
GNULIB_MBSPCASECMP = 0
GNULIB_MBSRCHR = 0
GNULIB_MBSRTOWCS = 1
GNULIB_MBSSEP = 0
GNULIB_MBSSPN = 0
GNULIB_MBSSTR = 0
GNULIB_MBSTOK_R = 0
GNULIB_MBTOWC = 1
GNULIB_MEMCHR = 1
GNULIB_MEMMEM = 0
GNULIB_MEMPCPY = 0
GNULIB_MEMRCHR = 0
GNULIB_MKDIRAT = 0
GNULIB_MKDTEMP = 1
GNULIB_MKFIFO = 0
GNULIB_MKFIFOAT = 0
GNULIB_MKNOD = 0
GNULIB_MKNODAT = 0
GNULIB_MKOSTEMP = 1
GNULIB_MKOSTEMPS = 1
GNULIB_MKSTEMP = 0
GNULIB_MKSTEMPS = 0
GNULIB_MKTIME = 1
GNULIB_MODF = 0
GNULIB_MODFF = 0
GNULIB_MODFL = 0
GNULIB_NANOSLEEP = IN_LIBVIRT_GNULIB_TESTS
GNULIB_NL_LANGINFO = 1
GNULIB_NONBLOCKING = 1
GNULIB_OBSTACK_PRINTF = 0
GNULIB_OBSTACK_PRINTF_POSIX = 0
GNULIB_OPEN = 1
GNULIB_OPENAT = 0
GNULIB_OPENPTY = 1
GNULIB_OVERRIDES_STRUCT_STAT = 0
GNULIB_OVERRIDES_WINT_T = 0
GNULIB_PCLOSE = 0
GNULIB_PERROR = 1
GNULIB_PIPE = 1
GNULIB_PIPE2 = 1
GNULIB_POLL = 1
GNULIB_POPEN = 0
GNULIB_POSIX_OPENPT = 1
GNULIB_POSIX_SPAWN = 0
GNULIB_POSIX_SPAWNATTR_DESTROY = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWNATTR_GETFLAGS = 0
GNULIB_POSIX_SPAWNATTR_GETPGROUP = 0
GNULIB_POSIX_SPAWNATTR_GETSCHEDPARAM = 0
GNULIB_POSIX_SPAWNATTR_GETSCHEDPOLICY = 0
GNULIB_POSIX_SPAWNATTR_GETSIGDEFAULT = 0
GNULIB_POSIX_SPAWNATTR_GETSIGMASK = 0
GNULIB_POSIX_SPAWNATTR_INIT = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWNATTR_SETFLAGS = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWNATTR_SETPGROUP = 0
GNULIB_POSIX_SPAWNATTR_SETSCHEDPARAM = 0
GNULIB_POSIX_SPAWNATTR_SETSCHEDPOLICY = 0
GNULIB_POSIX_SPAWNATTR_SETSIGDEFAULT = 0
GNULIB_POSIX_SPAWNATTR_SETSIGMASK = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWNP = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2 = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWN_FILE_ACTIONS_DESTROY = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POSIX_SPAWN_FILE_ACTIONS_INIT = IN_LIBVIRT_GNULIB_TESTS
GNULIB_POWF = 0
GNULIB_PREAD = 0
GNULIB_PRINTF = 1
GNULIB_PRINTF_POSIX = 0
GNULIB_PSELECT = 0
GNULIB_PTHREAD_SIGMASK = 1
GNULIB_PTSNAME = IN_LIBVIRT_GNULIB_TESTS
GNULIB_PTSNAME_R = IN_LIBVIRT_GNULIB_TESTS
GNULIB_PUTC = 1
GNULIB_PUTCHAR = 1
GNULIB_PUTENV = IN_LIBVIRT_GNULIB_TESTS
GNULIB_PUTS = 1
GNULIB_PWRITE = 0
GNULIB_QSORT_R = 0
GNULIB_RAISE = 1
GNULIB_RANDOM = 0
GNULIB_RANDOM_R = 1
GNULIB_RAWMEMCHR = 1
GNULIB_READ = IN_LIBVIRT_GNULIB_TESTS
GNULIB_READLINK = 1
GNULIB_READLINKAT = 0
GNULIB_REALLOCARRAY = 0
GNULIB_REALLOC_POSIX = 1
GNULIB_REALPATH = 1
GNULIB_RECV = 1
GNULIB_RECVFROM = 0
GNULIB_REMAINDER = 0
GNULIB_REMAINDERF = 0
GNULIB_REMAINDERL = 0
GNULIB_REMOVE = 0
GNULIB_RENAME = 0
GNULIB_RENAMEAT = 0
GNULIB_RINT = 0
GNULIB_RINTF = 0
GNULIB_RINTL = 0
GNULIB_RMDIR = 0
GNULIB_ROUND = 0
GNULIB_ROUNDF = 0
GNULIB_ROUNDL = 0
GNULIB_RPMATCH = 0
GNULIB_SCANF = 1
GNULIB_SECURE_GETENV = 1
GNULIB_SELECT = 1
GNULIB_SEND = 1
GNULIB_SENDTO = 0
GNULIB_SETENV = 1
GNULIB_SETHOSTNAME = 0
GNULIB_SETLOCALE = IN_LIBVIRT_GNULIB_TESTS
GNULIB_SETSOCKOPT = 1
GNULIB_SHUTDOWN = 0
GNULIB_SIGACTION = 1
GNULIB_SIGNAL_H_SIGPIPE = 1
GNULIB_SIGNBIT = IN_LIBVIRT_GNULIB_TESTS
GNULIB_SIGPROCMASK = 1
GNULIB_SINF = 0
GNULIB_SINHF = 0
GNULIB_SINL = 0
GNULIB_SLEEP = 1
GNULIB_SNPRINTF = 1
GNULIB_SOCKET = 1
GNULIB_SPRINTF_POSIX = 0
GNULIB_SQRTF = 0
GNULIB_SQRTL = 0
GNULIB_STAT = 1
GNULIB_STDIO_H_NONBLOCKING = 1
GNULIB_STDIO_H_SIGPIPE = 1
GNULIB_STPCPY = 1
GNULIB_STPNCPY = 0
GNULIB_STRCASESTR = 0
GNULIB_STRCHRNUL = 1
GNULIB_STRDUP = 1
GNULIB_STRERROR = 1
GNULIB_STRERROR_R = 1
GNULIB_STRFTIME = 0
GNULIB_STRNCAT = 0
GNULIB_STRNDUP = 1
GNULIB_STRNLEN = 1
GNULIB_STRPBRK = 0
GNULIB_STRPTIME = 1
GNULIB_STRSEP = 1
GNULIB_STRSIGNAL = 0
GNULIB_STRSTR = 0
GNULIB_STRTOD = 0
GNULIB_STRTOIMAX = 0
GNULIB_STRTOK_R = 1
GNULIB_STRTOLL = 0
GNULIB_STRTOULL = 0
GNULIB_STRTOUMAX = 0
GNULIB_STRVERSCMP = 0
GNULIB_SYMLINK = IN_LIBVIRT_GNULIB_TESTS
GNULIB_SYMLINKAT = 0
GNULIB_SYSTEM_POSIX = 0
GNULIB_TANF = 0
GNULIB_TANHF = 0
GNULIB_TANL = 0
GNULIB_TCGETSID = 0
GNULIB_TIMEGM = 1
GNULIB_TIME_R = 1
GNULIB_TIME_RZ = 0
GNULIB_TMPFILE = 0
GNULIB_TOWCTRANS = 0
GNULIB_TRUNC = 0
GNULIB_TRUNCATE = 0
GNULIB_TRUNCF = 0
GNULIB_TRUNCL = 0
GNULIB_TTYNAME_R = 1
GNULIB_TZSET = 0
GNULIB_UNAME = 1
GNULIB_UNISTD_H_NONBLOCKING = 1
GNULIB_UNISTD_H_SIGPIPE = 1
GNULIB_UNLINK = 0
GNULIB_UNLINKAT = 0
GNULIB_UNLOCKPT = IN_LIBVIRT_GNULIB_TESTS
GNULIB_UNSETENV = 1
GNULIB_USLEEP = 1
GNULIB_UTIMENSAT = 0
GNULIB_VASPRINTF = 1
GNULIB_VDPRINTF = 0
GNULIB_VFPRINTF = 1
GNULIB_VFPRINTF_POSIX = 0
GNULIB_VFSCANF = 0
GNULIB_VPRINTF = 1
GNULIB_VPRINTF_POSIX = 0
GNULIB_VSCANF = 0
GNULIB_VSNPRINTF = 1
GNULIB_VSPRINTF_POSIX = 0
GNULIB_WAITPID = 1
GNULIB_WCPCPY = 0
GNULIB_WCPNCPY = 0
GNULIB_WCRTOMB = 1
GNULIB_WCSCASECMP = 0
GNULIB_WCSCAT = 0
GNULIB_WCSCHR = 0
GNULIB_WCSCMP = 0
GNULIB_WCSCOLL = 0
GNULIB_WCSCPY = 0
GNULIB_WCSCSPN = 0
GNULIB_WCSDUP = 0
GNULIB_WCSFTIME = 0
GNULIB_WCSLEN = 0
GNULIB_WCSNCASECMP = 0
GNULIB_WCSNCAT = 0
GNULIB_WCSNCMP = 0
GNULIB_WCSNCPY = 0
GNULIB_WCSNLEN = 0
GNULIB_WCSNRTOMBS = 0
GNULIB_WCSPBRK = 0
GNULIB_WCSRCHR = 0
GNULIB_WCSRTOMBS = 0
GNULIB_WCSSPN = 0
GNULIB_WCSSTR = 0
GNULIB_WCSTOK = 0
GNULIB_WCSWIDTH = 0
GNULIB_WCSXFRM = 0
GNULIB_WCTOB = IN_LIBVIRT_GNULIB_TESTS
GNULIB_WCTOMB = IN_LIBVIRT_GNULIB_TESTS
GNULIB_WCTRANS = 0
GNULIB_WCTYPE = 0
GNULIB_WCWIDTH = 0
GNULIB_WMEMCHR = 0
GNULIB_WMEMCMP = 0
GNULIB_WMEMCPY = 0
GNULIB_WMEMMOVE = 0
GNULIB_WMEMSET = 0
GNULIB_WRITE = IN_LIBVIRT_GNULIB_TESTS
GNULIB__EXIT = 0
GNUTLS_CFLAGS =   -DGCRYPT_NO_DEPRECATED
GNUTLS_LIBS = -lgnutls   -lgcrypt
GREP = /bin/grep
HAL_CFLAGS = 
HAL_LIBS = 
HAVE_ACCEPT4 = 1
HAVE_ACOSF = 1
HAVE_ACOSL = 1
HAVE_ARPA_INET_H = 1
HAVE_ASINF = 1
HAVE_ASINL = 1
HAVE_ATAN2F = 1
HAVE_ATANF = 1
HAVE_ATANL = 1
HAVE_ATOLL = 1
HAVE_BTOWC = 1
HAVE_C99_STDINT_H = 1
HAVE_CANONICALIZE_FILE_NAME = 1
HAVE_CBRT = 1
HAVE_CBRTF = 1
HAVE_CBRTL = 1
HAVE_CHOWN = 1
HAVE_COPYSIGN = 1
HAVE_COPYSIGNL = 1
HAVE_COSF = 1
HAVE_COSHF = 1
HAVE_COSL = 1
HAVE_CRTDEFS_H = 0
HAVE_DECL_ACOSL = 1
HAVE_DECL_ASINL = 1
HAVE_DECL_ATANL = 1
HAVE_DECL_CBRTF = 1
HAVE_DECL_CBRTL = 1
HAVE_DECL_CEILF = 1
HAVE_DECL_CEILL = 1
HAVE_DECL_COPYSIGNF = 1
HAVE_DECL_COSL = 1
HAVE_DECL_ENVIRON = 1
HAVE_DECL_EXP2 = 1
HAVE_DECL_EXP2F = 1
HAVE_DECL_EXP2L = 1
HAVE_DECL_EXPL = 1
HAVE_DECL_EXPM1L = 1
HAVE_DECL_FCHDIR = 1
HAVE_DECL_FDATASYNC = 1
HAVE_DECL_FLOORF = 1
HAVE_DECL_FLOORL = 1
HAVE_DECL_FPURGE = 0
HAVE_DECL_FREEADDRINFO = 1
HAVE_DECL_FREXPL = 1
HAVE_DECL_FSEEKO = 1
HAVE_DECL_FTELLO = 1
HAVE_DECL_GAI_STRERROR = 1
HAVE_DECL_GETADDRINFO = 1
HAVE_DECL_GETDELIM = 1
HAVE_DECL_GETDOMAINNAME = 1
HAVE_DECL_GETLINE = 1
HAVE_DECL_GETLOADAVG = 1
HAVE_DECL_GETLOGIN = 1
HAVE_DECL_GETLOGIN_R = 1
HAVE_DECL_GETNAMEINFO = 1
HAVE_DECL_GETPAGESIZE = 1
HAVE_DECL_GETUSERSHELL = 1
HAVE_DECL_IMAXABS = 1
HAVE_DECL_IMAXDIV = 1
HAVE_DECL_INET_NTOP = 1
HAVE_DECL_INET_PTON = 1
HAVE_DECL_INITSTATE = 1
HAVE_DECL_LDEXPL = 1
HAVE_DECL_LOCALTIME_R = 1
HAVE_DECL_LOG10L = 1
HAVE_DECL_LOG2 = 1
HAVE_DECL_LOG2F = 1
HAVE_DECL_LOG2L = 1
HAVE_DECL_LOGB = 1
HAVE_DECL_LOGL = 1
HAVE_DECL_MEMMEM = 1
HAVE_DECL_MEMRCHR = 1
HAVE_DECL_OBSTACK_PRINTF = 1
HAVE_DECL_REMAINDER = 1
HAVE_DECL_REMAINDERL = 1
HAVE_DECL_RINTF = 1
HAVE_DECL_ROUND = 1
HAVE_DECL_ROUNDF = 1
HAVE_DECL_ROUNDL = 1
HAVE_DECL_SETENV = 1
HAVE_DECL_SETHOSTNAME = 1
HAVE_DECL_SETSTATE = 1
HAVE_DECL_SINL = 1
HAVE_DECL_SNPRINTF = 1
HAVE_DECL_SQRTL = 1
HAVE_DECL_STRDUP = 1
HAVE_DECL_STRERROR_R = 1
HAVE_DECL_STRNCASECMP = 1
HAVE_DECL_STRNDUP = 1
HAVE_DECL_STRNLEN = 1
HAVE_DECL_STRSIGNAL = 1
HAVE_DECL_STRTOIMAX = 1
HAVE_DECL_STRTOK_R = 1
HAVE_DECL_STRTOUMAX = 1
HAVE_DECL_TANL = 1
HAVE_DECL_TCGETSID = 1
HAVE_DECL_TRUNC = 1
HAVE_DECL_TRUNCF = 1
HAVE_DECL_TRUNCL = 1
HAVE_DECL_TTYNAME_R = 1
HAVE_DECL_UNSETENV = 1
HAVE_DECL_VSNPRINTF = 1
HAVE_DECL_WCTOB = 1
HAVE_DECL_WCWIDTH = 1
HAVE_DPRINTF = 1
HAVE_DUP2 = 1
HAVE_DUP3 = 1
HAVE_DUPLOCALE = 1
HAVE_EUIDACCESS = 1
HAVE_EXPF = 1
HAVE_EXPL = 1
HAVE_EXPLICIT_BZERO = 1
HAVE_EXPM1 = 1
HAVE_EXPM1F = 1
HAVE_FABSF = 1
HAVE_FABSL = 1
HAVE_FACCESSAT = 1
HAVE_FCHDIR = 1
HAVE_FCHMODAT = 1
HAVE_FCHOWNAT = 1
HAVE_FCNTL = 1
HAVE_FDATASYNC = 1
HAVE_FEATURES_H = 1
HAVE_FFS = 1
HAVE_FFSL = 1
HAVE_FFSLL = 1
HAVE_FMA = 1
HAVE_FMAF = 1
HAVE_FMAL = 1
HAVE_FMODF = 1
HAVE_FMODL = 1
HAVE_FORKPTY = 1
HAVE_FREXPF = 1
HAVE_FSEEKO = 1
HAVE_FSTATAT = 1
HAVE_FSYNC = 1
HAVE_FTELLO = 1
HAVE_FTRUNCATE = 1
HAVE_FUTIMENS = 1
HAVE_GETDTABLESIZE = 1
HAVE_GETGROUPS = 1
HAVE_GETHOSTNAME = 1
HAVE_GETLOGIN = 1
HAVE_GETOPT_H = 1
HAVE_GETPAGESIZE = 1
HAVE_GETSUBOPT = 1
HAVE_GETTIMEOFDAY = 1
HAVE_GRANTPT = 1
HAVE_GROUP_MEMBER = 1
HAVE_HYPOTF = 1
HAVE_HYPOTL = 1
HAVE_ILOGB = 1
HAVE_ILOGBF = 1
HAVE_ILOGBL = 1
HAVE_INTTYPES_H = 1
HAVE_ISBLANK = 1
HAVE_ISNAND = 1
HAVE_ISNANF = 1
HAVE_ISNANL = 1
HAVE_ISWBLANK = 1
HAVE_ISWCNTRL = 1
HAVE_LANGINFO_CODESET = 1
HAVE_LANGINFO_ERA = 1
HAVE_LANGINFO_H = 1
HAVE_LANGINFO_T_FMT_AMPM = 1
HAVE_LANGINFO_YESEXPR = 1
HAVE_LCHMOD = 1
HAVE_LCHOWN = 1
HAVE_LDEXPF = 1
HAVE_LIBUTIL_H = 0
HAVE_LINK = 1
HAVE_LINKAT = 1
HAVE_LOG10F = 1
HAVE_LOG10L = 1
HAVE_LOG1P = 1
HAVE_LOG1PF = 1
HAVE_LOG1PL = 1
HAVE_LOGBF = 1
HAVE_LOGBL = 1
HAVE_LOGF = 1
HAVE_LOGL = 1
HAVE_LONG_LONG_INT = 1
HAVE_LSTAT = 1
HAVE_MAX_ALIGN_T = 0
HAVE_MBRLEN = 1
HAVE_MBRTOWC = 1
HAVE_MBSINIT = 1
HAVE_MBSLEN = 0
HAVE_MBSNRTOWCS = 1
HAVE_MBSRTOWCS = 1
HAVE_MEMCHR = 1
HAVE_MEMPCPY = 1
HAVE_MKDIRAT = 1
HAVE_MKDTEMP = 1
HAVE_MKFIFO = 1
HAVE_MKFIFOAT = 1
HAVE_MKNOD = 1
HAVE_MKNODAT = 1
HAVE_MKOSTEMP = 1
HAVE_MKOSTEMPS = 1
HAVE_MKSTEMP = 1
HAVE_MKSTEMPS = 1
HAVE_MODFF = 1
HAVE_MODFL = 1
HAVE_MSVC_INVALID_PARAMETER_HANDLER = 0
HAVE_NANOSLEEP = 1
HAVE_NETDB_H = 1
HAVE_NETINET_IN_H = 
HAVE_NET_IF_H = 
HAVE_NL_LANGINFO = 1
HAVE_OPENAT = 1
HAVE_OPENPTY = 1
HAVE_OS_H = 0
HAVE_PCLOSE = 1
HAVE_PIPE = 1
HAVE_PIPE2 = 1
HAVE_POLL = 1
HAVE_POLL_H = 1
HAVE_POPEN = 1
HAVE_POSIX_OPENPT = 1
HAVE_POSIX_SIGNALBLOCKING = 1
HAVE_POSIX_SPAWN = 1
HAVE_POSIX_SPAWNATTR_T = 1
HAVE_POSIX_SPAWN_FILE_ACTIONS_T = 1
HAVE_POWF = 1
HAVE_PREAD = 1
HAVE_PSELECT = 1
HAVE_PTHREAD_H = 1
HAVE_PTHREAD_SIGMASK = 1
HAVE_PTHREAD_SPINLOCK_T = 1
HAVE_PTHREAD_T = 1
HAVE_PTSNAME = 1
HAVE_PTSNAME_R = 1
HAVE_PTY_H = 1
HAVE_PWRITE = 1
HAVE_QSORT_R = 1
HAVE_RAISE = 1
HAVE_RANDOM = 1
HAVE_RANDOM_H = 0
HAVE_RANDOM_R = 1
HAVE_RAWMEMCHR = 1
HAVE_READLINK = 1
HAVE_READLINKAT = 1
HAVE_REALLOCARRAY = 1
HAVE_REALPATH = 1
HAVE_REMAINDER = 1
HAVE_REMAINDERF = 1
HAVE_RENAMEAT = 1
HAVE_RINT = 1
HAVE_RINTL = 1
HAVE_RPMATCH = 1
HAVE_SAME_LONG_DOUBLE_AS_DOUBLE = 0
HAVE_SA_FAMILY_T = 1
HAVE_SCHED_H = 
HAVE_SECURE_GETENV = 0
HAVE_SETENV = 1
HAVE_SETHOSTNAME = 1
HAVE_SIGACTION = 1
HAVE_SIGHANDLER_T = 1
HAVE_SIGINFO_T = 1
HAVE_SIGNED_SIG_ATOMIC_T = 
HAVE_SIGNED_WCHAR_T = 
HAVE_SIGNED_WINT_T = 
HAVE_SIGSET_T = 1
HAVE_SINF = 1
HAVE_SINHF = 1
HAVE_SINL = 1
HAVE_SLEEP = 1
HAVE_SPAWN_H = 1
HAVE_SQRTF = 1
HAVE_SQRTL = 1
HAVE_STDINT_H = 1
HAVE_STPCPY = 1
HAVE_STPNCPY = 1
HAVE_STRCASECMP = 1
HAVE_STRCASESTR = 1
HAVE_STRCHRNUL = 1
HAVE_STRINGS_H = 1
HAVE_STRPBRK = 1
HAVE_STRPTIME = 1
HAVE_STRSEP = 1
HAVE_STRTOD = 1
HAVE_STRTOLL = 1
HAVE_STRTOULL = 1
HAVE_STRUCT_ADDRINFO = 1
HAVE_STRUCT_RANDOM_DATA = 1
HAVE_STRUCT_SCHED_PARAM = 
HAVE_STRUCT_SIGACTION_SA_SIGACTION = 1
HAVE_STRUCT_SOCKADDR_STORAGE = 1
HAVE_STRUCT_SOCKADDR_STORAGE_SS_FAMILY = 1
HAVE_STRUCT_TIMEVAL = 1
HAVE_STRUCT_UTSNAME = 1
HAVE_STRVERSCMP = 1
HAVE_SYMLINK = 1
HAVE_SYMLINKAT = 1
HAVE_SYS_BITYPES_H = 0
HAVE_SYS_CDEFS_H = 1
HAVE_SYS_INTTYPES_H = 0
HAVE_SYS_IOCTL_H = 1
HAVE_SYS_LOADAVG_H = 0
HAVE_SYS_PARAM_H = 0
HAVE_SYS_SELECT_H = 1
HAVE_SYS_SOCKET_H = 1
HAVE_SYS_TIME_H = 1
HAVE_SYS_TYPES_H = 1
HAVE_SYS_UIO_H = 1
HAVE_SYS_UTSNAME_H = 1
HAVE_TANF = 1
HAVE_TANHF = 1
HAVE_TANL = 1
HAVE_TERMIOS_H = 1
HAVE_TIMEGM = 1
HAVE_TIMEZONE_T = 0
HAVE_TRUNCATE = 1
HAVE_TYPE_VOLATILE_SIG_ATOMIC_T = 1
HAVE_TZSET = 1
HAVE_UNAME = 1
HAVE_UNISTD_H = 1
HAVE_UNLINKAT = 1
HAVE_UNLOCKPT = 1
HAVE_UNSIGNED_LONG_LONG_INT = 1
HAVE_USLEEP = 1
HAVE_UTIL_H = 0
HAVE_UTIMENSAT = 1
HAVE_VASPRINTF = 1
HAVE_VDPRINTF = 1
HAVE_WCHAR_H = 1
HAVE_WCHAR_T = 1
HAVE_WCPCPY = 1
HAVE_WCPNCPY = 1
HAVE_WCRTOMB = 1
HAVE_WCSCASECMP = 1
HAVE_WCSCAT = 1
HAVE_WCSCHR = 1
HAVE_WCSCMP = 1
HAVE_WCSCOLL = 1
HAVE_WCSCPY = 1
HAVE_WCSCSPN = 1
HAVE_WCSDUP = 1
HAVE_WCSFTIME = 1
HAVE_WCSLEN = 1
HAVE_WCSNCASECMP = 1
HAVE_WCSNCAT = 1
HAVE_WCSNCMP = 1
HAVE_WCSNCPY = 1
HAVE_WCSNLEN = 1
HAVE_WCSNRTOMBS = 1
HAVE_WCSPBRK = 1
HAVE_WCSRCHR = 1
HAVE_WCSRTOMBS = 1
HAVE_WCSSPN = 1
HAVE_WCSSTR = 1
HAVE_WCSTOK = 1
HAVE_WCSWIDTH = 1
HAVE_WCSXFRM = 1
HAVE_WCTRANS_T = 1
HAVE_WCTYPE_H = 1
HAVE_WCTYPE_T = 1
HAVE_WINSOCK2_H = 0
HAVE_WINT_T = 1
HAVE_WMEMCHR = 1
HAVE_WMEMCMP = 1
HAVE_WMEMCPY = 1
HAVE_WMEMMOVE = 1
HAVE_WMEMSET = 1
HAVE_WS2TCPIP_H = 0
HAVE_XLOCALE_H = 1
HAVE__BOOL = 1
HAVE__EXIT = 1
HOSTENT_LIB = 
HOST_CPU = x86_64
HOST_CPU_C_ABI = x86_64
HTML_DIR = $(datadir)/doc/$(PACKAGE)-$(VERSION)/html
IFCONFIG_PATH = 
INCLUDE_NEXT = include_next
INCLUDE_NEXT_AS_FIRST_DIRECTIVE = include_next
INET_NTOP_LIB = 
INET_PTON_LIB = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INT32_MAX_LT_INTMAX_MAX = 1
INT64_MAX_EQ_LONG_MAX = 1
INTLLIBS = 
INTL_MACOSX_LIBS = 
IP6TABLES_PATH = /usr/local/sbin/ip6tables
IPTABLES_PATH = /usr/local/sbin/iptables
IP_PATH = /sbin/ip
ISCSIADM = /sbin/iscsiadm
LD = /usr/bin/ld
LDEXP_LIBM = 
LDFLAGS = 
LIBICONV = -liconv
LIBINTL = 
LIBMULTITHREAD = -pthread
LIBNL_CFLAGS =  
LIBNL_LIBS = -lnl  
LIBNL_ROUTE3_CFLAGS = 
LIBNL_ROUTE3_LIBS = 
LIBOBJS = 
LIBPARTED_CFLAGS =  
LIBPARTED_LIBS = -L/lib64 -lparted  
LIBPCAP_CFLAGS = 
LIBPCAP_LIBS = -lpcap
LIBPTH = 
LIBPTH_PREFIX = 
LIBRBD_LIBS = 
LIBS = -ldl 
LIBSOCKET = 
LIBSSH_CFLAGS = 
LIBSSH_LIBS = 
LIBTESTS_LIBDEPS = 
LIBTHREAD = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBVIRT_ADMIN_SYMBOL_FILE = libvirt_admin.syms
LIBVIRT_LXC_SYMBOL_FILE = $(srcdir)/libvirt_lxc.syms
LIBVIRT_MAJOR_VERSION = 3
LIBVIRT_MICRO_VERSION = 0
LIBVIRT_MINOR_VERSION = 9
LIBVIRT_NODELETE = -Wl,-z -Wl,nodelete
LIBVIRT_QEMU_SYMBOL_FILE = $(srcdir)/libvirt_qemu.syms
LIBVIRT_SONUM = 0
LIBVIRT_SYMBOL_FILE = libvirt.syms
LIBVIRT_VERSION = 3.9.0
LIBVIRT_VERSION_INFO = 3009:0:3009
LIBVIRT_VERSION_NUMBER = 3009000
LIBXL_CFLAGS = 
LIBXL_LIBS = 
LIBXML_CFLAGS = -I/usr/include/libxml2  
LIBXML_LIBS = -lxml2  
LIB_CLOCK_GETTIME = -lrt
LIB_CRYPTO = 
LIB_EXECINFO = 
LIB_FDATASYNC = 
LIB_NANOSLEEP = 
LIB_POLL = 
LIB_POSIX_SPAWN = 
LIB_PTHREAD = -pthread
LIB_PTHREAD_SIGMASK = -pthread
LIB_SELECT = 
LIMITS_H = limits.h
LIPO = 
LN_S = ln -s
LOCALCHARSET_TESTS_ENVIRONMENT = CHARSETALIASDIR="$(abs_top_builddir)/gnulib/lib"
LOCALE_FR = fr_FR
LOCALE_FR_UTF8 = fr_FR.UTF-8
LOCALE_JA = ja_JP
LOCALE_TR_UTF8 = tr_TR.UTF-8
LOCALE_ZH_CN = zh_CN.GB18030
LOCK_CHECKING_CFLAGS = 
LTALLOCA = 
LTLIBICONV = -liconv
LTLIBINTL = 
LTLIBMULTITHREAD = -pthread
LTLIBOBJS = 
LTLIBPTH = 
LTLIBTHREAD = 
LVCHANGE = /sbin/lvchange
LVCREATE = /sbin/lvcreate
LVREMOVE = /sbin/lvremove
LVS = /sbin/lvs
LV_LIBTOOL_OBJDIR = .libs
MAKEINFO = ${SHELL} /usr/local/ulibvirt-3.9.0/build-aux/missing --run makeinfo
MANIFEST_TOOL = :
MINGW_EXTRA_LDFLAGS = 
MKDIR_P = /bin/mkdir -p
MKFS = /sbin/mkfs
MMCTL = mm-ctl
MODPROBE = /sbin/modprobe
MOUNT = /bin/mount
MSGFMT = /usr/bin/msgfmt
MSGFMT_015 = /usr/bin/msgfmt
MSGMERGE = /usr/bin/msgmerge
NETCF_CFLAGS =  
NETCF_LIBS = -lnetcf  
NETINET_IN_H = 
NET_IF_H = 
NET_IF_LIB = 
NEXT_ARPA_INET_H = <arpa/inet.h>
NEXT_AS_FIRST_DIRECTIVE_ARPA_INET_H = <arpa/inet.h>
NEXT_AS_FIRST_DIRECTIVE_CTYPE_H = <ctype.h>
NEXT_AS_FIRST_DIRECTIVE_ERRNO_H = 
NEXT_AS_FIRST_DIRECTIVE_FCNTL_H = <fcntl.h>
NEXT_AS_FIRST_DIRECTIVE_FLOAT_H = 
NEXT_AS_FIRST_DIRECTIVE_GETOPT_H = <getopt.h>
NEXT_AS_FIRST_DIRECTIVE_INTTYPES_H = <inttypes.h>
NEXT_AS_FIRST_DIRECTIVE_LANGINFO_H = <langinfo.h>
NEXT_AS_FIRST_DIRECTIVE_LIMITS_H = <limits.h>
NEXT_AS_FIRST_DIRECTIVE_LOCALE_H = <locale.h>
NEXT_AS_FIRST_DIRECTIVE_MATH_H = <math.h>
NEXT_AS_FIRST_DIRECTIVE_NETDB_H = <netdb.h>
NEXT_AS_FIRST_DIRECTIVE_NETINET_IN_H = 
NEXT_AS_FIRST_DIRECTIVE_NET_IF_H = 
NEXT_AS_FIRST_DIRECTIVE_POLL_H = <poll.h>
NEXT_AS_FIRST_DIRECTIVE_PTHREAD_H = <pthread.h>
NEXT_AS_FIRST_DIRECTIVE_PTY_H = <pty.h>
NEXT_AS_FIRST_DIRECTIVE_SCHED_H = 
NEXT_AS_FIRST_DIRECTIVE_SIGNAL_H = <signal.h>
NEXT_AS_FIRST_DIRECTIVE_SPAWN_H = <spawn.h>
NEXT_AS_FIRST_DIRECTIVE_STDARG_H = 
NEXT_AS_FIRST_DIRECTIVE_STDDEF_H = <stddef.h>
NEXT_AS_FIRST_DIRECTIVE_STDINT_H = <stdint.h>
NEXT_AS_FIRST_DIRECTIVE_STDIO_H = <stdio.h>
NEXT_AS_FIRST_DIRECTIVE_STDLIB_H = <stdlib.h>
NEXT_AS_FIRST_DIRECTIVE_STRINGS_H = <strings.h>
NEXT_AS_FIRST_DIRECTIVE_STRING_H = <string.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_IOCTL_H = <sys/ioctl.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_SELECT_H = <sys/select.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_SOCKET_H = <sys/socket.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_STAT_H = <sys/stat.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_TIME_H = <sys/time.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_TYPES_H = <sys/types.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_UIO_H = <sys/uio.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_UTSNAME_H = <sys/utsname.h>
NEXT_AS_FIRST_DIRECTIVE_SYS_WAIT_H = <sys/wait.h>
NEXT_AS_FIRST_DIRECTIVE_TERMIOS_H = <termios.h>
NEXT_AS_FIRST_DIRECTIVE_TIME_H = <time.h>
NEXT_AS_FIRST_DIRECTIVE_UNISTD_H = <unistd.h>
NEXT_AS_FIRST_DIRECTIVE_WCHAR_H = <wchar.h>
NEXT_AS_FIRST_DIRECTIVE_WCTYPE_H = <wctype.h>
NEXT_CTYPE_H = <ctype.h>
NEXT_ERRNO_H = 
NEXT_FCNTL_H = <fcntl.h>
NEXT_FLOAT_H = 
NEXT_GETOPT_H = <getopt.h>
NEXT_INTTYPES_H = <inttypes.h>
NEXT_LANGINFO_H = <langinfo.h>
NEXT_LIMITS_H = <limits.h>
NEXT_LOCALE_H = <locale.h>
NEXT_MATH_H = <math.h>
NEXT_NETDB_H = <netdb.h>
NEXT_NETINET_IN_H = 
NEXT_NET_IF_H = 
NEXT_POLL_H = <poll.h>
NEXT_PTHREAD_H = <pthread.h>
NEXT_PTY_H = <pty.h>
NEXT_SCHED_H = 
NEXT_SIGNAL_H = <signal.h>
NEXT_SPAWN_H = <spawn.h>
NEXT_STDARG_H = <stdarg.h>
NEXT_STDDEF_H = <stddef.h>
NEXT_STDINT_H = <stdint.h>
NEXT_STDIO_H = <stdio.h>
NEXT_STDLIB_H = <stdlib.h>
NEXT_STRINGS_H = <strings.h>
NEXT_STRING_H = <string.h>
NEXT_SYS_IOCTL_H = <sys/ioctl.h>
NEXT_SYS_SELECT_H = <sys/select.h>
NEXT_SYS_SOCKET_H = <sys/socket.h>
NEXT_SYS_STAT_H = <sys/stat.h>
NEXT_SYS_TIME_H = <sys/time.h>
NEXT_SYS_TYPES_H = <sys/types.h>
NEXT_SYS_UIO_H = <sys/uio.h>
NEXT_SYS_UTSNAME_H = <sys/utsname.h>
NEXT_SYS_WAIT_H = <sys/wait.h>
NEXT_TERMIOS_H = <termios.h>
NEXT_TIME_H = <time.h>
NEXT_UNISTD_H = <unistd.h>
NEXT_WCHAR_H = <wchar.h>
NEXT_WCTYPE_H = <wctype.h>
NM = /usr/bin/nm -B
NMEDIT = 
NO_INDIRECT_LDFLAGS = -Wl,--no-copy-dt-needed-entries
NUMACTL_CFLAGS = 
NUMACTL_LIBS = -lnuma
NUMAD = /usr/bin/numad
OBJDUMP = objdump
OBJEXT = o
OPENWSMAN_CFLAGS = 
OPENWSMAN_LIBS = 
OTOOL = 
OTOOL64 = 
OVSVSCTL = /usr/bin/ovs-vsctl
PACKAGE = libvirt
PACKAGE_BUGREPORT = libvir-list@redhat.com
PACKAGE_NAME = libvirt
PACKAGE_STRING = libvirt 3.9.0
PACKAGE_TARNAME = libvirt
PACKAGE_URL = https://libvirt.org
PACKAGE_VERSION = 3.9.0
PARALLELS_SDK_CFLAGS = 
PARALLELS_SDK_LIBS = 
PARTED = /sbin/parted
PATH_SEPARATOR = :
PCIACCESS_CFLAGS =  
PCIACCESS_LIBS = -lpciaccess  
PERL = /usr/bin/perl
PIE_CFLAGS = -fPIE -DPIE
PIE_LDFLAGS = -pie
PKCHECK_PATH = /usr/bin/pkcheck
PKG_CONFIG = /usr/bin/pkg-config
POLKIT_AUTH = 
POLKIT_CFLAGS = 
POLKIT_LIBS = 
POSIX_SHELL = /bin/sh
POSUB = po
PRAGMA_COLUMNS = 
PRAGMA_SYSTEM_HEADER = #pragma GCC system_header
PREFERABLY_POSIX_SHELL = /bin/sh
PRIPTR_PREFIX = "l"
PRI_MACROS_BROKEN = 0
PTHREAD_H = 
PTHREAD_H_DEFINES_STRUCT_TIMESPEC = 0
PTRDIFF_T_SUFFIX = 
PTY_LIB = -lutil
PVCREATE = /sbin/pvcreate
PVREMOVE = /sbin/pvremove
PVS = /sbin/pvs
PYTHON = /usr/bin/python2
QEMU = /usr/libexec/qemu-kvm
QEMU_BRIDGE_HELPER = /usr/libexec/qemu-bridge-helper
RADVD = /usr/sbin/radvd
RANLIB = ranlib
READLINE_CFLAGS = -D_FUNCTION_DEF 
READLINE_LIBS = -lreadline
RELAXED_FRAME_LIMIT_CFLAGS =  -Wframe-larger-than=25600
RELRO_LDFLAGS = -Wl,-z -Wl,relro -Wl,-z -Wl,now
REPLACE_ACOSF = 0
REPLACE_ASINF = 0
REPLACE_ATAN2F = 0
REPLACE_ATANF = 0
REPLACE_BTOWC = 0
REPLACE_CALLOC = 0
REPLACE_CANONICALIZE_FILE_NAME = 0
REPLACE_CBRTF = 0
REPLACE_CBRTL = 0
REPLACE_CEIL = 0
REPLACE_CEILF = 0
REPLACE_CEILL = 0
REPLACE_CHOWN = 0
REPLACE_CLOSE = 0
REPLACE_COSF = 0
REPLACE_COSHF = 0
REPLACE_CTIME = GNULIB_PORTCHECK
REPLACE_DPRINTF = 0
REPLACE_DUP = 0
REPLACE_DUP2 = 0
REPLACE_DUPLOCALE = 0
REPLACE_EXP2 = 0
REPLACE_EXP2L = 0
REPLACE_EXPF = 0
REPLACE_EXPM1 = 0
REPLACE_EXPM1F = 0
REPLACE_FABSL = 0
REPLACE_FCHOWNAT = 0
REPLACE_FCLOSE = 1
REPLACE_FCNTL = 1
REPLACE_FDOPEN = 0
REPLACE_FFLUSH = 1
REPLACE_FLOOR = 0
REPLACE_FLOORF = 0
REPLACE_FLOORL = 0
REPLACE_FMA = 0
REPLACE_FMAF = 0
REPLACE_FMAL = 0
REPLACE_FMOD = 0
REPLACE_FMODF = 0
REPLACE_FMODL = 0
REPLACE_FOPEN = 0
REPLACE_FORKPTY = 0
REPLACE_FPRINTF = 0
REPLACE_FPURGE = 0
REPLACE_FREOPEN = 0
REPLACE_FREXP = 0
REPLACE_FREXPF = 0
REPLACE_FREXPL = 0
REPLACE_FSEEK = 1
REPLACE_FSEEKO = 1
REPLACE_FSTAT = 0
REPLACE_FSTATAT = 0
REPLACE_FTELL = 0
REPLACE_FTELLO = 0
REPLACE_FTRUNCATE = 0
REPLACE_FUTIMENS = 0
REPLACE_GAI_STRERROR = 0
REPLACE_GETCWD = 0
REPLACE_GETDELIM = 0
REPLACE_GETDOMAINNAME = 0
REPLACE_GETDTABLESIZE = 0
REPLACE_GETGROUPS = 0
REPLACE_GETLINE = 0
REPLACE_GETLOGIN_R = 0
REPLACE_GETPAGESIZE = 0
REPLACE_GETTIMEOFDAY = 0
REPLACE_GMTIME = 0
REPLACE_HUGE_VAL = 0
REPLACE_HYPOT = 0
REPLACE_HYPOTF = 0
REPLACE_HYPOTL = 0
REPLACE_ILOGB = 0
REPLACE_ILOGBF = 0
REPLACE_INET_NTOP = 0
REPLACE_INET_PTON = 0
REPLACE_IOCTL = 1
REPLACE_ISATTY = 0
REPLACE_ISFINITE = 0
REPLACE_ISINF = 0
REPLACE_ISNAN = 0
REPLACE_ISWBLANK = 0
REPLACE_ISWCNTRL = 0
REPLACE_ITOLD = 0
REPLACE_LCHOWN = 0
REPLACE_LDEXPL = 0
REPLACE_LINK = 0
REPLACE_LINKAT = 0
REPLACE_LOCALECONV = 0
REPLACE_LOCALTIME = 0
REPLACE_LOCALTIME_R = 0
REPLACE_LOG = 0
REPLACE_LOG10 = 0
REPLACE_LOG10F = 0
REPLACE_LOG10L = 0
REPLACE_LOG1P = 0
REPLACE_LOG1PF = 0
REPLACE_LOG1PL = 0
REPLACE_LOG2 = 0
REPLACE_LOG2F = 0
REPLACE_LOG2L = 0
REPLACE_LOGB = 0
REPLACE_LOGBF = 0
REPLACE_LOGBL = 0
REPLACE_LOGF = 0
REPLACE_LOGL = 0
REPLACE_LSEEK = 0
REPLACE_LSTAT = 0
REPLACE_MALLOC = 0
REPLACE_MBRLEN = 0
REPLACE_MBRTOWC = 1
REPLACE_MBSINIT = 0
REPLACE_MBSNRTOWCS = 0
REPLACE_MBSRTOWCS = 0
REPLACE_MBSTATE_T = 0
REPLACE_MBTOWC = 0
REPLACE_MEMCHR = 0
REPLACE_MEMMEM = 0
REPLACE_MKDIR = 0
REPLACE_MKFIFO = 0
REPLACE_MKNOD = 0
REPLACE_MKSTEMP = 0
REPLACE_MKTIME = 0
REPLACE_MODF = 0
REPLACE_MODFF = 0
REPLACE_MODFL = 0
REPLACE_NAN = 0
REPLACE_NANOSLEEP = 1
REPLACE_NL_LANGINFO = 0
REPLACE_NULL = 0
REPLACE_OBSTACK_PRINTF = 0
REPLACE_OPEN = 0
REPLACE_OPENAT = 0
REPLACE_OPENPTY = 0
REPLACE_PERROR = 1
REPLACE_POLL = 0
REPLACE_POPEN = 0
REPLACE_POSIX_SPAWN = 0
REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDCLOSE = 0
REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDDUP2 = 0
REPLACE_POSIX_SPAWN_FILE_ACTIONS_ADDOPEN = 0
REPLACE_PREAD = 0
REPLACE_PRINTF = 0
REPLACE_PSELECT = 0
REPLACE_PTHREAD_SIGMASK = 0
REPLACE_PTSNAME = 0
REPLACE_PTSNAME_R = 0
REPLACE_PUTENV = 0
REPLACE_PWRITE = 0
REPLACE_QSORT_R = 0
REPLACE_RAISE = 0
REPLACE_RANDOM_R = 0
REPLACE_READ = 0
REPLACE_READLINK = 0
REPLACE_READLINKAT = 0
REPLACE_REALLOC = 0
REPLACE_REALPATH = 0
REPLACE_REMAINDER = 0
REPLACE_REMAINDERF = 0
REPLACE_REMAINDERL = 0
REPLACE_REMOVE = 0
REPLACE_RENAME = 0
REPLACE_RENAMEAT = 0
REPLACE_RMDIR = 0
REPLACE_ROUND = 0
REPLACE_ROUNDF = 0
REPLACE_ROUNDL = 0
REPLACE_SELECT = 0
REPLACE_SETENV = 0
REPLACE_SETLOCALE = 0
REPLACE_SIGNBIT = 0
REPLACE_SIGNBIT_USING_GCC = 1
REPLACE_SINF = 0
REPLACE_SINHF = 0
REPLACE_SLEEP = 0
REPLACE_SNPRINTF = 0
REPLACE_SPRINTF = 0
REPLACE_SQRTF = 0
REPLACE_SQRTL = 0
REPLACE_STAT = 0
REPLACE_STDIO_READ_FUNCS = 0
REPLACE_STDIO_WRITE_FUNCS = 0
REPLACE_STPNCPY = 0
REPLACE_STRCASESTR = 0
REPLACE_STRCHRNUL = 0
REPLACE_STRDUP = 0
REPLACE_STRERROR = 1
REPLACE_STRERROR_R = 1
REPLACE_STRFTIME = GNULIB_PORTCHECK
REPLACE_STRNCAT = 0
REPLACE_STRNDUP = 0
REPLACE_STRNLEN = 0
REPLACE_STRSIGNAL = 0
REPLACE_STRSTR = 0
REPLACE_STRTOD = 0
REPLACE_STRTOIMAX = 0
REPLACE_STRTOK_R = 0
REPLACE_STRTOUMAX = 0
REPLACE_STRUCT_LCONV = 0
REPLACE_STRUCT_TIMEVAL = 0
REPLACE_SYMLINK = 0
REPLACE_SYMLINKAT = 0
REPLACE_TANF = 0
REPLACE_TANHF = 0
REPLACE_TIMEGM = 0
REPLACE_TMPFILE = 0
REPLACE_TOWLOWER = 0
REPLACE_TRUNC = 0
REPLACE_TRUNCATE = 0
REPLACE_TRUNCF = 0
REPLACE_TRUNCL = 0
REPLACE_TTYNAME_R = 0
REPLACE_TZSET = GNULIB_PORTCHECK
REPLACE_UNLINK = 0
REPLACE_UNLINKAT = 0
REPLACE_UNSETENV = 0
REPLACE_USLEEP = 0
REPLACE_UTIMENSAT = 0
REPLACE_VASPRINTF = 0
REPLACE_VDPRINTF = 0
REPLACE_VFPRINTF = 0
REPLACE_VPRINTF = 0
REPLACE_VSNPRINTF = 0
REPLACE_VSPRINTF = 0
REPLACE_WCRTOMB = 0
REPLACE_WCSFTIME = 0
REPLACE_WCSNRTOMBS = 0
REPLACE_WCSRTOMBS = 0
REPLACE_WCSWIDTH = 0
REPLACE_WCTOB = 0
REPLACE_WCTOMB = 0
REPLACE_WCWIDTH = 0
REPLACE_WRITE = 0
RMMOD = /sbin/rmmod
RPCGEN = /usr/bin/rpcgen
SANLOCK_CFLAGS = 
SANLOCK_LIBS = 
SASL_CFLAGS = 
SASL_LIBS = -lsasl2
SCHED_H = 
SCRUB = /usr/bin/scrub
SED = /bin/sed
SELINUX_CFLAGS = 
SELINUX_LIBS = -lselinux
SERVENT_LIB = 
SET_MAKE = 
SHEEPDOGCLI = 
SHELL = $(PREFERABLY_POSIX_SHELL)
SHOWMOUNT = /usr/sbin/showmount
SIG_ATOMIC_T_SUFFIX = 
SIZE_T_SUFFIX = 
SSH2_CFLAGS =  
SSH2_LIBS = -lssh2  
STATIC_BINARIES = 
STDALIGN_H = stdalign.h
STDARG_H = 
STDBOOL_H = 
STDDEF_H = stddef.h
STDINT_H = stdint.h
STRICT_FRAME_LIMIT_CFLAGS =  -Wframe-larger-than=4096
STRIP = strip
SYS_IOCTL_H_HAVE_WINSOCK2_H = 0
SYS_IOCTL_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS = 0
SYS_TIME_H_DEFINES_STRUCT_TIMESPEC = 0
TC = /sbin/tc
TIME_H_DEFINES_STRUCT_TIMESPEC = 1
UDEVADM = /sbin/udevadm
UDEVSETTLE = 
UDEV_CFLAGS =  
UDEV_LIBS = -ludev  
UINT32_MAX_LT_UINTMAX_MAX = 1
UINT64_MAX_EQ_ULONG_MAX = 1
UMOUNT = /bin/umount
UNDEFINE_STRTOK_R = 0
UNISTD_H_DEFINES_STRUCT_TIMESPEC = 0
UNISTD_H_HAVE_WINSOCK2_H = 0
UNISTD_H_HAVE_WINSOCK2_H_AND_USE_SOCKETS = 0
USE_NLS = yes
VERSION = 3.9.0
VERSION_SCRIPT_FLAGS = -Wl,--version-script=
VGCHANGE = /sbin/vgchange
VGCREATE = /sbin/vgcreate
VGREMOVE = /sbin/vgremove
VGS = /sbin/vgs
VGSCAN = /sbin/vgscan
VIR_TEST_EXPENSIVE_DEFAULT = 1
VSTORAGE = 
VSTORAGE_MOUNT = 
WARN_CFLAGS =  -fno-common -W -Waddress -Wall -Wattributes -Wbad-function-cast -Wbuiltin-macro-redefined -Wchar-subscripts -Wclobbered -Wcomment -Wcomments -Wcoverage-mismatch -Wdeprecated-declarations -Wdiv-by-zero -Wempty-body -Wendif-labels -Wextra -Wformat-contains-nul -Wformat-extra-args -Wformat-security -Wformat-y2k -Wformat-zero-length -Wignored-qualifiers -Wimplicit -Wimplicit-function-declaration -Wimplicit-int -Winit-self -Winline -Wint-to-pointer-cast -Winvalid-pch -Wlogical-op -Wmain -Wmissing-braces -Wmissing-field-initializers -Wmissing-include-dirs -Wmissing-parameter-type -Wmultichar -Wnested-externs -Wnonnull -Wold-style-declaration -Wold-style-definition -Woverflow -Woverride-init -Wpacked-bitfield-compat -Wparentheses -Wpointer-arith -Wpointer-sign -Wpointer-to-int-cast -Wpragmas -Wpsabi -Wreturn-type -Wsequence-point -Wshadow -Wstrict-aliasing -Wstrict-prototypes -Wswitch -Wsync-nand -Wtrigraphs -Wtype-limits -Wuninitialized -Wunknown-pragmas -Wunused -Wunused-but-set-parameter -Wunused-but-set-variable -Wunused-function -Wunused-label -Wunused-parameter -Wunused-value -Wunused-variable -Wvariadic-macros -Wvolatile-register-var -Wwrite-strings -Wnormalized=nfc -fdiagnostics-show-option -funit-at-a-time -Wno-missing-field-initializers -Wno-sign-compare -Wno-format-nonliteral -fexceptions -fasynchronous-unwind-tables -fipa-pure-const -fstack-protector-all $(RELAXED_FRAME_LIMIT_CFLAGS)
WCHAR_T_SUFFIX = 
WIN32_EXTRA_CFLAGS = 
WIN32_EXTRA_LIBS = 
WINDOWS_64_BIT_OFF_T = 0
WINDOWS_64_BIT_ST_SIZE = 0
WINDOWS_STAT_INODES = 0
WINDOWS_STAT_TIMESPEC = 0
WINDRES = 
WINT_T_SUFFIX = 
WIRESHARK_DISSECTOR_CFLAGS = 
WIRESHARK_DISSECTOR_LIBS = 
XDR_CFLAGS = 
XENAPI_CFLAGS = 
XENAPI_LIBS = 
XEN_CFLAGS = 
XEN_LIBS = 
XGETTEXT = /usr/bin/xgettext
XGETTEXT_015 = /usr/bin/xgettext
XGETTEXT_EXTRA_OPTIONS =  --flag=asprintf:2:c-format --flag=vasprintf:2:c-format --flag=error:3:c-format --flag=error_at_line:5:c-format
XMLLINT = /usr/bin/xmllint
XML_CATALOG_FILE = /etc/xml/catalog
XSLTPROC = /usr/bin/xsltproc
YAJL_CFLAGS = 
YAJL_LIBS = -lyajl
ZFS = 
ZPOOL = 
abs_aux_dir = /usr/local/ulibvirt-3.9.0/build-aux

# old automake does not provide abs_{src,build}dir variables
abs_builddir = $(shell pwd)
abs_srcdir = $(shell cd $(srcdir) && pwd)
abs_top_builddir = /usr/local/ulibvirt-3.9.0
abs_top_srcdir = /usr/local/ulibvirt-3.9.0
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_DUMPBIN = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=posix -chf - "$$tardir"
am__untar = tar -xf -
bindir = ${exec_prefix}/bin
build = x86_64-unknown-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = unknown
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
gl_LIBOBJS =  asnprintf.o fclose.o fcntl.o fflush.o fnmatch.o fpurge.o fseek.o fseeko.o getopt.o getopt1.o ioctl.o localtime-buffer.o mbrtowc.o mktime.o perror.o printf-args.o printf-parse.o secure_getenv.o strerror.o strerror_r.o vasnprintf.o
gl_LTLIBOBJS =  asnprintf.lo fclose.lo fcntl.lo fflush.lo fnmatch.lo fpurge.lo fseek.lo fseeko.lo getopt.lo getopt1.lo ioctl.lo localtime-buffer.lo mbrtowc.lo mktime.lo perror.lo printf-args.lo printf-parse.lo secure_getenv.lo strerror.lo strerror_r.lo vasnprintf.lo
gltests_LIBOBJS =  nanosleep.o
gltests_LTLIBOBJS =  nanosleep.lo
gltests_WITNESS = IN_LIBVIRT_GNULIB_TESTS
host = x86_64-unknown-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = unknown
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /usr/local/ulibvirt-3.9.0/build-aux/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
lispdir = ${datarootdir}/emacs/site-lisp
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target_alias = 
top_build_prefix = ../
top_builddir = ..
top_srcdir = ..
ws_plugindir = 
abs_topbuilddir = $(shell cd .. && pwd)
abs_topsrcdir = $(shell cd $(top_srcdir) && pwd)
INCLUDES = -I$(top_builddir) -I$(top_srcdir) \
	-I$(top_builddir)/gnulib/lib -I$(top_srcdir)/gnulib/lib \
	-I$(top_builddir)/include -I$(top_srcdir)/include \
	-I$(top_builddir)/src -I$(top_srcdir)/src \
	-I$(top_srcdir)/src/util -I$(top_srcdir)/src/conf \
	$(GETTEXT_CPPFLAGS) \
	-DTEST_DRIVER_DIR=\"$(top_builddir)/src/.libs\"
AM_CFLAGS = \
	-Dabs_builddir="\"$(abs_builddir)\"" \
	-Dabs_topbuilddir="\"$(abs_topbuilddir)\"" \
	-Dabs_srcdir="\"$(abs_srcdir)\"" \
	-Dabs_topsrcdir="\"$(abs_topsrcdir)\"" \
	$(LIBXML_CFLAGS) \
	$(LIBNL_CFLAGS) \
	$(GNUTLS_CFLAGS) \
	$(SASL_CFLAGS) \
	$(SELINUX_CFLAGS) \
	$(APPARMOR_CFLAGS) \
	$(YAJL_CFLAGS) \
	$(COVERAGE_CFLAGS) \
	$(WARN_CFLAGS)

AM_LDFLAGS = \
	-export-dynamic

MOCKLIBS_LDFLAGS = -module -avoid-version \
	-rpath /evil/libtool/hack/to/force/shared/lib/creation \
	$(MINGW_EXTRA_LDFLAGS)

QEMULIB_LDFLAGS = \
	-avoid-version \
	-rpath /evil/libtool/hack/to/force/shared/lib/creation \
	$(MINGW_EXTRA_LDFLAGS)

PROBES_O = $(am__append_1)
GNULIB_LIBS = \
       ../gnulib/lib/libgnu.la

LDADDS = \
	$(NO_INDIRECT_LDFLAGS) \
	$(PROBES_O) \
	$(GNULIB_LIBS) \
	../src/libvirt.la

MOCKLIBS_LIBS = \
	$(GNULIB_LIBS)

EXTRA_DIST = .valgrind.supp bhyvexml2argvdata bhyveargv2xmldata \
	bhyvexml2xmloutdata capabilityschemadata commanddata \
	cputestdata domaincapsschemadata domainconfdata \
	domainschemadata domainsnapshotxml2xmlin \
	domainsnapshotxml2xmlout fchostdata genericxml2xmlindata \
	genericxml2xmloutdata interfaceschemadata \
	libxlxml2domconfigdata lxcconf2xmldata lxcxml2xmldata \
	lxcxml2xmloutdata networkxml2confdata networkxml2firewalldata \
	networkxml2xmlin networkxml2xmlout networkxml2xmlupdatein \
	networkxml2xmlupdateout nodedevschemadata virhostcpudata \
	nssdata nwfilterxml2firewalldata nwfilterxml2xmlin \
	nwfilterxml2xmlout oomtrace.pl qemuagentdata qemuargv2xmldata \
	qemucapabilitiesdata qemucaps2xmldata qemuhelpdata \
	qemuhotplugtestcpus qemuhotplugtestdevices \
	qemuhotplugtestdomains qemumonitorjsondata qemuxml2argvdata \
	qemuxml2xmloutdata qemumemlockdata secretxml2xmlin \
	securityselinuxhelperdata securityselinuxlabeldata \
	sexpr2xmldata storagepoolschemadata storagepoolxml2xmlin \
	storagepoolxml2xmlout storagevolschemadata \
	storagevolxml2argvdata storagevolxml2xmlin \
	storagevolxml2xmlout sysinfodata test-lib.sh \
	vboxsnapshotxmldata vircaps2xmldata vircgroupdata virconfdata \
	virfiledata virjsondata virmacmaptestdata virmock.h \
	virnetdaemondata virnetdevtestdata virpcitestdata virscsidata \
	virsh-uriprecedence virusbtestdata vmwareverdata vmx2xmldata \
	xencapsdata xlconfigdata xmconfigdata xml2sexprdata \
	xml2vmxdata virstorageutildata virfilecachedata virresctrldata \
	$(NULL) $(am__append_40) virt-aa-helper-test $(test_scripts) \
	check-file-access.pl file_access_whitelist.txt \
	$(am__append_42) $(am__append_44) $(am__append_48) \
	$(am__append_50) $(am__append_51) openvzutilstest.conf \
	$(am__append_52) $(am__append_53) $(am__append_54) \
	$(am__append_55) $(am__append_57) $(am__append_58) \
	$(am__append_59) $(am__append_60) $(am__append_75) \
	$(am__append_76) $(am__append_78) $(am__append_79) \
	$(am__append_81) $(am__append_82) securityselinuxtest.c \
	securityselinuxlabeltest.c securityselinuxhelper.c \
	$(am__append_85) $(am__append_86)
test_helpers = commandhelper ssh $(am__append_16) $(am__append_34)
test_programs = virshtest sockettest virhostcputest virbuftest \
	commandtest seclabeltest virhashtest virconftest viratomictest \
	utiltest shunloadtest virtimetest viruritest virkeyfiletest \
	viralloctest virauthconfigtest virbitmaptest vircgrouptest \
	vircryptotest virpcitest virendiantest virfiletest \
	virfilecachetest virfirewalltest viriscsitest virkeycodetest \
	virlockspacetest virlogtest virrotatingfiletest virschematest \
	virstringtest virportallocatortest sysinfotest virkmodtest \
	vircapstest domaincapstest domainconftest virhostdevtest \
	virnetdevtest virtypedparamtest $(NULL) $(am__append_2) \
	$(am__append_3) $(am__append_4) $(am__append_6) \
	$(am__append_7) $(am__append_9) $(am__append_10) \
	$(am__append_11) $(am__append_12) $(am__append_13) \
	$(am__append_15) $(am__append_18) $(am__append_19) \
	$(am__append_20) $(am__append_21) $(am__append_22) \
	$(am__append_23) $(am__append_24) $(am__append_26) \
	$(am__append_27) networkxml2xmltest networkxml2xmlupdatetest \
	$(NULL) $(am__append_28) $(am__append_29) nwfilterxml2xmltest \
	$(am__append_30) $(am__append_31) $(am__append_32) \
	$(am__append_33) $(am__append_35) storagevolxml2xmltest \
	storagepoolxml2xmltest nodedevxml2xmltest interfacexml2xmltest \
	cputest metadatatest secretxml2xmltest genericxml2xmltest \
	$(am__append_37) $(am__append_39) objecteventtest \
	$(am__append_80)
test_libraries = libshunload.la virportallocatormock.la \
	virnetdaemonmock.la virnetserverclientmock.la vircgroupmock.la \
	virpcimock.la virnetdevmock.la virrandommock.la \
	virhostcpumock.la domaincapsmock.la virfilecachemock.la \
	$(NULL) $(am__append_5) $(am__append_8) $(am__append_14) \
	$(am__append_17) $(am__append_25) $(am__append_36) \
	virdeterministichashmock.la

# This is a fake SSH we use from virnetsockettest
ssh_SOURCES = ssh.c
ssh_LDADD = $(COVERAGE_LDFLAGS)
test_scripts = $(am__append_38) $(am__append_41)
libvirtd_test_scripts = \
	libvirtd-fail			\
	libvirtd-pool			\
	virsh-cpuset			\
	virsh-define-dev-segfault	\
	virsh-int-overflow		\
	virsh-optparse			\
	virsh-read-bufsiz		\
	virsh-read-non-seekable		\
	virsh-schedinfo			\
	virsh-self-test			\
	virt-admin-self-test			\
	virsh-start			\
	virsh-undefine			\
	virsh-uriprecedence		\
	virsh-vcpupin			\
	$(NULL)

#noinst_LTLIBRARIES = $(test_libraries) \
#	$(am__append_83)
check_LTLIBRARIES = $(test_libraries) \
	$(am__append_84)

# NB, automake < 1.10 does not provide the real
# abs_top_{src/build}dir or builddir variables, so don't rely
# on them here. Fake them with 'pwd'
# Also, BSD sh doesn't like 'a=b b=$$a', so we can't use an
# intermediate shell variable, but must do all the expansion in make
lv_abs_top_builddir = $(shell cd '$(top_builddir)' && pwd)
TESTS_ENVIRONMENT = \
  abs_top_builddir=$(lv_abs_top_builddir)	\
  abs_top_srcdir=`cd '$(top_srcdir)'; pwd`	\
  abs_builddir=$(abs_builddir)			\
  abs_srcdir=$(abs_srcdir)			\
  CONFIG_HEADER="$(lv_abs_top_builddir)/config.h"	\
  SHELL="$(SHELL)"				\
  LIBVIRT_DRIVER_DIR="$(lv_abs_top_builddir)/src/.libs" \
  LIBVIRT_AUTOSTART=0				\
  LC_ALL=C					\
  VIR_TEST_EXPENSIVE=$(VIR_TEST_EXPENSIVE)	\
  $(VG)

VALGRIND = valgrind --quiet --leak-check=full --trace-children=yes \
	--trace-children-skip="*/tools/virsh","*/tests/commandhelper" \
	--suppressions=$(srcdir)/.valgrind.supp

sockettest_SOURCES = \
	sockettest.c \
	testutils.c testutils.h

sockettest_LDADD = $(LDADDS)
#xen_LDADDS = ../src/libvirt_driver_xen_impl.la \
#	$(LDADDS)
#xml2sexprtest_SOURCES = \
#	xml2sexprtest.c testutilsxen.c testutilsxen.h \
#	testutils.c testutils.h

#xml2sexprtest_LDADD = $(xen_LDADDS)
#sexpr2xmltest_SOURCES = \
#	sexpr2xmltest.c testutilsxen.c testutilsxen.h \
#	testutils.c testutils.h

#sexpr2xmltest_LDADD = $(xen_LDADDS)
#xmconfigtest_SOURCES = \
#	xmconfigtest.c testutilsxen.c testutilsxen.h \
#	testutils.c testutils.h

#xmconfigtest_LDADD = $(xen_LDADDS)
#xencapstest_SOURCES = \
#	xencapstest.c testutils.h testutils.c

#xencapstest_LDADD = $(xen_LDADDS)
#libxl_LDADDS = ../src/libvirt_driver_libxl_impl.la \
#	$(am__append_43) $(LDADDS)
#xlconfigtest_SOURCES = \
#	xlconfigtest.c testutilsxen.c testutilsxen.h \
#	testutils.c testutils.h

#xlconfigtest_LDADD = $(libxl_LDADDS)
#libxlxml2domconfigtest_SOURCES = \
#	libxlxml2domconfigtest.c testutilsxen.c testutilsxen.h \
#	testutils.c testutils.h

#libxlxml2domconfigtest_LDADD = $(libxl_LDADDS) $(LIBXML_LIBS)
#virmocklibxl_la_SOURCES = \
#	virmocklibxl.c

#virmocklibxl_la_CFLAGS = $(AM_CFLAGS)
#virmocklibxl_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
#virmocklibxl_la_LIBADD = $(MOCKLIBS_LIBS)
QEMUMONITORTESTUTILS_SOURCES = \
	qemumonitortestutils.c \
	qemumonitortestutils.h \
	$(NULL)

libqemumonitortestutils_la_SOURCES = $(QEMUMONITORTESTUTILS_SOURCES)
qemu_LDADDS = ../src/libvirt_driver_qemu_impl.la \
	$(am__append_45) $(am__append_46) \
	$(am__append_47)
libqemutestdriver_la_SOURCES = 
libqemutestdriver_la_LDFLAGS = $(QEMULIB_LDFLAGS)
libqemutestdriver_la_LIBADD = $(qemu_LDADDS)
qemucpumock_la_SOURCES = \
	qemucpumock.c testutilshostcpus.h

qemucpumock_la_CFLAGS = $(AM_CFLAGS)
qemucpumock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
qemucpumock_la_LIBADD = $(MOCKLIBS_LIBS)
qemuxml2argvtest_SOURCES = \
	qemuxml2argvtest.c testutilsqemu.c testutilsqemu.h \
	testutils.c testutils.h

qemuxml2argvtest_LDADD = libqemutestdriver.la $(LDADDS) $(LIBXML_LIBS)
qemuxml2argvmock_la_SOURCES = \
	qemuxml2argvmock.c

qemuxml2argvmock_la_CFLAGS = $(AM_CFLAGS)
qemuxml2argvmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
qemuxml2argvmock_la_LIBADD = $(MOCKLIBS_LIBS)
qemuxml2xmltest_SOURCES = \
	qemuxml2xmltest.c testutilsqemu.c testutilsqemu.h \
	testutils.c testutils.h

qemuxml2xmltest_LDADD = $(qemu_LDADDS) $(LDADDS)
qemuargv2xmltest_SOURCES = \
	qemuargv2xmltest.c testutilsqemu.c testutilsqemu.h \
	testutils.c testutils.h

qemuargv2xmltest_LDADD = $(qemu_LDADDS) $(LDADDS)
qemuhelptest_SOURCES = qemuhelptest.c testutils.c testutils.h
qemuhelptest_LDADD = $(qemu_LDADDS) $(LDADDS)
qemumonitortest_SOURCES = \
	qemumonitortest.c \
	testutils.c testutils.h \
	testutilsqemu.c testutilsqemu.h

qemumonitortest_LDADD = libqemumonitortestutils.la \
	$(qemu_LDADDS) $(LDADDS)

qemumonitorjsontest_SOURCES = \
	qemumonitorjsontest.c \
	testutils.c testutils.h \
	testutilsqemu.c testutilsqemu.h \
	$(NULL)

qemumonitorjsontest_LDADD = libqemumonitortestutils.la \
	$(qemu_LDADDS) $(LDADDS)

qemucapabilitiestest_SOURCES = \
	qemucapabilitiestest.c \
	testutils.c testutils.h \
	testutilsqemu.c testutilsqemu.h \
	$(NULL)

qemucapabilitiestest_LDADD = libqemumonitortestutils.la \
	$(qemu_LDADDS) $(LDADDS)

qemucapsprobe_SOURCES = \
	qemucapsprobe.c

qemucapsprobe_LDADD = \
	libqemutestdriver.la $(LDADDS)

qemucapsprobemock_la_SOURCES = \
	qemucapsprobemock.c

qemucapsprobemock_la_CFLAGS = $(AM_CFLAGS)
qemucapsprobemock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
qemucapsprobemock_la_LIBADD = $(MOCKLIBS_LIBS)
qemucommandutiltest_SOURCES = \
	qemucommandutiltest.c \
	testutils.c testutils.h \
	testutilsqemu.c testutilsqemu.h \
	$(NULL)

qemucommandutiltest_LDADD = libqemumonitortestutils.la \
	$(qemu_LDADDS) $(LDADDS)

qemucaps2xmltest_SOURCES = \
	qemucaps2xmltest.c \
	testutils.c testutils.h \
	$(NULL)

qemucaps2xmltest_LDADD = $(qemu_LDADDS) $(LDADDS)
qemucaps2xmlmock_la_SOURCES = \
	qemucaps2xmlmock.c

qemucaps2xmlmock_la_CFLAGS = $(AM_CFLAGS)
qemucaps2xmlmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
qemucaps2xmlmock_la_LIBADD = $(MOCKLIBS_LIBS)
qemuagenttest_SOURCES = \
	qemuagenttest.c \
	testutils.c testutils.h \
	testutilsqemu.c testutilsqemu.h \
	$(NULL)

qemuagenttest_LDADD = libqemumonitortestutils.la $(qemu_LDADDS) $(LDADDS)
qemuhotplugtest_SOURCES = \
	qemuhotplugtest.c \
	testutils.c testutils.h \
	testutilsqemu.c testutilsqemu.h \
	$(NULL)

qemuhotplugtest_LDADD = libqemumonitortestutils.la $(qemu_LDADDS) $(LDADDS)
domainsnapshotxml2xmltest_SOURCES = \
	domainsnapshotxml2xmltest.c testutilsqemu.c testutilsqemu.h \
	testutils.c testutils.h

domainsnapshotxml2xmltest_LDADD = $(qemu_LDADDS) $(LDADDS)
qemumemlocktest_SOURCES = \
	qemumemlocktest.c \
	testutilsqemu.c testutilsqemu.h \
	testutils.c testutils.h

qemumemlocktest_LDADD = $(qemu_LDADDS) $(LDADDS)
lxc_LDADDS = ../src/libvirt_driver_lxc_impl.la \
	$(am__append_49) $(LDADDS)
lxcxml2xmltest_SOURCES = \
	lxcxml2xmltest.c testutilslxc.c testutilslxc.h \
	testutils.c testutils.h

lxcxml2xmltest_LDADD = $(lxc_LDADDS)
lxcconf2xmltest_SOURCES = \
	lxcconf2xmltest.c testutilslxc.c testutilslxc.h \
	testutils.c testutils.h

lxcconf2xmltest_LDADD = $(lxc_LDADDS)
openvzutilstest_SOURCES = \
	openvzutilstest.c \
	testutils.c testutils.h

openvzutilstest_LDADD = $(LDADDS)
esxutilstest_SOURCES = \
	esxutilstest.c \
	testutils.c testutils.h

esxutilstest_LDADD = $(LDADDS)
vboxsnapshotxmltest_SOURCES = \
	vboxsnapshotxmltest.c \
	testutils.c testutils.h

vbox_LDADDS = ../src/libvirt_driver_vbox_impl.la
vboxsnapshotxmltest_LDADD = $(LDADDS) $(vbox_LDADDS)
vmx2xmltest_SOURCES = \
	vmx2xmltest.c \
	testutils.c testutils.h

vmx2xmltest_LDADD = $(LDADDS)
xml2vmxtest_SOURCES = \
	xml2vmxtest.c \
	testutils.c testutils.h

xml2vmxtest_LDADD = $(LDADDS)
vmwarevertest_SOURCES = \
    vmwarevertest.c \
    testutils.c testutils.h

vmwarevertest_LDADD = $(LDADDS)
#bhyvexml2argvmock_la_SOURCES = \
#	bhyvexml2argvmock.c

#bhyvexml2argvmock_la_CFLAGS = $(AM_CFLAGS)
#bhyvexml2argvmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
#bhyvexml2argvmock_la_LIBADD = $(MOCKLIBS_LIBS)
#bhyveargv2xmlmock_la_SOURCES = \
#	bhyveargv2xmlmock.c

#bhyveargv2xmlmock_la_CFLAGS = $(AM_CFLAGS)
#bhyveargv2xmlmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
#bhyveargv2xmlmock_la_LIBADD = $(MOCKLIBS_LIBS)
#bhyve_LDADDS = ../src/libvirt_driver_bhyve_impl.la \
#	$(am__append_56) $(LDADDS)
#bhyvexml2argvtest_SOURCES = \
#	bhyvexml2argvtest.c \
#	testutils.c testutils.h

#bhyvexml2argvtest_LDADD = $(bhyve_LDADDS)
#bhyvexml2xmltest_SOURCES = \
#	bhyvexml2xmltest.c \
#	testutils.c testutils.h

#bhyvexml2xmltest_LDADD = $(bhyve_LDADDS)
#bhyveargv2xmltest_SOURCES = \
#	bhyveargv2xmltest.c \
#	testutils.c testutils.h

#bhyveargv2xmltest_LDADD = $(bhyve_LDADDS)
networkxml2xmltest_SOURCES = \
	networkxml2xmltest.c \
	testutils.c testutils.h

networkxml2xmltest_LDADD = $(LDADDS)
networkxml2xmlupdatetest_SOURCES = \
	networkxml2xmlupdatetest.c \
	testutils.c testutils.h

networkxml2xmlupdatetest_LDADD = $(LDADDS)
networkxml2conftest_SOURCES = \
	networkxml2conftest.c \
	testutils.c testutils.h

networkxml2conftest_LDADD = ../src/libvirt_driver_network_impl.la $(LDADDS)
networkxml2firewalltest_SOURCES = \
	networkxml2firewalltest.c \
	testutils.c testutils.h

networkxml2firewalltest_LDADD = ../src/libvirt_driver_network_impl.la $(LDADDS)
#storagebackendsheepdogtest_SOURCES = \
#	storagebackendsheepdogtest.c \
#	testutils.c testutils.h

#storagebackendsheepdogtest_LDADD = \
#	../src/libvirt_driver_storage_impl.la \
#	../src/libvirt_storage_backend_sheepdog_priv.la \
#	$(LDADDS)

nwfilterxml2xmltest_SOURCES = \
	nwfilterxml2xmltest.c \
	testutils.c testutils.h

nwfilterxml2xmltest_LDADD = $(LDADDS)
nwfilterebiptablestest_SOURCES = \
	nwfilterebiptablestest.c \
	testutils.c testutils.h

nwfilterebiptablestest_LDADD = ../src/libvirt_driver_nwfilter_impl.la $(LDADDS)
nwfilterxml2firewalltest_SOURCES = \
	nwfilterxml2firewalltest.c \
	testutils.c testutils.h

nwfilterxml2firewalltest_LDADD = \
	../src/libvirt_driver_nwfilter_impl.la $(LDADDS)

secretxml2xmltest_SOURCES = \
	secretxml2xmltest.c \
	testutils.c testutils.h

secretxml2xmltest_LDADD = $(LDADDS)
genericxml2xmltest_SOURCES = \
	genericxml2xmltest.c \
	testutils.c testutils.h

genericxml2xmltest_LDADD = $(LDADDS)
virstorageutiltest_SOURCES = \
	virstorageutiltest.c \
	testutils.c \
	testutils.h \
	$(NULL)

virstorageutiltest_LDADD = \
	../src/libvirt_driver_storage_impl.la \
	$(LDADDS) \
	$(NULL)

storagevolxml2argvtest_SOURCES = \
    storagevolxml2argvtest.c \
    testutils.c testutils.h

storagevolxml2argvtest_LDADD = \
	$(LIBXML_LIBS) \
	../src/libvirt_driver_storage_impl.la \
	../src/libvirt_conf.la \
	../src/libvirt_util.la \
	$(LDADDS)

storagevolxml2xmltest_SOURCES = \
	storagevolxml2xmltest.c \
	testutils.c testutils.h

storagevolxml2xmltest_LDADD = $(LDADDS)
storagepoolxml2xmltest_SOURCES = \
	storagepoolxml2xmltest.c \
	testutils.c testutils.h

storagepoolxml2xmltest_LDADD = $(LDADDS)
nodedevxml2xmltest_SOURCES = \
	nodedevxml2xmltest.c \
	testutils.c testutils.h

nodedevxml2xmltest_LDADD = $(LDADDS)
interfacexml2xmltest_SOURCES = \
	interfacexml2xmltest.c \
	testutils.c testutils.h

interfacexml2xmltest_LDADD = $(LDADDS)
cputest_SOURCES = cputest.c testutils.c testutils.h $(am__append_61)
cputest_LDADD = $(LDADDS) $(LIBXML_LIBS) $(am__append_62)
metadatatest_SOURCES = \
	metadatatest.c \
	testutils.c testutils.h

metadatatest_LDADD = $(LDADDS) $(LIBXML_LIBS)
virshtest_SOURCES = \
	virshtest.c \
	testutils.c testutils.h

virshtest_LDADD = $(LDADDS)
virconftest_SOURCES = \
	virconftest.c testutils.h testutils.c

virconftest_LDADD = $(LDADDS)
virhostcputest_SOURCES = \
	virhostcputest.c testutils.h testutils.c virfilewrapper.h virfilewrapper.c

virhostcputest_LDADD = $(LDADDS)
commandtest_SOURCES = \
	commandtest.c testutils.h testutils.c

commandtest_LDADD = $(LDADDS)

# Must not link to any libvirt modules - libc / gnulib only
# otherwise external libraries might unexpectedly leak
# file descriptors into commandhelper invalidating the
# test logic assumptions
commandhelper_SOURCES = \
	commandhelper.c

commandhelper_LDADD = \
	$(NO_INDIRECT_LDFLAGS) \
	$(GNULIB_LIBS)

commandhelper_LDFLAGS = -static
virkmodtest_SOURCES = \
	virkmodtest.c testutils.h testutils.c

virkmodtest_LDADD = $(LDADDS)
vircapstest_SOURCES = vircapstest.c testutils.h testutils.c \
	$(am__append_63) $(am__append_64) $(am__append_65)
vircapstest_LDADD = $(qemu_LDADDS) $(LDADDS)
domaincapsmock_la_SOURCES = domaincapsmock.c
domaincapsmock_la_CFLAGS = $(AM_CFLAGS)
domaincapsmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
domaincapsmock_la_LIBADD = $(MOCKLIBS_LIBS)
domaincapstest_SOURCES = domaincapstest.c testutils.h testutils.c \
	$(am__append_66) $(am__append_68)
domaincapstest_LDADD = $(LDADDS) $(am__append_67) $(am__append_69) \
	$(am__append_70)
virnetmessagetest_SOURCES = \
	virnetmessagetest.c testutils.h testutils.c

virnetmessagetest_CFLAGS = $(XDR_CFLAGS) $(AM_CFLAGS)
virnetmessagetest_LDADD = $(LDADDS)
virnetsockettest_SOURCES = \
	virnetsockettest.c testutils.h testutils.c

virnetsockettest_LDADD = $(LDADDS)
virnetdaemontest_SOURCES = \
	virnetdaemontest.c \
	testutils.h testutils.c

virnetdaemontest_CFLAGS = $(XDR_CFLAGS) $(AM_CFLAGS)
virnetdaemontest_LDADD = $(LDADDS)
virnetdaemonmock_la_SOURCES = \
	virnetdaemonmock.c

virnetdaemonmock_la_CFLAGS = $(AM_CFLAGS)
virnetdaemonmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virnetdaemonmock_la_LIBADD = $(MOCKLIBS_LIBS)
virnetserverclienttest_SOURCES = \
	virnetserverclienttest.c \
	testutils.h testutils.c

virnetserverclienttest_CFLAGS = $(XDR_CFLAGS) $(AM_CFLAGS)
virnetserverclienttest_LDADD = $(LDADDS)
virnetserverclientmock_la_SOURCES = \
	virnetserverclientmock.c

virnetserverclientmock_la_CFLAGS = $(AM_CFLAGS)
virnetserverclientmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virnetserverclientmock_la_LIBADD = $(MOCKLIBS_LIBS)
virnettlscontexttest_SOURCES =  \
	virnettlscontexttest.c virnettlshelpers.h \
	virnettlshelpers.c testutils.h testutils.c \
	$(am__append_71)
virnettlscontexttest_LDADD = $(LDADDS) \
	$(GNUTLS_LIBS) $(am__append_72)
virnettlssessiontest_SOURCES =  \
	virnettlssessiontest.c virnettlshelpers.h \
	virnettlshelpers.c testutils.h testutils.c \
	$(am__append_73)
virnettlssessiontest_LDADD = $(LDADDS) \
	$(GNUTLS_LIBS) $(am__append_74)
virtimetest_SOURCES = \
	virtimetest.c testutils.h testutils.c

virtimetest_LDADD = $(LDADDS)
virschematest_SOURCES = \
	virschematest.c testutils.h testutils.c

virschematest_LDADD = $(LDADDS) $(LIBXML_LIBS)
virstringtest_SOURCES = \
	virstringtest.c testutils.h testutils.c

virstringtest_LDADD = $(LDADDS)
virstoragetest_SOURCES = \
	virstoragetest.c testutils.h testutils.c

virstoragetest_LDADD = $(LDADDS) \
	../src/libvirt.la \
	../src/libvirt_conf.la \
	../src/libvirt_util.la \
	../src/libvirt_driver_storage_impl.la \
	../gnulib/lib/libgnu.la \
	$(NULL)

viridentitytest_SOURCES = \
	viridentitytest.c testutils.h testutils.c

viridentitytest_LDADD = $(LDADDS) $(am__append_77)
viridentitytest_DEPENDENCIES = libsecurityselinuxhelper.la \
	../src/libvirt.la

viriscsitest_SOURCES = \
	viriscsitest.c testutils.h testutils.c

viriscsitest_LDADD = $(LDADDS)
virkeycodetest_SOURCES = \
	virkeycodetest.c testutils.h testutils.c

virkeycodetest_LDADD = $(LDADDS)
virlockspacetest_SOURCES = \
	virlockspacetest.c testutils.h testutils.c

virlockspacetest_LDADD = $(LDADDS)
virlogtest_SOURCES = \
	virlogtest.c testutils.h testutils.c

virlogtest_LDADD = $(LDADDS)
virportallocatortest_SOURCES = \
	virportallocatortest.c testutils.h testutils.c

virportallocatortest_LDADD = $(LDADDS)
virportallocatormock_la_SOURCES = \
	virportallocatormock.c

virportallocatormock_la_CFLAGS = $(AM_CFLAGS)
virportallocatormock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virportallocatormock_la_LIBADD = $(MOCKLIBS_LIBS)
vircgrouptest_SOURCES = \
	vircgrouptest.c testutils.h testutils.c

vircgrouptest_LDADD = $(LDADDS)
vircgroupmock_la_SOURCES = \
	vircgroupmock.c

vircgroupmock_la_CFLAGS = $(AM_CFLAGS)
vircgroupmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
vircgroupmock_la_LIBADD = $(MOCKLIBS_LIBS)
vircryptotest_SOURCES = \
	vircryptotest.c testutils.h testutils.c

vircryptotest_LDADD = $(LDADDS)
virhostdevtest_SOURCES = \
	virhostdevtest.c testutils.h testutils.c

virhostdevtest_LDADD = $(LDADDS)
virpcitest_SOURCES = \
	virpcitest.c testutils.h testutils.c

virpcitest_LDADD = $(LDADDS)
virpcimock_la_SOURCES = \
	virpcimock.c

virpcimock_la_CFLAGS = $(AM_CFLAGS)
virpcimock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virpcimock_la_LIBADD = $(MOCKLIBS_LIBS)
virrandommock_la_SOURCES = \
	virrandommock.c

virrandommock_la_CFLAGS = $(AM_CFLAGS)
virrandommock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virrandommock_la_LIBADD = $(MOCKLIBS_LIBS)
virhostcpumock_la_SOURCES = \
	virhostcpumock.c

virhostcpumock_la_CFLAGS = $(AM_CFLAGS)
virhostcpumock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virhostcpumock_la_LIBADD = $(MOCKLIBS_LIBS)
virfilecachemock_la_SOURCES = \
	virfilecachemock.c

virfilecachemock_la_CFLAGS = $(AM_CFLAGS)
virfilecachemock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virfilecachemock_la_LIBADD = $(MOCKLIBS_LIBS)
vircaps2xmltest_SOURCES = \
	vircaps2xmltest.c testutils.h testutils.c virfilewrapper.h virfilewrapper.c

vircaps2xmltest_LDADD = $(LDADDS)
virnumamock_la_SOURCES = \
	virnumamock.c

virnumamock_la_CFLAGS = $(AM_CFLAGS)
virnumamock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virnumamock_la_LIBADD = $(MOCKLIBS_LIBS)
virresctrltest_SOURCES = \
	virresctrltest.c testutils.h testutils.c virfilewrapper.h virfilewrapper.c

virresctrltest_LDADD = $(LDADDS)
nsstest_SOURCES = \
	nsstest.c testutils.h testutils.c

nsstest_CFLAGS = \
	$(AM_CFLAGS)	\
	-I$(top_srcdir)/tools/nss

nsstest_LDADD = \
	$(LDADDS)	\
	../tools/nss/libnss_libvirt_impl.la

nssguesttest_SOURCES = \
	nsstest.c testutils.h testutils.c

nssguesttest_CFLAGS = \
	-DLIBVIRT_NSS_GUEST	\
	$(AM_CFLAGS)	\
	-I$(top_srcdir)/tools/nss

nssguesttest_LDADD = \
	$(LDADDS)	\
	../tools/nss/libnss_libvirt_guest_impl.la

nssmock_la_SOURCES = \
	nssmock.c

nssmock_la_CFLAGS = $(AM_CFLAGS)
nssmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
nssmock_la_LIBADD = $(MOCKLIBS_LIBS)
nsslinktest_SOURCES = nsslinktest.c
nsslinktest_CFLAGS = \
	$(AM_CFLAGS)		\
	-I$(top_srcdir)/tools/nss

nsslinktest_LDADD = ../tools/nss/libnss_libvirt_impl.la
nsslinktest_LDFLAGS = $(NULL)
nssguestlinktest_SOURCES = nsslinktest.c
nssguestlinktest_CFLAGS = \
	-DLIBVIRT_NSS_GUEST	\
	$(AM_CFLAGS)		\
	-I$(top_srcdir)/tools/nss

nssguestlinktest_LDADD = ../tools/nss/libnss_libvirt_guest_impl.la
nssguestlinktest_LDFLAGS = $(NULL)
virdeterministichashmock_la_SOURCES = \
	virdeterministichashmock.c

virdeterministichashmock_la_CFLAGS = $(AM_CFLAGS)
virdeterministichashmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virdeterministichashmock_la_LIBADD = $(MOCKLIBS_LIBS)
virmacmaptest_SOURCES = \
	virmacmaptest.c testutils.h testutils.c

virmacmaptest_CLFAGS = $(AM_CFLAGS)
virmacmaptest_LDADD = $(LDADDS)
virnetdevtest_SOURCES = \
	virnetdevtest.c testutils.h testutils.c

virnetdevtest_CFLAGS = $(AM_CFLAGS) $(LIBNL_CFLAGS)
virnetdevtest_LDADD = $(LDADDS)
virnetdevmock_la_SOURCES = \
	virnetdevmock.c

virnetdevmock_la_CFLAGS = $(AM_CFLAGS) $(LIBNL_CFLAGS)
virnetdevmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virnetdevmock_la_LIBADD = $(MOCKLIBS_LIBS)
virrotatingfiletest_SOURCES = \
	virrotatingfiletest.c testutils.h testutils.c

virrotatingfiletest_CFLAGS = $(AM_CFLAGS)
virrotatingfiletest_LDADD = $(LDADDS)
virusbtest_SOURCES = \
	virusbtest.c testutils.h testutils.c

virusbtest_LDADD = $(LDADDS)
virnetdevbandwidthtest_SOURCES = \
	virnetdevbandwidthtest.c testutils.h testutils.c

virnetdevbandwidthtest_LDADD = $(LDADDS) $(LIBXML_LIBS)
virusbmock_la_SOURCES = virusbmock.c
virusbmock_la_CFLAGS = $(AM_CFLAGS)
virusbmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virusbmock_la_LIBADD = $(MOCKLIBS_LIBS) \
	$(PROBES_O) \
	../src/libvirt_util.la

virnetdevbandwidthmock_la_SOURCES = \
	virnetdevbandwidthmock.c

virnetdevbandwidthmock_la_CFLAGS = $(AM_CFLAGS)
virnetdevbandwidthmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virnetdevbandwidthmock_la_LIBADD = $(MOCKLIBS_LIBS)
virtestmock_la_SOURCES = \
	virtestmock.c

virtestmock_la_CFLAGS = $(AM_CFLAGS)
virtestmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virtestmock_la_LIBADD = \
	$(MOCKLIBS_LIBS) \
	$(PROBES_O) \
	../src/libvirt_util.la

virdbustest_SOURCES = \
	virdbustest.c testutils.h testutils.c

virdbustest_CFLAGS = $(AM_CFLAGS) $(DBUS_CFLAGS)
virdbustest_LDADD = $(LDADDS) $(DBUS_LIBS)
virdbusmock_la_SOURCES = \
	virdbusmock.c

virdbusmock_la_CFLAGS = $(AM_CFLAGS) $(DBUS_CFLAGS)
virdbusmock_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
virdbusmock_la_LIBADD = $(MOCKLIBS_LIBS)
virpolkittest_SOURCES = \
	virpolkittest.c testutils.h testutils.c

virpolkittest_CFLAGS = $(AM_CFLAGS) $(DBUS_CFLAGS)
virpolkittest_LDADD = $(LDADDS) $(DBUS_LIBS)
virsystemdtest_SOURCES = \
	virsystemdtest.c testutils.h testutils.c

virsystemdtest_CFLAGS = $(AM_CFLAGS) $(DBUS_CFLAGS)
virsystemdtest_LDADD = $(LDADDS) $(DBUS_LIBS)
viruritest_SOURCES = \
	viruritest.c testutils.h testutils.c

viruritest_LDADD = $(LDADDS)
virkeyfiletest_SOURCES = \
	virkeyfiletest.c testutils.h testutils.c

virkeyfiletest_LDADD = $(LDADDS)
viralloctest_SOURCES = \
	viralloctest.c testutils.h testutils.c

viralloctest_LDADD = $(LDADDS)
virauthconfigtest_SOURCES = \
	virauthconfigtest.c testutils.h testutils.c

virauthconfigtest_LDADD = $(LDADDS)
seclabeltest_SOURCES = \
	seclabeltest.c testutils.h testutils.c

seclabeltest_LDADD = $(LDADDS)
libsecurityselinuxhelper_la_SOURCES = \
	securityselinuxhelper.c

libsecurityselinuxhelper_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
securityselinuxtest_SOURCES = \
	securityselinuxtest.c testutils.h testutils.c

securityselinuxtest_LDADD = $(LDADDS) $(SELINUX_LIBS)
securityselinuxtest_DEPENDENCIES = libsecurityselinuxhelper.la \
	../src/libvirt.la

securityselinuxlabeltest_SOURCES = \
	securityselinuxlabeltest.c testutils.h testutils.c \
        testutilsqemu.h testutilsqemu.c

securityselinuxlabeltest_LDADD = $(qemu_LDADDS) $(LDADDS) $(SELINUX_LIBS)
securityselinuxlabeltest_DEPENDENCIES = libsecurityselinuxhelper.la \
	../src/libvirt.la

virbuftest_SOURCES = \
	virbuftest.c testutils.h testutils.c

virbuftest_LDADD = $(LDADDS)
virhashtest_SOURCES = \
	virhashtest.c virhashdata.h testutils.h testutils.c

virhashtest_LDADD = $(LDADDS)
viratomictest_SOURCES = \
	viratomictest.c testutils.h testutils.c

viratomictest_LDADD = $(LDADDS)
virbitmaptest_SOURCES = \
	virbitmaptest.c testutils.h testutils.c

virbitmaptest_LDADD = $(LDADDS)
virendiantest_SOURCES = \
	virendiantest.c testutils.h testutils.c

virendiantest_LDADD = $(LDADDS)
virfiletest_SOURCES = \
	virfiletest.c testutils.h testutils.c

virfiletest_LDADD = $(LDADDS)
virfilecachetest_SOURCES = \
	virfilecachetest.c testutils.h testutils.c

virfilecachetest_LDADD = $(LDADDS)
virfirewalltest_SOURCES = \
	virfirewalltest.c testutils.h testutils.c

virfirewalltest_LDADD = $(LDADDS) $(DBUS_LIBS)
virfirewalltest_CFLAGS = $(AM_CFLAGS) $(DBUS_CFLAGS)
virjsontest_SOURCES = \
	virjsontest.c testutils.h testutils.c

virjsontest_LDADD = $(LDADDS)
utiltest_SOURCES = \
	utiltest.c testutils.h testutils.c

utiltest_LDADD = $(LDADDS)
virdrivermoduletest_SOURCES = \
	virdrivermoduletest.c testutils.h testutils.c

virdrivermoduletest_LDADD = $(LDADDS)
eventtest_SOURCES = \
	eventtest.c testutils.h testutils.c

eventtest_LDADD = $(LIB_CLOCK_GETTIME) $(LDADDS)
libshunload_la_SOURCES = shunloadhelper.c
libshunload_la_LIBADD = ../src/libvirt.la
libshunload_la_LDFLAGS = $(MOCKLIBS_LDFLAGS)
shunloadtest_SOURCES = \
	shunloadtest.c

shunloadtest_LDADD = $(LIB_PTHREAD) $(DLOPEN_LIBS)
shunloadtest_DEPENDENCIES = libshunload.la
sysinfotest_SOURCES = \
	sysinfotest.c testutils.h testutils.c

sysinfotest_LDADD = $(LDADDS)
domainconftest_SOURCES = \
	domainconftest.c testutils.h testutils.c

domainconftest_LDADD = $(LDADDS)
fdstreamtest_SOURCES = \
	fdstreamtest.c testutils.h testutils.c

fdstreamtest_LDADD = $(LDADDS)
objecteventtest_SOURCES = \
	objecteventtest.c \
	testutils.c testutils.h

objecteventtest_LDADD = $(LDADDS)
virtypedparamtest_SOURCES = \
	virtypedparamtest.c testutils.h testutils.c

virtypedparamtest_LDADD = $(LDADDS)
fchosttest_SOURCES = \
       fchosttest.c testutils.h testutils.c

fchosttest_LDADD = $(LDADDS)
scsihosttest_SOURCES = \
       scsihosttest.c testutils.h testutils.c

scsihosttest_LDADD = $(LDADDS)
virscsitest_SOURCES = \
       virscsitest.c testutils.h testutils.c

virscsitest_LDADD = $(LDADDS)
#CILOPTFLAGS = 
#CILOPTINCS = 
#CILOPTPACKAGES = -package unix,str,cil
#CILOPTLIBS = -linkpkg
#objectlocking_SOURCES = objectlocking.ml
CLEANFILES = *.cov *.gcov .libs/*.gcda .libs/*.gcno *.gcno *.gcda *.cmi *.cmx \
	objectlocking-files.txt

all: all-am

.SUFFIXES:
.SUFFIXES: .c .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu tests/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --gnu tests/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-checkLTLIBRARIES:
	-test -z "$(check_LTLIBRARIES)" || rm -f $(check_LTLIBRARIES)
	@list='$(check_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; for p in $$list; do \
	  dir="`echo $$p | sed -e 's|/[^/]*$$||'`"; \
	  test "$$dir" != "$$p" || dir=.; \
	  echo "rm -f \"$${dir}/so_locations\""; \
	  rm -f "$${dir}/so_locations"; \
	done
bhyveargv2xmlmock.la: $(bhyveargv2xmlmock_la_OBJECTS) $(bhyveargv2xmlmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(bhyveargv2xmlmock_la_LINK) $(am_bhyveargv2xmlmock_la_rpath) $(bhyveargv2xmlmock_la_OBJECTS) $(bhyveargv2xmlmock_la_LIBADD) $(LIBS)
bhyvexml2argvmock.la: $(bhyvexml2argvmock_la_OBJECTS) $(bhyvexml2argvmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(bhyvexml2argvmock_la_LINK) $(am_bhyvexml2argvmock_la_rpath) $(bhyvexml2argvmock_la_OBJECTS) $(bhyvexml2argvmock_la_LIBADD) $(LIBS)
domaincapsmock.la: $(domaincapsmock_la_OBJECTS) $(domaincapsmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(domaincapsmock_la_LINK) $(am_domaincapsmock_la_rpath) $(domaincapsmock_la_OBJECTS) $(domaincapsmock_la_LIBADD) $(LIBS)
libqemumonitortestutils.la: $(libqemumonitortestutils_la_OBJECTS) $(libqemumonitortestutils_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(LINK) $(am_libqemumonitortestutils_la_rpath) $(libqemumonitortestutils_la_OBJECTS) $(libqemumonitortestutils_la_LIBADD) $(LIBS)
libqemutestdriver.la: $(libqemutestdriver_la_OBJECTS) $(libqemutestdriver_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libqemutestdriver_la_LINK) $(am_libqemutestdriver_la_rpath) $(libqemutestdriver_la_OBJECTS) $(libqemutestdriver_la_LIBADD) $(LIBS)
libsecurityselinuxhelper.la: $(libsecurityselinuxhelper_la_OBJECTS) $(libsecurityselinuxhelper_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libsecurityselinuxhelper_la_LINK) $(am_libsecurityselinuxhelper_la_rpath) $(libsecurityselinuxhelper_la_OBJECTS) $(libsecurityselinuxhelper_la_LIBADD) $(LIBS)
libshunload.la: $(libshunload_la_OBJECTS) $(libshunload_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(libshunload_la_LINK) $(am_libshunload_la_rpath) $(libshunload_la_OBJECTS) $(libshunload_la_LIBADD) $(LIBS)
nssmock.la: $(nssmock_la_OBJECTS) $(nssmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(nssmock_la_LINK) $(am_nssmock_la_rpath) $(nssmock_la_OBJECTS) $(nssmock_la_LIBADD) $(LIBS)
qemucaps2xmlmock.la: $(qemucaps2xmlmock_la_OBJECTS) $(qemucaps2xmlmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(qemucaps2xmlmock_la_LINK) $(am_qemucaps2xmlmock_la_rpath) $(qemucaps2xmlmock_la_OBJECTS) $(qemucaps2xmlmock_la_LIBADD) $(LIBS)
qemucapsprobemock.la: $(qemucapsprobemock_la_OBJECTS) $(qemucapsprobemock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(qemucapsprobemock_la_LINK) $(am_qemucapsprobemock_la_rpath) $(qemucapsprobemock_la_OBJECTS) $(qemucapsprobemock_la_LIBADD) $(LIBS)
qemucpumock.la: $(qemucpumock_la_OBJECTS) $(qemucpumock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(qemucpumock_la_LINK) $(am_qemucpumock_la_rpath) $(qemucpumock_la_OBJECTS) $(qemucpumock_la_LIBADD) $(LIBS)
qemuxml2argvmock.la: $(qemuxml2argvmock_la_OBJECTS) $(qemuxml2argvmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(qemuxml2argvmock_la_LINK) $(am_qemuxml2argvmock_la_rpath) $(qemuxml2argvmock_la_OBJECTS) $(qemuxml2argvmock_la_LIBADD) $(LIBS)
vircgroupmock.la: $(vircgroupmock_la_OBJECTS) $(vircgroupmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(vircgroupmock_la_LINK) $(am_vircgroupmock_la_rpath) $(vircgroupmock_la_OBJECTS) $(vircgroupmock_la_LIBADD) $(LIBS)
virdbusmock.la: $(virdbusmock_la_OBJECTS) $(virdbusmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virdbusmock_la_LINK) $(am_virdbusmock_la_rpath) $(virdbusmock_la_OBJECTS) $(virdbusmock_la_LIBADD) $(LIBS)
virdeterministichashmock.la: $(virdeterministichashmock_la_OBJECTS) $(virdeterministichashmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virdeterministichashmock_la_LINK) $(am_virdeterministichashmock_la_rpath) $(virdeterministichashmock_la_OBJECTS) $(virdeterministichashmock_la_LIBADD) $(LIBS)
virfilecachemock.la: $(virfilecachemock_la_OBJECTS) $(virfilecachemock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virfilecachemock_la_LINK) $(am_virfilecachemock_la_rpath) $(virfilecachemock_la_OBJECTS) $(virfilecachemock_la_LIBADD) $(LIBS)
virhostcpumock.la: $(virhostcpumock_la_OBJECTS) $(virhostcpumock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virhostcpumock_la_LINK) $(am_virhostcpumock_la_rpath) $(virhostcpumock_la_OBJECTS) $(virhostcpumock_la_LIBADD) $(LIBS)
virmocklibxl.la: $(virmocklibxl_la_OBJECTS) $(virmocklibxl_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virmocklibxl_la_LINK) $(am_virmocklibxl_la_rpath) $(virmocklibxl_la_OBJECTS) $(virmocklibxl_la_LIBADD) $(LIBS)
virnetdaemonmock.la: $(virnetdaemonmock_la_OBJECTS) $(virnetdaemonmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virnetdaemonmock_la_LINK) $(am_virnetdaemonmock_la_rpath) $(virnetdaemonmock_la_OBJECTS) $(virnetdaemonmock_la_LIBADD) $(LIBS)
virnetdevbandwidthmock.la: $(virnetdevbandwidthmock_la_OBJECTS) $(virnetdevbandwidthmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virnetdevbandwidthmock_la_LINK) $(am_virnetdevbandwidthmock_la_rpath) $(virnetdevbandwidthmock_la_OBJECTS) $(virnetdevbandwidthmock_la_LIBADD) $(LIBS)
virnetdevmock.la: $(virnetdevmock_la_OBJECTS) $(virnetdevmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virnetdevmock_la_LINK) $(am_virnetdevmock_la_rpath) $(virnetdevmock_la_OBJECTS) $(virnetdevmock_la_LIBADD) $(LIBS)
virnetserverclientmock.la: $(virnetserverclientmock_la_OBJECTS) $(virnetserverclientmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virnetserverclientmock_la_LINK) $(am_virnetserverclientmock_la_rpath) $(virnetserverclientmock_la_OBJECTS) $(virnetserverclientmock_la_LIBADD) $(LIBS)
virnumamock.la: $(virnumamock_la_OBJECTS) $(virnumamock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virnumamock_la_LINK) $(am_virnumamock_la_rpath) $(virnumamock_la_OBJECTS) $(virnumamock_la_LIBADD) $(LIBS)
virpcimock.la: $(virpcimock_la_OBJECTS) $(virpcimock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virpcimock_la_LINK) $(am_virpcimock_la_rpath) $(virpcimock_la_OBJECTS) $(virpcimock_la_LIBADD) $(LIBS)
virportallocatormock.la: $(virportallocatormock_la_OBJECTS) $(virportallocatormock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virportallocatormock_la_LINK) $(am_virportallocatormock_la_rpath) $(virportallocatormock_la_OBJECTS) $(virportallocatormock_la_LIBADD) $(LIBS)
virrandommock.la: $(virrandommock_la_OBJECTS) $(virrandommock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virrandommock_la_LINK) $(am_virrandommock_la_rpath) $(virrandommock_la_OBJECTS) $(virrandommock_la_LIBADD) $(LIBS)
virtestmock.la: $(virtestmock_la_OBJECTS) $(virtestmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virtestmock_la_LINK) $(am_virtestmock_la_rpath) $(virtestmock_la_OBJECTS) $(virtestmock_la_LIBADD) $(LIBS)
virusbmock.la: $(virusbmock_la_OBJECTS) $(virusbmock_la_DEPENDENCIES) 
	$(AM_V_CCLD)$(virusbmock_la_LINK) $(am_virusbmock_la_rpath) $(virusbmock_la_OBJECTS) $(virusbmock_la_LIBADD) $(LIBS)

clean-checkPROGRAMS:
	@list='$(check_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list

clean-noinstPROGRAMS:
	@list='$(noinst_PROGRAMS)'; test -n "$$list" || exit 0; \
	echo " rm -f" $$list; \
	rm -f $$list || exit $$?; \
	test -n "$(EXEEXT)" || exit 0; \
	list=`for p in $$list; do echo "$$p"; done | sed 's/$(EXEEXT)$$//'`; \
	echo " rm -f" $$list; \
	rm -f $$list
bhyveargv2xmltest$(EXEEXT): $(bhyveargv2xmltest_OBJECTS) $(bhyveargv2xmltest_DEPENDENCIES) 
	@rm -f bhyveargv2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bhyveargv2xmltest_OBJECTS) $(bhyveargv2xmltest_LDADD) $(LIBS)
bhyvexml2argvtest$(EXEEXT): $(bhyvexml2argvtest_OBJECTS) $(bhyvexml2argvtest_DEPENDENCIES) 
	@rm -f bhyvexml2argvtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bhyvexml2argvtest_OBJECTS) $(bhyvexml2argvtest_LDADD) $(LIBS)
bhyvexml2xmltest$(EXEEXT): $(bhyvexml2xmltest_OBJECTS) $(bhyvexml2xmltest_DEPENDENCIES) 
	@rm -f bhyvexml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(bhyvexml2xmltest_OBJECTS) $(bhyvexml2xmltest_LDADD) $(LIBS)
commandhelper$(EXEEXT): $(commandhelper_OBJECTS) $(commandhelper_DEPENDENCIES) 
	@rm -f commandhelper$(EXEEXT)
	$(AM_V_CCLD)$(commandhelper_LINK) $(commandhelper_OBJECTS) $(commandhelper_LDADD) $(LIBS)
commandtest$(EXEEXT): $(commandtest_OBJECTS) $(commandtest_DEPENDENCIES) 
	@rm -f commandtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(commandtest_OBJECTS) $(commandtest_LDADD) $(LIBS)
cputest$(EXEEXT): $(cputest_OBJECTS) $(cputest_DEPENDENCIES) 
	@rm -f cputest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(cputest_OBJECTS) $(cputest_LDADD) $(LIBS)
domaincapstest$(EXEEXT): $(domaincapstest_OBJECTS) $(domaincapstest_DEPENDENCIES) 
	@rm -f domaincapstest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(domaincapstest_OBJECTS) $(domaincapstest_LDADD) $(LIBS)
domainconftest$(EXEEXT): $(domainconftest_OBJECTS) $(domainconftest_DEPENDENCIES) 
	@rm -f domainconftest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(domainconftest_OBJECTS) $(domainconftest_LDADD) $(LIBS)
domainsnapshotxml2xmltest$(EXEEXT): $(domainsnapshotxml2xmltest_OBJECTS) $(domainsnapshotxml2xmltest_DEPENDENCIES) 
	@rm -f domainsnapshotxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(domainsnapshotxml2xmltest_OBJECTS) $(domainsnapshotxml2xmltest_LDADD) $(LIBS)
esxutilstest$(EXEEXT): $(esxutilstest_OBJECTS) $(esxutilstest_DEPENDENCIES) 
	@rm -f esxutilstest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(esxutilstest_OBJECTS) $(esxutilstest_LDADD) $(LIBS)
eventtest$(EXEEXT): $(eventtest_OBJECTS) $(eventtest_DEPENDENCIES) 
	@rm -f eventtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(eventtest_OBJECTS) $(eventtest_LDADD) $(LIBS)
fchosttest$(EXEEXT): $(fchosttest_OBJECTS) $(fchosttest_DEPENDENCIES) 
	@rm -f fchosttest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fchosttest_OBJECTS) $(fchosttest_LDADD) $(LIBS)
fdstreamtest$(EXEEXT): $(fdstreamtest_OBJECTS) $(fdstreamtest_DEPENDENCIES) 
	@rm -f fdstreamtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(fdstreamtest_OBJECTS) $(fdstreamtest_LDADD) $(LIBS)
genericxml2xmltest$(EXEEXT): $(genericxml2xmltest_OBJECTS) $(genericxml2xmltest_DEPENDENCIES) 
	@rm -f genericxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(genericxml2xmltest_OBJECTS) $(genericxml2xmltest_LDADD) $(LIBS)
interfacexml2xmltest$(EXEEXT): $(interfacexml2xmltest_OBJECTS) $(interfacexml2xmltest_DEPENDENCIES) 
	@rm -f interfacexml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(interfacexml2xmltest_OBJECTS) $(interfacexml2xmltest_LDADD) $(LIBS)
libxlxml2domconfigtest$(EXEEXT): $(libxlxml2domconfigtest_OBJECTS) $(libxlxml2domconfigtest_DEPENDENCIES) 
	@rm -f libxlxml2domconfigtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(libxlxml2domconfigtest_OBJECTS) $(libxlxml2domconfigtest_LDADD) $(LIBS)
lxcconf2xmltest$(EXEEXT): $(lxcconf2xmltest_OBJECTS) $(lxcconf2xmltest_DEPENDENCIES) 
	@rm -f lxcconf2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lxcconf2xmltest_OBJECTS) $(lxcconf2xmltest_LDADD) $(LIBS)
lxcxml2xmltest$(EXEEXT): $(lxcxml2xmltest_OBJECTS) $(lxcxml2xmltest_DEPENDENCIES) 
	@rm -f lxcxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(lxcxml2xmltest_OBJECTS) $(lxcxml2xmltest_LDADD) $(LIBS)
metadatatest$(EXEEXT): $(metadatatest_OBJECTS) $(metadatatest_DEPENDENCIES) 
	@rm -f metadatatest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(metadatatest_OBJECTS) $(metadatatest_LDADD) $(LIBS)
networkxml2conftest$(EXEEXT): $(networkxml2conftest_OBJECTS) $(networkxml2conftest_DEPENDENCIES) 
	@rm -f networkxml2conftest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(networkxml2conftest_OBJECTS) $(networkxml2conftest_LDADD) $(LIBS)
networkxml2firewalltest$(EXEEXT): $(networkxml2firewalltest_OBJECTS) $(networkxml2firewalltest_DEPENDENCIES) 
	@rm -f networkxml2firewalltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(networkxml2firewalltest_OBJECTS) $(networkxml2firewalltest_LDADD) $(LIBS)
networkxml2xmltest$(EXEEXT): $(networkxml2xmltest_OBJECTS) $(networkxml2xmltest_DEPENDENCIES) 
	@rm -f networkxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(networkxml2xmltest_OBJECTS) $(networkxml2xmltest_LDADD) $(LIBS)
networkxml2xmlupdatetest$(EXEEXT): $(networkxml2xmlupdatetest_OBJECTS) $(networkxml2xmlupdatetest_DEPENDENCIES) 
	@rm -f networkxml2xmlupdatetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(networkxml2xmlupdatetest_OBJECTS) $(networkxml2xmlupdatetest_LDADD) $(LIBS)
nodedevxml2xmltest$(EXEEXT): $(nodedevxml2xmltest_OBJECTS) $(nodedevxml2xmltest_DEPENDENCIES) 
	@rm -f nodedevxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nodedevxml2xmltest_OBJECTS) $(nodedevxml2xmltest_LDADD) $(LIBS)
nssguestlinktest$(EXEEXT): $(nssguestlinktest_OBJECTS) $(nssguestlinktest_DEPENDENCIES) 
	@rm -f nssguestlinktest$(EXEEXT)
	$(AM_V_CCLD)$(nssguestlinktest_LINK) $(nssguestlinktest_OBJECTS) $(nssguestlinktest_LDADD) $(LIBS)
nssguesttest$(EXEEXT): $(nssguesttest_OBJECTS) $(nssguesttest_DEPENDENCIES) 
	@rm -f nssguesttest$(EXEEXT)
	$(AM_V_CCLD)$(nssguesttest_LINK) $(nssguesttest_OBJECTS) $(nssguesttest_LDADD) $(LIBS)
nsslinktest$(EXEEXT): $(nsslinktest_OBJECTS) $(nsslinktest_DEPENDENCIES) 
	@rm -f nsslinktest$(EXEEXT)
	$(AM_V_CCLD)$(nsslinktest_LINK) $(nsslinktest_OBJECTS) $(nsslinktest_LDADD) $(LIBS)
nsstest$(EXEEXT): $(nsstest_OBJECTS) $(nsstest_DEPENDENCIES) 
	@rm -f nsstest$(EXEEXT)
	$(AM_V_CCLD)$(nsstest_LINK) $(nsstest_OBJECTS) $(nsstest_LDADD) $(LIBS)
nwfilterebiptablestest$(EXEEXT): $(nwfilterebiptablestest_OBJECTS) $(nwfilterebiptablestest_DEPENDENCIES) 
	@rm -f nwfilterebiptablestest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nwfilterebiptablestest_OBJECTS) $(nwfilterebiptablestest_LDADD) $(LIBS)
nwfilterxml2firewalltest$(EXEEXT): $(nwfilterxml2firewalltest_OBJECTS) $(nwfilterxml2firewalltest_DEPENDENCIES) 
	@rm -f nwfilterxml2firewalltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nwfilterxml2firewalltest_OBJECTS) $(nwfilterxml2firewalltest_LDADD) $(LIBS)
nwfilterxml2xmltest$(EXEEXT): $(nwfilterxml2xmltest_OBJECTS) $(nwfilterxml2xmltest_DEPENDENCIES) 
	@rm -f nwfilterxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(nwfilterxml2xmltest_OBJECTS) $(nwfilterxml2xmltest_LDADD) $(LIBS)
objecteventtest$(EXEEXT): $(objecteventtest_OBJECTS) $(objecteventtest_DEPENDENCIES) 
	@rm -f objecteventtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(objecteventtest_OBJECTS) $(objecteventtest_LDADD) $(LIBS)
objectlocking$(EXEEXT): $(objectlocking_OBJECTS) $(objectlocking_DEPENDENCIES) 
	@rm -f objectlocking$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(objectlocking_OBJECTS) $(objectlocking_LDADD) $(LIBS)
openvzutilstest$(EXEEXT): $(openvzutilstest_OBJECTS) $(openvzutilstest_DEPENDENCIES) 
	@rm -f openvzutilstest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(openvzutilstest_OBJECTS) $(openvzutilstest_LDADD) $(LIBS)
qemuagenttest$(EXEEXT): $(qemuagenttest_OBJECTS) $(qemuagenttest_DEPENDENCIES) 
	@rm -f qemuagenttest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemuagenttest_OBJECTS) $(qemuagenttest_LDADD) $(LIBS)
qemuargv2xmltest$(EXEEXT): $(qemuargv2xmltest_OBJECTS) $(qemuargv2xmltest_DEPENDENCIES) 
	@rm -f qemuargv2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemuargv2xmltest_OBJECTS) $(qemuargv2xmltest_LDADD) $(LIBS)
qemucapabilitiestest$(EXEEXT): $(qemucapabilitiestest_OBJECTS) $(qemucapabilitiestest_DEPENDENCIES) 
	@rm -f qemucapabilitiestest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemucapabilitiestest_OBJECTS) $(qemucapabilitiestest_LDADD) $(LIBS)
qemucaps2xmltest$(EXEEXT): $(qemucaps2xmltest_OBJECTS) $(qemucaps2xmltest_DEPENDENCIES) 
	@rm -f qemucaps2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemucaps2xmltest_OBJECTS) $(qemucaps2xmltest_LDADD) $(LIBS)
qemucapsprobe$(EXEEXT): $(qemucapsprobe_OBJECTS) $(qemucapsprobe_DEPENDENCIES) 
	@rm -f qemucapsprobe$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemucapsprobe_OBJECTS) $(qemucapsprobe_LDADD) $(LIBS)
qemucommandutiltest$(EXEEXT): $(qemucommandutiltest_OBJECTS) $(qemucommandutiltest_DEPENDENCIES) 
	@rm -f qemucommandutiltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemucommandutiltest_OBJECTS) $(qemucommandutiltest_LDADD) $(LIBS)
qemuhelptest$(EXEEXT): $(qemuhelptest_OBJECTS) $(qemuhelptest_DEPENDENCIES) 
	@rm -f qemuhelptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemuhelptest_OBJECTS) $(qemuhelptest_LDADD) $(LIBS)
qemuhotplugtest$(EXEEXT): $(qemuhotplugtest_OBJECTS) $(qemuhotplugtest_DEPENDENCIES) 
	@rm -f qemuhotplugtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemuhotplugtest_OBJECTS) $(qemuhotplugtest_LDADD) $(LIBS)
qemumemlocktest$(EXEEXT): $(qemumemlocktest_OBJECTS) $(qemumemlocktest_DEPENDENCIES) 
	@rm -f qemumemlocktest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemumemlocktest_OBJECTS) $(qemumemlocktest_LDADD) $(LIBS)
qemumonitorjsontest$(EXEEXT): $(qemumonitorjsontest_OBJECTS) $(qemumonitorjsontest_DEPENDENCIES) 
	@rm -f qemumonitorjsontest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemumonitorjsontest_OBJECTS) $(qemumonitorjsontest_LDADD) $(LIBS)
qemumonitortest$(EXEEXT): $(qemumonitortest_OBJECTS) $(qemumonitortest_DEPENDENCIES) 
	@rm -f qemumonitortest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemumonitortest_OBJECTS) $(qemumonitortest_LDADD) $(LIBS)
qemuxml2argvtest$(EXEEXT): $(qemuxml2argvtest_OBJECTS) $(qemuxml2argvtest_DEPENDENCIES) 
	@rm -f qemuxml2argvtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemuxml2argvtest_OBJECTS) $(qemuxml2argvtest_LDADD) $(LIBS)
qemuxml2xmltest$(EXEEXT): $(qemuxml2xmltest_OBJECTS) $(qemuxml2xmltest_DEPENDENCIES) 
	@rm -f qemuxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(qemuxml2xmltest_OBJECTS) $(qemuxml2xmltest_LDADD) $(LIBS)
scsihosttest$(EXEEXT): $(scsihosttest_OBJECTS) $(scsihosttest_DEPENDENCIES) 
	@rm -f scsihosttest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(scsihosttest_OBJECTS) $(scsihosttest_LDADD) $(LIBS)
seclabeltest$(EXEEXT): $(seclabeltest_OBJECTS) $(seclabeltest_DEPENDENCIES) 
	@rm -f seclabeltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(seclabeltest_OBJECTS) $(seclabeltest_LDADD) $(LIBS)
secretxml2xmltest$(EXEEXT): $(secretxml2xmltest_OBJECTS) $(secretxml2xmltest_DEPENDENCIES) 
	@rm -f secretxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(secretxml2xmltest_OBJECTS) $(secretxml2xmltest_LDADD) $(LIBS)
securityselinuxlabeltest$(EXEEXT): $(securityselinuxlabeltest_OBJECTS) $(securityselinuxlabeltest_DEPENDENCIES) 
	@rm -f securityselinuxlabeltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(securityselinuxlabeltest_OBJECTS) $(securityselinuxlabeltest_LDADD) $(LIBS)
securityselinuxtest$(EXEEXT): $(securityselinuxtest_OBJECTS) $(securityselinuxtest_DEPENDENCIES) 
	@rm -f securityselinuxtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(securityselinuxtest_OBJECTS) $(securityselinuxtest_LDADD) $(LIBS)
sexpr2xmltest$(EXEEXT): $(sexpr2xmltest_OBJECTS) $(sexpr2xmltest_DEPENDENCIES) 
	@rm -f sexpr2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sexpr2xmltest_OBJECTS) $(sexpr2xmltest_LDADD) $(LIBS)
shunloadtest$(EXEEXT): $(shunloadtest_OBJECTS) $(shunloadtest_DEPENDENCIES) 
	@rm -f shunloadtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(shunloadtest_OBJECTS) $(shunloadtest_LDADD) $(LIBS)
sockettest$(EXEEXT): $(sockettest_OBJECTS) $(sockettest_DEPENDENCIES) 
	@rm -f sockettest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sockettest_OBJECTS) $(sockettest_LDADD) $(LIBS)
ssh$(EXEEXT): $(ssh_OBJECTS) $(ssh_DEPENDENCIES) 
	@rm -f ssh$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(ssh_OBJECTS) $(ssh_LDADD) $(LIBS)
storagebackendsheepdogtest$(EXEEXT): $(storagebackendsheepdogtest_OBJECTS) $(storagebackendsheepdogtest_DEPENDENCIES) 
	@rm -f storagebackendsheepdogtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(storagebackendsheepdogtest_OBJECTS) $(storagebackendsheepdogtest_LDADD) $(LIBS)
storagepoolxml2xmltest$(EXEEXT): $(storagepoolxml2xmltest_OBJECTS) $(storagepoolxml2xmltest_DEPENDENCIES) 
	@rm -f storagepoolxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(storagepoolxml2xmltest_OBJECTS) $(storagepoolxml2xmltest_LDADD) $(LIBS)
storagevolxml2argvtest$(EXEEXT): $(storagevolxml2argvtest_OBJECTS) $(storagevolxml2argvtest_DEPENDENCIES) 
	@rm -f storagevolxml2argvtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(storagevolxml2argvtest_OBJECTS) $(storagevolxml2argvtest_LDADD) $(LIBS)
storagevolxml2xmltest$(EXEEXT): $(storagevolxml2xmltest_OBJECTS) $(storagevolxml2xmltest_DEPENDENCIES) 
	@rm -f storagevolxml2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(storagevolxml2xmltest_OBJECTS) $(storagevolxml2xmltest_LDADD) $(LIBS)
sysinfotest$(EXEEXT): $(sysinfotest_OBJECTS) $(sysinfotest_DEPENDENCIES) 
	@rm -f sysinfotest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(sysinfotest_OBJECTS) $(sysinfotest_LDADD) $(LIBS)
utiltest$(EXEEXT): $(utiltest_OBJECTS) $(utiltest_DEPENDENCIES) 
	@rm -f utiltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(utiltest_OBJECTS) $(utiltest_LDADD) $(LIBS)
vboxsnapshotxmltest$(EXEEXT): $(vboxsnapshotxmltest_OBJECTS) $(vboxsnapshotxmltest_DEPENDENCIES) 
	@rm -f vboxsnapshotxmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vboxsnapshotxmltest_OBJECTS) $(vboxsnapshotxmltest_LDADD) $(LIBS)
viralloctest$(EXEEXT): $(viralloctest_OBJECTS) $(viralloctest_DEPENDENCIES) 
	@rm -f viralloctest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(viralloctest_OBJECTS) $(viralloctest_LDADD) $(LIBS)
viratomictest$(EXEEXT): $(viratomictest_OBJECTS) $(viratomictest_DEPENDENCIES) 
	@rm -f viratomictest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(viratomictest_OBJECTS) $(viratomictest_LDADD) $(LIBS)
virauthconfigtest$(EXEEXT): $(virauthconfigtest_OBJECTS) $(virauthconfigtest_DEPENDENCIES) 
	@rm -f virauthconfigtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virauthconfigtest_OBJECTS) $(virauthconfigtest_LDADD) $(LIBS)
virbitmaptest$(EXEEXT): $(virbitmaptest_OBJECTS) $(virbitmaptest_DEPENDENCIES) 
	@rm -f virbitmaptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virbitmaptest_OBJECTS) $(virbitmaptest_LDADD) $(LIBS)
virbuftest$(EXEEXT): $(virbuftest_OBJECTS) $(virbuftest_DEPENDENCIES) 
	@rm -f virbuftest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virbuftest_OBJECTS) $(virbuftest_LDADD) $(LIBS)
vircaps2xmltest$(EXEEXT): $(vircaps2xmltest_OBJECTS) $(vircaps2xmltest_DEPENDENCIES) 
	@rm -f vircaps2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vircaps2xmltest_OBJECTS) $(vircaps2xmltest_LDADD) $(LIBS)
vircapstest$(EXEEXT): $(vircapstest_OBJECTS) $(vircapstest_DEPENDENCIES) 
	@rm -f vircapstest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vircapstest_OBJECTS) $(vircapstest_LDADD) $(LIBS)
vircgrouptest$(EXEEXT): $(vircgrouptest_OBJECTS) $(vircgrouptest_DEPENDENCIES) 
	@rm -f vircgrouptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vircgrouptest_OBJECTS) $(vircgrouptest_LDADD) $(LIBS)
virconftest$(EXEEXT): $(virconftest_OBJECTS) $(virconftest_DEPENDENCIES) 
	@rm -f virconftest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virconftest_OBJECTS) $(virconftest_LDADD) $(LIBS)
vircryptotest$(EXEEXT): $(vircryptotest_OBJECTS) $(vircryptotest_DEPENDENCIES) 
	@rm -f vircryptotest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vircryptotest_OBJECTS) $(vircryptotest_LDADD) $(LIBS)
virdbustest$(EXEEXT): $(virdbustest_OBJECTS) $(virdbustest_DEPENDENCIES) 
	@rm -f virdbustest$(EXEEXT)
	$(AM_V_CCLD)$(virdbustest_LINK) $(virdbustest_OBJECTS) $(virdbustest_LDADD) $(LIBS)
virdrivermoduletest$(EXEEXT): $(virdrivermoduletest_OBJECTS) $(virdrivermoduletest_DEPENDENCIES) 
	@rm -f virdrivermoduletest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virdrivermoduletest_OBJECTS) $(virdrivermoduletest_LDADD) $(LIBS)
virendiantest$(EXEEXT): $(virendiantest_OBJECTS) $(virendiantest_DEPENDENCIES) 
	@rm -f virendiantest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virendiantest_OBJECTS) $(virendiantest_LDADD) $(LIBS)
virfilecachetest$(EXEEXT): $(virfilecachetest_OBJECTS) $(virfilecachetest_DEPENDENCIES) 
	@rm -f virfilecachetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virfilecachetest_OBJECTS) $(virfilecachetest_LDADD) $(LIBS)
virfiletest$(EXEEXT): $(virfiletest_OBJECTS) $(virfiletest_DEPENDENCIES) 
	@rm -f virfiletest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virfiletest_OBJECTS) $(virfiletest_LDADD) $(LIBS)
virfirewalltest$(EXEEXT): $(virfirewalltest_OBJECTS) $(virfirewalltest_DEPENDENCIES) 
	@rm -f virfirewalltest$(EXEEXT)
	$(AM_V_CCLD)$(virfirewalltest_LINK) $(virfirewalltest_OBJECTS) $(virfirewalltest_LDADD) $(LIBS)
virhashtest$(EXEEXT): $(virhashtest_OBJECTS) $(virhashtest_DEPENDENCIES) 
	@rm -f virhashtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virhashtest_OBJECTS) $(virhashtest_LDADD) $(LIBS)
virhostcputest$(EXEEXT): $(virhostcputest_OBJECTS) $(virhostcputest_DEPENDENCIES) 
	@rm -f virhostcputest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virhostcputest_OBJECTS) $(virhostcputest_LDADD) $(LIBS)
virhostdevtest$(EXEEXT): $(virhostdevtest_OBJECTS) $(virhostdevtest_DEPENDENCIES) 
	@rm -f virhostdevtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virhostdevtest_OBJECTS) $(virhostdevtest_LDADD) $(LIBS)
viridentitytest$(EXEEXT): $(viridentitytest_OBJECTS) $(viridentitytest_DEPENDENCIES) 
	@rm -f viridentitytest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(viridentitytest_OBJECTS) $(viridentitytest_LDADD) $(LIBS)
viriscsitest$(EXEEXT): $(viriscsitest_OBJECTS) $(viriscsitest_DEPENDENCIES) 
	@rm -f viriscsitest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(viriscsitest_OBJECTS) $(viriscsitest_LDADD) $(LIBS)
virjsontest$(EXEEXT): $(virjsontest_OBJECTS) $(virjsontest_DEPENDENCIES) 
	@rm -f virjsontest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virjsontest_OBJECTS) $(virjsontest_LDADD) $(LIBS)
virkeycodetest$(EXEEXT): $(virkeycodetest_OBJECTS) $(virkeycodetest_DEPENDENCIES) 
	@rm -f virkeycodetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virkeycodetest_OBJECTS) $(virkeycodetest_LDADD) $(LIBS)
virkeyfiletest$(EXEEXT): $(virkeyfiletest_OBJECTS) $(virkeyfiletest_DEPENDENCIES) 
	@rm -f virkeyfiletest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virkeyfiletest_OBJECTS) $(virkeyfiletest_LDADD) $(LIBS)
virkmodtest$(EXEEXT): $(virkmodtest_OBJECTS) $(virkmodtest_DEPENDENCIES) 
	@rm -f virkmodtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virkmodtest_OBJECTS) $(virkmodtest_LDADD) $(LIBS)
virlockspacetest$(EXEEXT): $(virlockspacetest_OBJECTS) $(virlockspacetest_DEPENDENCIES) 
	@rm -f virlockspacetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virlockspacetest_OBJECTS) $(virlockspacetest_LDADD) $(LIBS)
virlogtest$(EXEEXT): $(virlogtest_OBJECTS) $(virlogtest_DEPENDENCIES) 
	@rm -f virlogtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virlogtest_OBJECTS) $(virlogtest_LDADD) $(LIBS)
virmacmaptest$(EXEEXT): $(virmacmaptest_OBJECTS) $(virmacmaptest_DEPENDENCIES) 
	@rm -f virmacmaptest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virmacmaptest_OBJECTS) $(virmacmaptest_LDADD) $(LIBS)
virnetdaemontest$(EXEEXT): $(virnetdaemontest_OBJECTS) $(virnetdaemontest_DEPENDENCIES) 
	@rm -f virnetdaemontest$(EXEEXT)
	$(AM_V_CCLD)$(virnetdaemontest_LINK) $(virnetdaemontest_OBJECTS) $(virnetdaemontest_LDADD) $(LIBS)
virnetdevbandwidthtest$(EXEEXT): $(virnetdevbandwidthtest_OBJECTS) $(virnetdevbandwidthtest_DEPENDENCIES) 
	@rm -f virnetdevbandwidthtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virnetdevbandwidthtest_OBJECTS) $(virnetdevbandwidthtest_LDADD) $(LIBS)
virnetdevtest$(EXEEXT): $(virnetdevtest_OBJECTS) $(virnetdevtest_DEPENDENCIES) 
	@rm -f virnetdevtest$(EXEEXT)
	$(AM_V_CCLD)$(virnetdevtest_LINK) $(virnetdevtest_OBJECTS) $(virnetdevtest_LDADD) $(LIBS)
virnetmessagetest$(EXEEXT): $(virnetmessagetest_OBJECTS) $(virnetmessagetest_DEPENDENCIES) 
	@rm -f virnetmessagetest$(EXEEXT)
	$(AM_V_CCLD)$(virnetmessagetest_LINK) $(virnetmessagetest_OBJECTS) $(virnetmessagetest_LDADD) $(LIBS)
virnetserverclienttest$(EXEEXT): $(virnetserverclienttest_OBJECTS) $(virnetserverclienttest_DEPENDENCIES) 
	@rm -f virnetserverclienttest$(EXEEXT)
	$(AM_V_CCLD)$(virnetserverclienttest_LINK) $(virnetserverclienttest_OBJECTS) $(virnetserverclienttest_LDADD) $(LIBS)
virnetsockettest$(EXEEXT): $(virnetsockettest_OBJECTS) $(virnetsockettest_DEPENDENCIES) 
	@rm -f virnetsockettest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virnetsockettest_OBJECTS) $(virnetsockettest_LDADD) $(LIBS)
virnettlscontexttest$(EXEEXT): $(virnettlscontexttest_OBJECTS) $(virnettlscontexttest_DEPENDENCIES) 
	@rm -f virnettlscontexttest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virnettlscontexttest_OBJECTS) $(virnettlscontexttest_LDADD) $(LIBS)
virnettlssessiontest$(EXEEXT): $(virnettlssessiontest_OBJECTS) $(virnettlssessiontest_DEPENDENCIES) 
	@rm -f virnettlssessiontest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virnettlssessiontest_OBJECTS) $(virnettlssessiontest_LDADD) $(LIBS)
virpcitest$(EXEEXT): $(virpcitest_OBJECTS) $(virpcitest_DEPENDENCIES) 
	@rm -f virpcitest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virpcitest_OBJECTS) $(virpcitest_LDADD) $(LIBS)
virpolkittest$(EXEEXT): $(virpolkittest_OBJECTS) $(virpolkittest_DEPENDENCIES) 
	@rm -f virpolkittest$(EXEEXT)
	$(AM_V_CCLD)$(virpolkittest_LINK) $(virpolkittest_OBJECTS) $(virpolkittest_LDADD) $(LIBS)
virportallocatortest$(EXEEXT): $(virportallocatortest_OBJECTS) $(virportallocatortest_DEPENDENCIES) 
	@rm -f virportallocatortest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virportallocatortest_OBJECTS) $(virportallocatortest_LDADD) $(LIBS)
virresctrltest$(EXEEXT): $(virresctrltest_OBJECTS) $(virresctrltest_DEPENDENCIES) 
	@rm -f virresctrltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virresctrltest_OBJECTS) $(virresctrltest_LDADD) $(LIBS)
virrotatingfiletest$(EXEEXT): $(virrotatingfiletest_OBJECTS) $(virrotatingfiletest_DEPENDENCIES) 
	@rm -f virrotatingfiletest$(EXEEXT)
	$(AM_V_CCLD)$(virrotatingfiletest_LINK) $(virrotatingfiletest_OBJECTS) $(virrotatingfiletest_LDADD) $(LIBS)
virschematest$(EXEEXT): $(virschematest_OBJECTS) $(virschematest_DEPENDENCIES) 
	@rm -f virschematest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virschematest_OBJECTS) $(virschematest_LDADD) $(LIBS)
virscsitest$(EXEEXT): $(virscsitest_OBJECTS) $(virscsitest_DEPENDENCIES) 
	@rm -f virscsitest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virscsitest_OBJECTS) $(virscsitest_LDADD) $(LIBS)
virshtest$(EXEEXT): $(virshtest_OBJECTS) $(virshtest_DEPENDENCIES) 
	@rm -f virshtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virshtest_OBJECTS) $(virshtest_LDADD) $(LIBS)
virstoragetest$(EXEEXT): $(virstoragetest_OBJECTS) $(virstoragetest_DEPENDENCIES) 
	@rm -f virstoragetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virstoragetest_OBJECTS) $(virstoragetest_LDADD) $(LIBS)
virstorageutiltest$(EXEEXT): $(virstorageutiltest_OBJECTS) $(virstorageutiltest_DEPENDENCIES) 
	@rm -f virstorageutiltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virstorageutiltest_OBJECTS) $(virstorageutiltest_LDADD) $(LIBS)
virstringtest$(EXEEXT): $(virstringtest_OBJECTS) $(virstringtest_DEPENDENCIES) 
	@rm -f virstringtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virstringtest_OBJECTS) $(virstringtest_LDADD) $(LIBS)
virsystemdtest$(EXEEXT): $(virsystemdtest_OBJECTS) $(virsystemdtest_DEPENDENCIES) 
	@rm -f virsystemdtest$(EXEEXT)
	$(AM_V_CCLD)$(virsystemdtest_LINK) $(virsystemdtest_OBJECTS) $(virsystemdtest_LDADD) $(LIBS)
virtimetest$(EXEEXT): $(virtimetest_OBJECTS) $(virtimetest_DEPENDENCIES) 
	@rm -f virtimetest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virtimetest_OBJECTS) $(virtimetest_LDADD) $(LIBS)
virtypedparamtest$(EXEEXT): $(virtypedparamtest_OBJECTS) $(virtypedparamtest_DEPENDENCIES) 
	@rm -f virtypedparamtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virtypedparamtest_OBJECTS) $(virtypedparamtest_LDADD) $(LIBS)
viruritest$(EXEEXT): $(viruritest_OBJECTS) $(viruritest_DEPENDENCIES) 
	@rm -f viruritest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(viruritest_OBJECTS) $(viruritest_LDADD) $(LIBS)
virusbtest$(EXEEXT): $(virusbtest_OBJECTS) $(virusbtest_DEPENDENCIES) 
	@rm -f virusbtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(virusbtest_OBJECTS) $(virusbtest_LDADD) $(LIBS)
vmwarevertest$(EXEEXT): $(vmwarevertest_OBJECTS) $(vmwarevertest_DEPENDENCIES) 
	@rm -f vmwarevertest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vmwarevertest_OBJECTS) $(vmwarevertest_LDADD) $(LIBS)
vmx2xmltest$(EXEEXT): $(vmx2xmltest_OBJECTS) $(vmx2xmltest_DEPENDENCIES) 
	@rm -f vmx2xmltest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(vmx2xmltest_OBJECTS) $(vmx2xmltest_LDADD) $(LIBS)
xencapstest$(EXEEXT): $(xencapstest_OBJECTS) $(xencapstest_DEPENDENCIES) 
	@rm -f xencapstest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xencapstest_OBJECTS) $(xencapstest_LDADD) $(LIBS)
xlconfigtest$(EXEEXT): $(xlconfigtest_OBJECTS) $(xlconfigtest_DEPENDENCIES) 
	@rm -f xlconfigtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xlconfigtest_OBJECTS) $(xlconfigtest_LDADD) $(LIBS)
xmconfigtest$(EXEEXT): $(xmconfigtest_OBJECTS) $(xmconfigtest_DEPENDENCIES) 
	@rm -f xmconfigtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xmconfigtest_OBJECTS) $(xmconfigtest_LDADD) $(LIBS)
xml2sexprtest$(EXEEXT): $(xml2sexprtest_OBJECTS) $(xml2sexprtest_DEPENDENCIES) 
	@rm -f xml2sexprtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xml2sexprtest_OBJECTS) $(xml2sexprtest_LDADD) $(LIBS)
xml2vmxtest$(EXEEXT): $(xml2vmxtest_OBJECTS) $(xml2vmxtest_DEPENDENCIES) 
	@rm -f xml2vmxtest$(EXEEXT)
	$(AM_V_CCLD)$(LINK) $(xml2vmxtest_OBJECTS) $(xml2vmxtest_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/bhyveargv2xmlmock_la-bhyveargv2xmlmock.Plo
include ./$(DEPDIR)/bhyveargv2xmltest.Po
include ./$(DEPDIR)/bhyvexml2argvmock_la-bhyvexml2argvmock.Plo
include ./$(DEPDIR)/bhyvexml2argvtest.Po
include ./$(DEPDIR)/bhyvexml2xmltest.Po
include ./$(DEPDIR)/commandhelper.Po
include ./$(DEPDIR)/commandtest.Po
include ./$(DEPDIR)/cputest.Po
include ./$(DEPDIR)/domaincapsmock_la-domaincapsmock.Plo
include ./$(DEPDIR)/domaincapstest.Po
include ./$(DEPDIR)/domainconftest.Po
include ./$(DEPDIR)/domainsnapshotxml2xmltest.Po
include ./$(DEPDIR)/esxutilstest.Po
include ./$(DEPDIR)/eventtest.Po
include ./$(DEPDIR)/fchosttest.Po
include ./$(DEPDIR)/fdstreamtest.Po
include ./$(DEPDIR)/genericxml2xmltest.Po
include ./$(DEPDIR)/interfacexml2xmltest.Po
include ./$(DEPDIR)/libxlxml2domconfigtest.Po
include ./$(DEPDIR)/lxcconf2xmltest.Po
include ./$(DEPDIR)/lxcxml2xmltest.Po
include ./$(DEPDIR)/metadatatest.Po
include ./$(DEPDIR)/networkxml2conftest.Po
include ./$(DEPDIR)/networkxml2firewalltest.Po
include ./$(DEPDIR)/networkxml2xmltest.Po
include ./$(DEPDIR)/networkxml2xmlupdatetest.Po
include ./$(DEPDIR)/nodedevxml2xmltest.Po
include ./$(DEPDIR)/nssguestlinktest-nsslinktest.Po
include ./$(DEPDIR)/nssguesttest-nsstest.Po
include ./$(DEPDIR)/nssguesttest-testutils.Po
include ./$(DEPDIR)/nsslinktest-nsslinktest.Po
include ./$(DEPDIR)/nssmock_la-nssmock.Plo
include ./$(DEPDIR)/nsstest-nsstest.Po
include ./$(DEPDIR)/nsstest-testutils.Po
include ./$(DEPDIR)/nwfilterebiptablestest.Po
include ./$(DEPDIR)/nwfilterxml2firewalltest.Po
include ./$(DEPDIR)/nwfilterxml2xmltest.Po
include ./$(DEPDIR)/objecteventtest.Po
include ./$(DEPDIR)/openvzutilstest.Po
include ./$(DEPDIR)/pkix_asn1_tab.Po
include ./$(DEPDIR)/qemuagenttest.Po
include ./$(DEPDIR)/qemuargv2xmltest.Po
include ./$(DEPDIR)/qemucapabilitiestest.Po
include ./$(DEPDIR)/qemucaps2xmlmock_la-qemucaps2xmlmock.Plo
include ./$(DEPDIR)/qemucaps2xmltest.Po
include ./$(DEPDIR)/qemucapsprobe.Po
include ./$(DEPDIR)/qemucapsprobemock_la-qemucapsprobemock.Plo
include ./$(DEPDIR)/qemucommandutiltest.Po
include ./$(DEPDIR)/qemucpumock_la-qemucpumock.Plo
include ./$(DEPDIR)/qemuhelptest.Po
include ./$(DEPDIR)/qemuhotplugtest.Po
include ./$(DEPDIR)/qemumemlocktest.Po
include ./$(DEPDIR)/qemumonitorjsontest.Po
include ./$(DEPDIR)/qemumonitortest.Po
include ./$(DEPDIR)/qemumonitortestutils.Plo
include ./$(DEPDIR)/qemuxml2argvmock_la-qemuxml2argvmock.Plo
include ./$(DEPDIR)/qemuxml2argvtest.Po
include ./$(DEPDIR)/qemuxml2xmltest.Po
include ./$(DEPDIR)/scsihosttest.Po
include ./$(DEPDIR)/seclabeltest.Po
include ./$(DEPDIR)/secretxml2xmltest.Po
include ./$(DEPDIR)/securityselinuxhelper.Plo
include ./$(DEPDIR)/securityselinuxlabeltest.Po
include ./$(DEPDIR)/securityselinuxtest.Po
include ./$(DEPDIR)/sexpr2xmltest.Po
include ./$(DEPDIR)/shunloadhelper.Plo
include ./$(DEPDIR)/shunloadtest.Po
include ./$(DEPDIR)/sockettest.Po
include ./$(DEPDIR)/ssh.Po
include ./$(DEPDIR)/storagebackendsheepdogtest.Po
include ./$(DEPDIR)/storagepoolxml2xmltest.Po
include ./$(DEPDIR)/storagevolxml2argvtest.Po
include ./$(DEPDIR)/storagevolxml2xmltest.Po
include ./$(DEPDIR)/sysinfotest.Po
include ./$(DEPDIR)/testutils.Po
include ./$(DEPDIR)/testutilslxc.Po
include ./$(DEPDIR)/testutilsqemu.Po
include ./$(DEPDIR)/testutilsxen.Po
include ./$(DEPDIR)/utiltest.Po
include ./$(DEPDIR)/vboxsnapshotxmltest.Po
include ./$(DEPDIR)/viralloctest.Po
include ./$(DEPDIR)/viratomictest.Po
include ./$(DEPDIR)/virauthconfigtest.Po
include ./$(DEPDIR)/virbitmaptest.Po
include ./$(DEPDIR)/virbuftest.Po
include ./$(DEPDIR)/vircaps2xmltest.Po
include ./$(DEPDIR)/vircapstest.Po
include ./$(DEPDIR)/vircgroupmock_la-vircgroupmock.Plo
include ./$(DEPDIR)/vircgrouptest.Po
include ./$(DEPDIR)/virconftest.Po
include ./$(DEPDIR)/vircryptotest.Po
include ./$(DEPDIR)/virdbusmock_la-virdbusmock.Plo
include ./$(DEPDIR)/virdbustest-testutils.Po
include ./$(DEPDIR)/virdbustest-virdbustest.Po
include ./$(DEPDIR)/virdeterministichashmock_la-virdeterministichashmock.Plo
include ./$(DEPDIR)/virdrivermoduletest.Po
include ./$(DEPDIR)/virendiantest.Po
include ./$(DEPDIR)/virfilecachemock_la-virfilecachemock.Plo
include ./$(DEPDIR)/virfilecachetest.Po
include ./$(DEPDIR)/virfiletest.Po
include ./$(DEPDIR)/virfilewrapper.Po
include ./$(DEPDIR)/virfirewalltest-testutils.Po
include ./$(DEPDIR)/virfirewalltest-virfirewalltest.Po
include ./$(DEPDIR)/virhashtest.Po
include ./$(DEPDIR)/virhostcpumock_la-virhostcpumock.Plo
include ./$(DEPDIR)/virhostcputest.Po
include ./$(DEPDIR)/virhostdevtest.Po
include ./$(DEPDIR)/viridentitytest.Po
include ./$(DEPDIR)/viriscsitest.Po
include ./$(DEPDIR)/virjsontest.Po
include ./$(DEPDIR)/virkeycodetest.Po
include ./$(DEPDIR)/virkeyfiletest.Po
include ./$(DEPDIR)/virkmodtest.Po
include ./$(DEPDIR)/virlockspacetest.Po
include ./$(DEPDIR)/virlogtest.Po
include ./$(DEPDIR)/virmacmaptest.Po
include ./$(DEPDIR)/virmocklibxl_la-virmocklibxl.Plo
include ./$(DEPDIR)/virnetdaemonmock_la-virnetdaemonmock.Plo
include ./$(DEPDIR)/virnetdaemontest-testutils.Po
include ./$(DEPDIR)/virnetdaemontest-virnetdaemontest.Po
include ./$(DEPDIR)/virnetdevbandwidthmock_la-virnetdevbandwidthmock.Plo
include ./$(DEPDIR)/virnetdevbandwidthtest.Po
include ./$(DEPDIR)/virnetdevmock_la-virnetdevmock.Plo
include ./$(DEPDIR)/virnetdevtest-testutils.Po
include ./$(DEPDIR)/virnetdevtest-virnetdevtest.Po
include ./$(DEPDIR)/virnetmessagetest-testutils.Po
include ./$(DEPDIR)/virnetmessagetest-virnetmessagetest.Po
include ./$(DEPDIR)/virnetserverclientmock_la-virnetserverclientmock.Plo
include ./$(DEPDIR)/virnetserverclienttest-testutils.Po
include ./$(DEPDIR)/virnetserverclienttest-virnetserverclienttest.Po
include ./$(DEPDIR)/virnetsockettest.Po
include ./$(DEPDIR)/virnettlscontexttest.Po
include ./$(DEPDIR)/virnettlshelpers.Po
include ./$(DEPDIR)/virnettlssessiontest.Po
include ./$(DEPDIR)/virnumamock_la-virnumamock.Plo
include ./$(DEPDIR)/virpcimock_la-virpcimock.Plo
include ./$(DEPDIR)/virpcitest.Po
include ./$(DEPDIR)/virpolkittest-testutils.Po
include ./$(DEPDIR)/virpolkittest-virpolkittest.Po
include ./$(DEPDIR)/virportallocatormock_la-virportallocatormock.Plo
include ./$(DEPDIR)/virportallocatortest.Po
include ./$(DEPDIR)/virrandommock_la-virrandommock.Plo
include ./$(DEPDIR)/virresctrltest.Po
include ./$(DEPDIR)/virrotatingfiletest-testutils.Po
include ./$(DEPDIR)/virrotatingfiletest-virrotatingfiletest.Po
include ./$(DEPDIR)/virschematest.Po
include ./$(DEPDIR)/virscsitest.Po
include ./$(DEPDIR)/virshtest.Po
include ./$(DEPDIR)/virstoragetest.Po
include ./$(DEPDIR)/virstorageutiltest.Po
include ./$(DEPDIR)/virstringtest.Po
include ./$(DEPDIR)/virsystemdtest-testutils.Po
include ./$(DEPDIR)/virsystemdtest-virsystemdtest.Po
include ./$(DEPDIR)/virtestmock_la-virtestmock.Plo
include ./$(DEPDIR)/virtimetest.Po
include ./$(DEPDIR)/virtypedparamtest.Po
include ./$(DEPDIR)/viruritest.Po
include ./$(DEPDIR)/virusbmock_la-virusbmock.Plo
include ./$(DEPDIR)/virusbtest.Po
include ./$(DEPDIR)/vmwarevertest.Po
include ./$(DEPDIR)/vmx2xmltest.Po
include ./$(DEPDIR)/xencapstest.Po
include ./$(DEPDIR)/xlconfigtest.Po
include ./$(DEPDIR)/xmconfigtest.Po
include ./$(DEPDIR)/xml2sexprtest.Po
include ./$(DEPDIR)/xml2vmxtest.Po

.c.o:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ $<

.c.obj:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC) \
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LTCOMPILE) -c -o $@ $<

bhyveargv2xmlmock_la-bhyveargv2xmlmock.lo: bhyveargv2xmlmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bhyveargv2xmlmock_la_CFLAGS) $(CFLAGS) -MT bhyveargv2xmlmock_la-bhyveargv2xmlmock.lo -MD -MP -MF $(DEPDIR)/bhyveargv2xmlmock_la-bhyveargv2xmlmock.Tpo -c -o bhyveargv2xmlmock_la-bhyveargv2xmlmock.lo `test -f 'bhyveargv2xmlmock.c' || echo '$(srcdir)/'`bhyveargv2xmlmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bhyveargv2xmlmock_la-bhyveargv2xmlmock.Tpo $(DEPDIR)/bhyveargv2xmlmock_la-bhyveargv2xmlmock.Plo
#	$(AM_V_CC) \
#	source='bhyveargv2xmlmock.c' object='bhyveargv2xmlmock_la-bhyveargv2xmlmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bhyveargv2xmlmock_la_CFLAGS) $(CFLAGS) -c -o bhyveargv2xmlmock_la-bhyveargv2xmlmock.lo `test -f 'bhyveargv2xmlmock.c' || echo '$(srcdir)/'`bhyveargv2xmlmock.c

bhyvexml2argvmock_la-bhyvexml2argvmock.lo: bhyvexml2argvmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bhyvexml2argvmock_la_CFLAGS) $(CFLAGS) -MT bhyvexml2argvmock_la-bhyvexml2argvmock.lo -MD -MP -MF $(DEPDIR)/bhyvexml2argvmock_la-bhyvexml2argvmock.Tpo -c -o bhyvexml2argvmock_la-bhyvexml2argvmock.lo `test -f 'bhyvexml2argvmock.c' || echo '$(srcdir)/'`bhyvexml2argvmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/bhyvexml2argvmock_la-bhyvexml2argvmock.Tpo $(DEPDIR)/bhyvexml2argvmock_la-bhyvexml2argvmock.Plo
#	$(AM_V_CC) \
#	source='bhyvexml2argvmock.c' object='bhyvexml2argvmock_la-bhyvexml2argvmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(bhyvexml2argvmock_la_CFLAGS) $(CFLAGS) -c -o bhyvexml2argvmock_la-bhyvexml2argvmock.lo `test -f 'bhyvexml2argvmock.c' || echo '$(srcdir)/'`bhyvexml2argvmock.c

domaincapsmock_la-domaincapsmock.lo: domaincapsmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(domaincapsmock_la_CFLAGS) $(CFLAGS) -MT domaincapsmock_la-domaincapsmock.lo -MD -MP -MF $(DEPDIR)/domaincapsmock_la-domaincapsmock.Tpo -c -o domaincapsmock_la-domaincapsmock.lo `test -f 'domaincapsmock.c' || echo '$(srcdir)/'`domaincapsmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/domaincapsmock_la-domaincapsmock.Tpo $(DEPDIR)/domaincapsmock_la-domaincapsmock.Plo
#	$(AM_V_CC) \
#	source='domaincapsmock.c' object='domaincapsmock_la-domaincapsmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(domaincapsmock_la_CFLAGS) $(CFLAGS) -c -o domaincapsmock_la-domaincapsmock.lo `test -f 'domaincapsmock.c' || echo '$(srcdir)/'`domaincapsmock.c

nssmock_la-nssmock.lo: nssmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssmock_la_CFLAGS) $(CFLAGS) -MT nssmock_la-nssmock.lo -MD -MP -MF $(DEPDIR)/nssmock_la-nssmock.Tpo -c -o nssmock_la-nssmock.lo `test -f 'nssmock.c' || echo '$(srcdir)/'`nssmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nssmock_la-nssmock.Tpo $(DEPDIR)/nssmock_la-nssmock.Plo
#	$(AM_V_CC) \
#	source='nssmock.c' object='nssmock_la-nssmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssmock_la_CFLAGS) $(CFLAGS) -c -o nssmock_la-nssmock.lo `test -f 'nssmock.c' || echo '$(srcdir)/'`nssmock.c

qemucaps2xmlmock_la-qemucaps2xmlmock.lo: qemucaps2xmlmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemucaps2xmlmock_la_CFLAGS) $(CFLAGS) -MT qemucaps2xmlmock_la-qemucaps2xmlmock.lo -MD -MP -MF $(DEPDIR)/qemucaps2xmlmock_la-qemucaps2xmlmock.Tpo -c -o qemucaps2xmlmock_la-qemucaps2xmlmock.lo `test -f 'qemucaps2xmlmock.c' || echo '$(srcdir)/'`qemucaps2xmlmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/qemucaps2xmlmock_la-qemucaps2xmlmock.Tpo $(DEPDIR)/qemucaps2xmlmock_la-qemucaps2xmlmock.Plo
#	$(AM_V_CC) \
#	source='qemucaps2xmlmock.c' object='qemucaps2xmlmock_la-qemucaps2xmlmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemucaps2xmlmock_la_CFLAGS) $(CFLAGS) -c -o qemucaps2xmlmock_la-qemucaps2xmlmock.lo `test -f 'qemucaps2xmlmock.c' || echo '$(srcdir)/'`qemucaps2xmlmock.c

qemucapsprobemock_la-qemucapsprobemock.lo: qemucapsprobemock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemucapsprobemock_la_CFLAGS) $(CFLAGS) -MT qemucapsprobemock_la-qemucapsprobemock.lo -MD -MP -MF $(DEPDIR)/qemucapsprobemock_la-qemucapsprobemock.Tpo -c -o qemucapsprobemock_la-qemucapsprobemock.lo `test -f 'qemucapsprobemock.c' || echo '$(srcdir)/'`qemucapsprobemock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/qemucapsprobemock_la-qemucapsprobemock.Tpo $(DEPDIR)/qemucapsprobemock_la-qemucapsprobemock.Plo
#	$(AM_V_CC) \
#	source='qemucapsprobemock.c' object='qemucapsprobemock_la-qemucapsprobemock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemucapsprobemock_la_CFLAGS) $(CFLAGS) -c -o qemucapsprobemock_la-qemucapsprobemock.lo `test -f 'qemucapsprobemock.c' || echo '$(srcdir)/'`qemucapsprobemock.c

qemucpumock_la-qemucpumock.lo: qemucpumock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemucpumock_la_CFLAGS) $(CFLAGS) -MT qemucpumock_la-qemucpumock.lo -MD -MP -MF $(DEPDIR)/qemucpumock_la-qemucpumock.Tpo -c -o qemucpumock_la-qemucpumock.lo `test -f 'qemucpumock.c' || echo '$(srcdir)/'`qemucpumock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/qemucpumock_la-qemucpumock.Tpo $(DEPDIR)/qemucpumock_la-qemucpumock.Plo
#	$(AM_V_CC) \
#	source='qemucpumock.c' object='qemucpumock_la-qemucpumock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemucpumock_la_CFLAGS) $(CFLAGS) -c -o qemucpumock_la-qemucpumock.lo `test -f 'qemucpumock.c' || echo '$(srcdir)/'`qemucpumock.c

qemuxml2argvmock_la-qemuxml2argvmock.lo: qemuxml2argvmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemuxml2argvmock_la_CFLAGS) $(CFLAGS) -MT qemuxml2argvmock_la-qemuxml2argvmock.lo -MD -MP -MF $(DEPDIR)/qemuxml2argvmock_la-qemuxml2argvmock.Tpo -c -o qemuxml2argvmock_la-qemuxml2argvmock.lo `test -f 'qemuxml2argvmock.c' || echo '$(srcdir)/'`qemuxml2argvmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/qemuxml2argvmock_la-qemuxml2argvmock.Tpo $(DEPDIR)/qemuxml2argvmock_la-qemuxml2argvmock.Plo
#	$(AM_V_CC) \
#	source='qemuxml2argvmock.c' object='qemuxml2argvmock_la-qemuxml2argvmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(qemuxml2argvmock_la_CFLAGS) $(CFLAGS) -c -o qemuxml2argvmock_la-qemuxml2argvmock.lo `test -f 'qemuxml2argvmock.c' || echo '$(srcdir)/'`qemuxml2argvmock.c

vircgroupmock_la-vircgroupmock.lo: vircgroupmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vircgroupmock_la_CFLAGS) $(CFLAGS) -MT vircgroupmock_la-vircgroupmock.lo -MD -MP -MF $(DEPDIR)/vircgroupmock_la-vircgroupmock.Tpo -c -o vircgroupmock_la-vircgroupmock.lo `test -f 'vircgroupmock.c' || echo '$(srcdir)/'`vircgroupmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/vircgroupmock_la-vircgroupmock.Tpo $(DEPDIR)/vircgroupmock_la-vircgroupmock.Plo
#	$(AM_V_CC) \
#	source='vircgroupmock.c' object='vircgroupmock_la-vircgroupmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(vircgroupmock_la_CFLAGS) $(CFLAGS) -c -o vircgroupmock_la-vircgroupmock.lo `test -f 'vircgroupmock.c' || echo '$(srcdir)/'`vircgroupmock.c

virdbusmock_la-virdbusmock.lo: virdbusmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbusmock_la_CFLAGS) $(CFLAGS) -MT virdbusmock_la-virdbusmock.lo -MD -MP -MF $(DEPDIR)/virdbusmock_la-virdbusmock.Tpo -c -o virdbusmock_la-virdbusmock.lo `test -f 'virdbusmock.c' || echo '$(srcdir)/'`virdbusmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virdbusmock_la-virdbusmock.Tpo $(DEPDIR)/virdbusmock_la-virdbusmock.Plo
#	$(AM_V_CC) \
#	source='virdbusmock.c' object='virdbusmock_la-virdbusmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbusmock_la_CFLAGS) $(CFLAGS) -c -o virdbusmock_la-virdbusmock.lo `test -f 'virdbusmock.c' || echo '$(srcdir)/'`virdbusmock.c

virdeterministichashmock_la-virdeterministichashmock.lo: virdeterministichashmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdeterministichashmock_la_CFLAGS) $(CFLAGS) -MT virdeterministichashmock_la-virdeterministichashmock.lo -MD -MP -MF $(DEPDIR)/virdeterministichashmock_la-virdeterministichashmock.Tpo -c -o virdeterministichashmock_la-virdeterministichashmock.lo `test -f 'virdeterministichashmock.c' || echo '$(srcdir)/'`virdeterministichashmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virdeterministichashmock_la-virdeterministichashmock.Tpo $(DEPDIR)/virdeterministichashmock_la-virdeterministichashmock.Plo
#	$(AM_V_CC) \
#	source='virdeterministichashmock.c' object='virdeterministichashmock_la-virdeterministichashmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdeterministichashmock_la_CFLAGS) $(CFLAGS) -c -o virdeterministichashmock_la-virdeterministichashmock.lo `test -f 'virdeterministichashmock.c' || echo '$(srcdir)/'`virdeterministichashmock.c

virfilecachemock_la-virfilecachemock.lo: virfilecachemock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfilecachemock_la_CFLAGS) $(CFLAGS) -MT virfilecachemock_la-virfilecachemock.lo -MD -MP -MF $(DEPDIR)/virfilecachemock_la-virfilecachemock.Tpo -c -o virfilecachemock_la-virfilecachemock.lo `test -f 'virfilecachemock.c' || echo '$(srcdir)/'`virfilecachemock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virfilecachemock_la-virfilecachemock.Tpo $(DEPDIR)/virfilecachemock_la-virfilecachemock.Plo
#	$(AM_V_CC) \
#	source='virfilecachemock.c' object='virfilecachemock_la-virfilecachemock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfilecachemock_la_CFLAGS) $(CFLAGS) -c -o virfilecachemock_la-virfilecachemock.lo `test -f 'virfilecachemock.c' || echo '$(srcdir)/'`virfilecachemock.c

virhostcpumock_la-virhostcpumock.lo: virhostcpumock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virhostcpumock_la_CFLAGS) $(CFLAGS) -MT virhostcpumock_la-virhostcpumock.lo -MD -MP -MF $(DEPDIR)/virhostcpumock_la-virhostcpumock.Tpo -c -o virhostcpumock_la-virhostcpumock.lo `test -f 'virhostcpumock.c' || echo '$(srcdir)/'`virhostcpumock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virhostcpumock_la-virhostcpumock.Tpo $(DEPDIR)/virhostcpumock_la-virhostcpumock.Plo
#	$(AM_V_CC) \
#	source='virhostcpumock.c' object='virhostcpumock_la-virhostcpumock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virhostcpumock_la_CFLAGS) $(CFLAGS) -c -o virhostcpumock_la-virhostcpumock.lo `test -f 'virhostcpumock.c' || echo '$(srcdir)/'`virhostcpumock.c

virmocklibxl_la-virmocklibxl.lo: virmocklibxl.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virmocklibxl_la_CFLAGS) $(CFLAGS) -MT virmocklibxl_la-virmocklibxl.lo -MD -MP -MF $(DEPDIR)/virmocklibxl_la-virmocklibxl.Tpo -c -o virmocklibxl_la-virmocklibxl.lo `test -f 'virmocklibxl.c' || echo '$(srcdir)/'`virmocklibxl.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virmocklibxl_la-virmocklibxl.Tpo $(DEPDIR)/virmocklibxl_la-virmocklibxl.Plo
#	$(AM_V_CC) \
#	source='virmocklibxl.c' object='virmocklibxl_la-virmocklibxl.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virmocklibxl_la_CFLAGS) $(CFLAGS) -c -o virmocklibxl_la-virmocklibxl.lo `test -f 'virmocklibxl.c' || echo '$(srcdir)/'`virmocklibxl.c

virnetdaemonmock_la-virnetdaemonmock.lo: virnetdaemonmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemonmock_la_CFLAGS) $(CFLAGS) -MT virnetdaemonmock_la-virnetdaemonmock.lo -MD -MP -MF $(DEPDIR)/virnetdaemonmock_la-virnetdaemonmock.Tpo -c -o virnetdaemonmock_la-virnetdaemonmock.lo `test -f 'virnetdaemonmock.c' || echo '$(srcdir)/'`virnetdaemonmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdaemonmock_la-virnetdaemonmock.Tpo $(DEPDIR)/virnetdaemonmock_la-virnetdaemonmock.Plo
#	$(AM_V_CC) \
#	source='virnetdaemonmock.c' object='virnetdaemonmock_la-virnetdaemonmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemonmock_la_CFLAGS) $(CFLAGS) -c -o virnetdaemonmock_la-virnetdaemonmock.lo `test -f 'virnetdaemonmock.c' || echo '$(srcdir)/'`virnetdaemonmock.c

virnetdevbandwidthmock_la-virnetdevbandwidthmock.lo: virnetdevbandwidthmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevbandwidthmock_la_CFLAGS) $(CFLAGS) -MT virnetdevbandwidthmock_la-virnetdevbandwidthmock.lo -MD -MP -MF $(DEPDIR)/virnetdevbandwidthmock_la-virnetdevbandwidthmock.Tpo -c -o virnetdevbandwidthmock_la-virnetdevbandwidthmock.lo `test -f 'virnetdevbandwidthmock.c' || echo '$(srcdir)/'`virnetdevbandwidthmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdevbandwidthmock_la-virnetdevbandwidthmock.Tpo $(DEPDIR)/virnetdevbandwidthmock_la-virnetdevbandwidthmock.Plo
#	$(AM_V_CC) \
#	source='virnetdevbandwidthmock.c' object='virnetdevbandwidthmock_la-virnetdevbandwidthmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevbandwidthmock_la_CFLAGS) $(CFLAGS) -c -o virnetdevbandwidthmock_la-virnetdevbandwidthmock.lo `test -f 'virnetdevbandwidthmock.c' || echo '$(srcdir)/'`virnetdevbandwidthmock.c

virnetdevmock_la-virnetdevmock.lo: virnetdevmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevmock_la_CFLAGS) $(CFLAGS) -MT virnetdevmock_la-virnetdevmock.lo -MD -MP -MF $(DEPDIR)/virnetdevmock_la-virnetdevmock.Tpo -c -o virnetdevmock_la-virnetdevmock.lo `test -f 'virnetdevmock.c' || echo '$(srcdir)/'`virnetdevmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdevmock_la-virnetdevmock.Tpo $(DEPDIR)/virnetdevmock_la-virnetdevmock.Plo
#	$(AM_V_CC) \
#	source='virnetdevmock.c' object='virnetdevmock_la-virnetdevmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevmock_la_CFLAGS) $(CFLAGS) -c -o virnetdevmock_la-virnetdevmock.lo `test -f 'virnetdevmock.c' || echo '$(srcdir)/'`virnetdevmock.c

virnetserverclientmock_la-virnetserverclientmock.lo: virnetserverclientmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclientmock_la_CFLAGS) $(CFLAGS) -MT virnetserverclientmock_la-virnetserverclientmock.lo -MD -MP -MF $(DEPDIR)/virnetserverclientmock_la-virnetserverclientmock.Tpo -c -o virnetserverclientmock_la-virnetserverclientmock.lo `test -f 'virnetserverclientmock.c' || echo '$(srcdir)/'`virnetserverclientmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetserverclientmock_la-virnetserverclientmock.Tpo $(DEPDIR)/virnetserverclientmock_la-virnetserverclientmock.Plo
#	$(AM_V_CC) \
#	source='virnetserverclientmock.c' object='virnetserverclientmock_la-virnetserverclientmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclientmock_la_CFLAGS) $(CFLAGS) -c -o virnetserverclientmock_la-virnetserverclientmock.lo `test -f 'virnetserverclientmock.c' || echo '$(srcdir)/'`virnetserverclientmock.c

virnumamock_la-virnumamock.lo: virnumamock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnumamock_la_CFLAGS) $(CFLAGS) -MT virnumamock_la-virnumamock.lo -MD -MP -MF $(DEPDIR)/virnumamock_la-virnumamock.Tpo -c -o virnumamock_la-virnumamock.lo `test -f 'virnumamock.c' || echo '$(srcdir)/'`virnumamock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnumamock_la-virnumamock.Tpo $(DEPDIR)/virnumamock_la-virnumamock.Plo
#	$(AM_V_CC) \
#	source='virnumamock.c' object='virnumamock_la-virnumamock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnumamock_la_CFLAGS) $(CFLAGS) -c -o virnumamock_la-virnumamock.lo `test -f 'virnumamock.c' || echo '$(srcdir)/'`virnumamock.c

virpcimock_la-virpcimock.lo: virpcimock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpcimock_la_CFLAGS) $(CFLAGS) -MT virpcimock_la-virpcimock.lo -MD -MP -MF $(DEPDIR)/virpcimock_la-virpcimock.Tpo -c -o virpcimock_la-virpcimock.lo `test -f 'virpcimock.c' || echo '$(srcdir)/'`virpcimock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virpcimock_la-virpcimock.Tpo $(DEPDIR)/virpcimock_la-virpcimock.Plo
#	$(AM_V_CC) \
#	source='virpcimock.c' object='virpcimock_la-virpcimock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpcimock_la_CFLAGS) $(CFLAGS) -c -o virpcimock_la-virpcimock.lo `test -f 'virpcimock.c' || echo '$(srcdir)/'`virpcimock.c

virportallocatormock_la-virportallocatormock.lo: virportallocatormock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virportallocatormock_la_CFLAGS) $(CFLAGS) -MT virportallocatormock_la-virportallocatormock.lo -MD -MP -MF $(DEPDIR)/virportallocatormock_la-virportallocatormock.Tpo -c -o virportallocatormock_la-virportallocatormock.lo `test -f 'virportallocatormock.c' || echo '$(srcdir)/'`virportallocatormock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virportallocatormock_la-virportallocatormock.Tpo $(DEPDIR)/virportallocatormock_la-virportallocatormock.Plo
#	$(AM_V_CC) \
#	source='virportallocatormock.c' object='virportallocatormock_la-virportallocatormock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virportallocatormock_la_CFLAGS) $(CFLAGS) -c -o virportallocatormock_la-virportallocatormock.lo `test -f 'virportallocatormock.c' || echo '$(srcdir)/'`virportallocatormock.c

virrandommock_la-virrandommock.lo: virrandommock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrandommock_la_CFLAGS) $(CFLAGS) -MT virrandommock_la-virrandommock.lo -MD -MP -MF $(DEPDIR)/virrandommock_la-virrandommock.Tpo -c -o virrandommock_la-virrandommock.lo `test -f 'virrandommock.c' || echo '$(srcdir)/'`virrandommock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virrandommock_la-virrandommock.Tpo $(DEPDIR)/virrandommock_la-virrandommock.Plo
#	$(AM_V_CC) \
#	source='virrandommock.c' object='virrandommock_la-virrandommock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrandommock_la_CFLAGS) $(CFLAGS) -c -o virrandommock_la-virrandommock.lo `test -f 'virrandommock.c' || echo '$(srcdir)/'`virrandommock.c

virtestmock_la-virtestmock.lo: virtestmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virtestmock_la_CFLAGS) $(CFLAGS) -MT virtestmock_la-virtestmock.lo -MD -MP -MF $(DEPDIR)/virtestmock_la-virtestmock.Tpo -c -o virtestmock_la-virtestmock.lo `test -f 'virtestmock.c' || echo '$(srcdir)/'`virtestmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virtestmock_la-virtestmock.Tpo $(DEPDIR)/virtestmock_la-virtestmock.Plo
#	$(AM_V_CC) \
#	source='virtestmock.c' object='virtestmock_la-virtestmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virtestmock_la_CFLAGS) $(CFLAGS) -c -o virtestmock_la-virtestmock.lo `test -f 'virtestmock.c' || echo '$(srcdir)/'`virtestmock.c

virusbmock_la-virusbmock.lo: virusbmock.c
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virusbmock_la_CFLAGS) $(CFLAGS) -MT virusbmock_la-virusbmock.lo -MD -MP -MF $(DEPDIR)/virusbmock_la-virusbmock.Tpo -c -o virusbmock_la-virusbmock.lo `test -f 'virusbmock.c' || echo '$(srcdir)/'`virusbmock.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virusbmock_la-virusbmock.Tpo $(DEPDIR)/virusbmock_la-virusbmock.Plo
#	$(AM_V_CC) \
#	source='virusbmock.c' object='virusbmock_la-virusbmock.lo' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virusbmock_la_CFLAGS) $(CFLAGS) -c -o virusbmock_la-virusbmock.lo `test -f 'virusbmock.c' || echo '$(srcdir)/'`virusbmock.c

nssguestlinktest-nsslinktest.o: nsslinktest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguestlinktest_CFLAGS) $(CFLAGS) -MT nssguestlinktest-nsslinktest.o -MD -MP -MF $(DEPDIR)/nssguestlinktest-nsslinktest.Tpo -c -o nssguestlinktest-nsslinktest.o `test -f 'nsslinktest.c' || echo '$(srcdir)/'`nsslinktest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nssguestlinktest-nsslinktest.Tpo $(DEPDIR)/nssguestlinktest-nsslinktest.Po
#	$(AM_V_CC) \
#	source='nsslinktest.c' object='nssguestlinktest-nsslinktest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguestlinktest_CFLAGS) $(CFLAGS) -c -o nssguestlinktest-nsslinktest.o `test -f 'nsslinktest.c' || echo '$(srcdir)/'`nsslinktest.c

nssguestlinktest-nsslinktest.obj: nsslinktest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguestlinktest_CFLAGS) $(CFLAGS) -MT nssguestlinktest-nsslinktest.obj -MD -MP -MF $(DEPDIR)/nssguestlinktest-nsslinktest.Tpo -c -o nssguestlinktest-nsslinktest.obj `if test -f 'nsslinktest.c'; then $(CYGPATH_W) 'nsslinktest.c'; else $(CYGPATH_W) '$(srcdir)/nsslinktest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nssguestlinktest-nsslinktest.Tpo $(DEPDIR)/nssguestlinktest-nsslinktest.Po
#	$(AM_V_CC) \
#	source='nsslinktest.c' object='nssguestlinktest-nsslinktest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguestlinktest_CFLAGS) $(CFLAGS) -c -o nssguestlinktest-nsslinktest.obj `if test -f 'nsslinktest.c'; then $(CYGPATH_W) 'nsslinktest.c'; else $(CYGPATH_W) '$(srcdir)/nsslinktest.c'; fi`

nssguesttest-nsstest.o: nsstest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -MT nssguesttest-nsstest.o -MD -MP -MF $(DEPDIR)/nssguesttest-nsstest.Tpo -c -o nssguesttest-nsstest.o `test -f 'nsstest.c' || echo '$(srcdir)/'`nsstest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nssguesttest-nsstest.Tpo $(DEPDIR)/nssguesttest-nsstest.Po
#	$(AM_V_CC) \
#	source='nsstest.c' object='nssguesttest-nsstest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -c -o nssguesttest-nsstest.o `test -f 'nsstest.c' || echo '$(srcdir)/'`nsstest.c

nssguesttest-nsstest.obj: nsstest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -MT nssguesttest-nsstest.obj -MD -MP -MF $(DEPDIR)/nssguesttest-nsstest.Tpo -c -o nssguesttest-nsstest.obj `if test -f 'nsstest.c'; then $(CYGPATH_W) 'nsstest.c'; else $(CYGPATH_W) '$(srcdir)/nsstest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nssguesttest-nsstest.Tpo $(DEPDIR)/nssguesttest-nsstest.Po
#	$(AM_V_CC) \
#	source='nsstest.c' object='nssguesttest-nsstest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -c -o nssguesttest-nsstest.obj `if test -f 'nsstest.c'; then $(CYGPATH_W) 'nsstest.c'; else $(CYGPATH_W) '$(srcdir)/nsstest.c'; fi`

nssguesttest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -MT nssguesttest-testutils.o -MD -MP -MF $(DEPDIR)/nssguesttest-testutils.Tpo -c -o nssguesttest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nssguesttest-testutils.Tpo $(DEPDIR)/nssguesttest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='nssguesttest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -c -o nssguesttest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

nssguesttest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -MT nssguesttest-testutils.obj -MD -MP -MF $(DEPDIR)/nssguesttest-testutils.Tpo -c -o nssguesttest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nssguesttest-testutils.Tpo $(DEPDIR)/nssguesttest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='nssguesttest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nssguesttest_CFLAGS) $(CFLAGS) -c -o nssguesttest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

nsslinktest-nsslinktest.o: nsslinktest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsslinktest_CFLAGS) $(CFLAGS) -MT nsslinktest-nsslinktest.o -MD -MP -MF $(DEPDIR)/nsslinktest-nsslinktest.Tpo -c -o nsslinktest-nsslinktest.o `test -f 'nsslinktest.c' || echo '$(srcdir)/'`nsslinktest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nsslinktest-nsslinktest.Tpo $(DEPDIR)/nsslinktest-nsslinktest.Po
#	$(AM_V_CC) \
#	source='nsslinktest.c' object='nsslinktest-nsslinktest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsslinktest_CFLAGS) $(CFLAGS) -c -o nsslinktest-nsslinktest.o `test -f 'nsslinktest.c' || echo '$(srcdir)/'`nsslinktest.c

nsslinktest-nsslinktest.obj: nsslinktest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsslinktest_CFLAGS) $(CFLAGS) -MT nsslinktest-nsslinktest.obj -MD -MP -MF $(DEPDIR)/nsslinktest-nsslinktest.Tpo -c -o nsslinktest-nsslinktest.obj `if test -f 'nsslinktest.c'; then $(CYGPATH_W) 'nsslinktest.c'; else $(CYGPATH_W) '$(srcdir)/nsslinktest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nsslinktest-nsslinktest.Tpo $(DEPDIR)/nsslinktest-nsslinktest.Po
#	$(AM_V_CC) \
#	source='nsslinktest.c' object='nsslinktest-nsslinktest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsslinktest_CFLAGS) $(CFLAGS) -c -o nsslinktest-nsslinktest.obj `if test -f 'nsslinktest.c'; then $(CYGPATH_W) 'nsslinktest.c'; else $(CYGPATH_W) '$(srcdir)/nsslinktest.c'; fi`

nsstest-nsstest.o: nsstest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -MT nsstest-nsstest.o -MD -MP -MF $(DEPDIR)/nsstest-nsstest.Tpo -c -o nsstest-nsstest.o `test -f 'nsstest.c' || echo '$(srcdir)/'`nsstest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nsstest-nsstest.Tpo $(DEPDIR)/nsstest-nsstest.Po
#	$(AM_V_CC) \
#	source='nsstest.c' object='nsstest-nsstest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -c -o nsstest-nsstest.o `test -f 'nsstest.c' || echo '$(srcdir)/'`nsstest.c

nsstest-nsstest.obj: nsstest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -MT nsstest-nsstest.obj -MD -MP -MF $(DEPDIR)/nsstest-nsstest.Tpo -c -o nsstest-nsstest.obj `if test -f 'nsstest.c'; then $(CYGPATH_W) 'nsstest.c'; else $(CYGPATH_W) '$(srcdir)/nsstest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nsstest-nsstest.Tpo $(DEPDIR)/nsstest-nsstest.Po
#	$(AM_V_CC) \
#	source='nsstest.c' object='nsstest-nsstest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -c -o nsstest-nsstest.obj `if test -f 'nsstest.c'; then $(CYGPATH_W) 'nsstest.c'; else $(CYGPATH_W) '$(srcdir)/nsstest.c'; fi`

nsstest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -MT nsstest-testutils.o -MD -MP -MF $(DEPDIR)/nsstest-testutils.Tpo -c -o nsstest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/nsstest-testutils.Tpo $(DEPDIR)/nsstest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='nsstest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -c -o nsstest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

nsstest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -MT nsstest-testutils.obj -MD -MP -MF $(DEPDIR)/nsstest-testutils.Tpo -c -o nsstest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/nsstest-testutils.Tpo $(DEPDIR)/nsstest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='nsstest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(nsstest_CFLAGS) $(CFLAGS) -c -o nsstest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virdbustest-virdbustest.o: virdbustest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -MT virdbustest-virdbustest.o -MD -MP -MF $(DEPDIR)/virdbustest-virdbustest.Tpo -c -o virdbustest-virdbustest.o `test -f 'virdbustest.c' || echo '$(srcdir)/'`virdbustest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virdbustest-virdbustest.Tpo $(DEPDIR)/virdbustest-virdbustest.Po
#	$(AM_V_CC) \
#	source='virdbustest.c' object='virdbustest-virdbustest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -c -o virdbustest-virdbustest.o `test -f 'virdbustest.c' || echo '$(srcdir)/'`virdbustest.c

virdbustest-virdbustest.obj: virdbustest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -MT virdbustest-virdbustest.obj -MD -MP -MF $(DEPDIR)/virdbustest-virdbustest.Tpo -c -o virdbustest-virdbustest.obj `if test -f 'virdbustest.c'; then $(CYGPATH_W) 'virdbustest.c'; else $(CYGPATH_W) '$(srcdir)/virdbustest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virdbustest-virdbustest.Tpo $(DEPDIR)/virdbustest-virdbustest.Po
#	$(AM_V_CC) \
#	source='virdbustest.c' object='virdbustest-virdbustest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -c -o virdbustest-virdbustest.obj `if test -f 'virdbustest.c'; then $(CYGPATH_W) 'virdbustest.c'; else $(CYGPATH_W) '$(srcdir)/virdbustest.c'; fi`

virdbustest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -MT virdbustest-testutils.o -MD -MP -MF $(DEPDIR)/virdbustest-testutils.Tpo -c -o virdbustest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virdbustest-testutils.Tpo $(DEPDIR)/virdbustest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virdbustest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -c -o virdbustest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virdbustest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -MT virdbustest-testutils.obj -MD -MP -MF $(DEPDIR)/virdbustest-testutils.Tpo -c -o virdbustest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virdbustest-testutils.Tpo $(DEPDIR)/virdbustest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virdbustest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virdbustest_CFLAGS) $(CFLAGS) -c -o virdbustest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virfirewalltest-virfirewalltest.o: virfirewalltest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -MT virfirewalltest-virfirewalltest.o -MD -MP -MF $(DEPDIR)/virfirewalltest-virfirewalltest.Tpo -c -o virfirewalltest-virfirewalltest.o `test -f 'virfirewalltest.c' || echo '$(srcdir)/'`virfirewalltest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virfirewalltest-virfirewalltest.Tpo $(DEPDIR)/virfirewalltest-virfirewalltest.Po
#	$(AM_V_CC) \
#	source='virfirewalltest.c' object='virfirewalltest-virfirewalltest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -c -o virfirewalltest-virfirewalltest.o `test -f 'virfirewalltest.c' || echo '$(srcdir)/'`virfirewalltest.c

virfirewalltest-virfirewalltest.obj: virfirewalltest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -MT virfirewalltest-virfirewalltest.obj -MD -MP -MF $(DEPDIR)/virfirewalltest-virfirewalltest.Tpo -c -o virfirewalltest-virfirewalltest.obj `if test -f 'virfirewalltest.c'; then $(CYGPATH_W) 'virfirewalltest.c'; else $(CYGPATH_W) '$(srcdir)/virfirewalltest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virfirewalltest-virfirewalltest.Tpo $(DEPDIR)/virfirewalltest-virfirewalltest.Po
#	$(AM_V_CC) \
#	source='virfirewalltest.c' object='virfirewalltest-virfirewalltest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -c -o virfirewalltest-virfirewalltest.obj `if test -f 'virfirewalltest.c'; then $(CYGPATH_W) 'virfirewalltest.c'; else $(CYGPATH_W) '$(srcdir)/virfirewalltest.c'; fi`

virfirewalltest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -MT virfirewalltest-testutils.o -MD -MP -MF $(DEPDIR)/virfirewalltest-testutils.Tpo -c -o virfirewalltest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virfirewalltest-testutils.Tpo $(DEPDIR)/virfirewalltest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virfirewalltest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -c -o virfirewalltest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virfirewalltest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -MT virfirewalltest-testutils.obj -MD -MP -MF $(DEPDIR)/virfirewalltest-testutils.Tpo -c -o virfirewalltest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virfirewalltest-testutils.Tpo $(DEPDIR)/virfirewalltest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virfirewalltest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virfirewalltest_CFLAGS) $(CFLAGS) -c -o virfirewalltest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virnetdaemontest-virnetdaemontest.o: virnetdaemontest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -MT virnetdaemontest-virnetdaemontest.o -MD -MP -MF $(DEPDIR)/virnetdaemontest-virnetdaemontest.Tpo -c -o virnetdaemontest-virnetdaemontest.o `test -f 'virnetdaemontest.c' || echo '$(srcdir)/'`virnetdaemontest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdaemontest-virnetdaemontest.Tpo $(DEPDIR)/virnetdaemontest-virnetdaemontest.Po
#	$(AM_V_CC) \
#	source='virnetdaemontest.c' object='virnetdaemontest-virnetdaemontest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -c -o virnetdaemontest-virnetdaemontest.o `test -f 'virnetdaemontest.c' || echo '$(srcdir)/'`virnetdaemontest.c

virnetdaemontest-virnetdaemontest.obj: virnetdaemontest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -MT virnetdaemontest-virnetdaemontest.obj -MD -MP -MF $(DEPDIR)/virnetdaemontest-virnetdaemontest.Tpo -c -o virnetdaemontest-virnetdaemontest.obj `if test -f 'virnetdaemontest.c'; then $(CYGPATH_W) 'virnetdaemontest.c'; else $(CYGPATH_W) '$(srcdir)/virnetdaemontest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdaemontest-virnetdaemontest.Tpo $(DEPDIR)/virnetdaemontest-virnetdaemontest.Po
#	$(AM_V_CC) \
#	source='virnetdaemontest.c' object='virnetdaemontest-virnetdaemontest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -c -o virnetdaemontest-virnetdaemontest.obj `if test -f 'virnetdaemontest.c'; then $(CYGPATH_W) 'virnetdaemontest.c'; else $(CYGPATH_W) '$(srcdir)/virnetdaemontest.c'; fi`

virnetdaemontest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -MT virnetdaemontest-testutils.o -MD -MP -MF $(DEPDIR)/virnetdaemontest-testutils.Tpo -c -o virnetdaemontest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdaemontest-testutils.Tpo $(DEPDIR)/virnetdaemontest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetdaemontest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -c -o virnetdaemontest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virnetdaemontest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -MT virnetdaemontest-testutils.obj -MD -MP -MF $(DEPDIR)/virnetdaemontest-testutils.Tpo -c -o virnetdaemontest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdaemontest-testutils.Tpo $(DEPDIR)/virnetdaemontest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetdaemontest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdaemontest_CFLAGS) $(CFLAGS) -c -o virnetdaemontest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virnetdevtest-virnetdevtest.o: virnetdevtest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -MT virnetdevtest-virnetdevtest.o -MD -MP -MF $(DEPDIR)/virnetdevtest-virnetdevtest.Tpo -c -o virnetdevtest-virnetdevtest.o `test -f 'virnetdevtest.c' || echo '$(srcdir)/'`virnetdevtest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdevtest-virnetdevtest.Tpo $(DEPDIR)/virnetdevtest-virnetdevtest.Po
#	$(AM_V_CC) \
#	source='virnetdevtest.c' object='virnetdevtest-virnetdevtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -c -o virnetdevtest-virnetdevtest.o `test -f 'virnetdevtest.c' || echo '$(srcdir)/'`virnetdevtest.c

virnetdevtest-virnetdevtest.obj: virnetdevtest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -MT virnetdevtest-virnetdevtest.obj -MD -MP -MF $(DEPDIR)/virnetdevtest-virnetdevtest.Tpo -c -o virnetdevtest-virnetdevtest.obj `if test -f 'virnetdevtest.c'; then $(CYGPATH_W) 'virnetdevtest.c'; else $(CYGPATH_W) '$(srcdir)/virnetdevtest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdevtest-virnetdevtest.Tpo $(DEPDIR)/virnetdevtest-virnetdevtest.Po
#	$(AM_V_CC) \
#	source='virnetdevtest.c' object='virnetdevtest-virnetdevtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -c -o virnetdevtest-virnetdevtest.obj `if test -f 'virnetdevtest.c'; then $(CYGPATH_W) 'virnetdevtest.c'; else $(CYGPATH_W) '$(srcdir)/virnetdevtest.c'; fi`

virnetdevtest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -MT virnetdevtest-testutils.o -MD -MP -MF $(DEPDIR)/virnetdevtest-testutils.Tpo -c -o virnetdevtest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdevtest-testutils.Tpo $(DEPDIR)/virnetdevtest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetdevtest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -c -o virnetdevtest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virnetdevtest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -MT virnetdevtest-testutils.obj -MD -MP -MF $(DEPDIR)/virnetdevtest-testutils.Tpo -c -o virnetdevtest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetdevtest-testutils.Tpo $(DEPDIR)/virnetdevtest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetdevtest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetdevtest_CFLAGS) $(CFLAGS) -c -o virnetdevtest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virnetmessagetest-virnetmessagetest.o: virnetmessagetest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -MT virnetmessagetest-virnetmessagetest.o -MD -MP -MF $(DEPDIR)/virnetmessagetest-virnetmessagetest.Tpo -c -o virnetmessagetest-virnetmessagetest.o `test -f 'virnetmessagetest.c' || echo '$(srcdir)/'`virnetmessagetest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetmessagetest-virnetmessagetest.Tpo $(DEPDIR)/virnetmessagetest-virnetmessagetest.Po
#	$(AM_V_CC) \
#	source='virnetmessagetest.c' object='virnetmessagetest-virnetmessagetest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -c -o virnetmessagetest-virnetmessagetest.o `test -f 'virnetmessagetest.c' || echo '$(srcdir)/'`virnetmessagetest.c

virnetmessagetest-virnetmessagetest.obj: virnetmessagetest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -MT virnetmessagetest-virnetmessagetest.obj -MD -MP -MF $(DEPDIR)/virnetmessagetest-virnetmessagetest.Tpo -c -o virnetmessagetest-virnetmessagetest.obj `if test -f 'virnetmessagetest.c'; then $(CYGPATH_W) 'virnetmessagetest.c'; else $(CYGPATH_W) '$(srcdir)/virnetmessagetest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetmessagetest-virnetmessagetest.Tpo $(DEPDIR)/virnetmessagetest-virnetmessagetest.Po
#	$(AM_V_CC) \
#	source='virnetmessagetest.c' object='virnetmessagetest-virnetmessagetest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -c -o virnetmessagetest-virnetmessagetest.obj `if test -f 'virnetmessagetest.c'; then $(CYGPATH_W) 'virnetmessagetest.c'; else $(CYGPATH_W) '$(srcdir)/virnetmessagetest.c'; fi`

virnetmessagetest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -MT virnetmessagetest-testutils.o -MD -MP -MF $(DEPDIR)/virnetmessagetest-testutils.Tpo -c -o virnetmessagetest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetmessagetest-testutils.Tpo $(DEPDIR)/virnetmessagetest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetmessagetest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -c -o virnetmessagetest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virnetmessagetest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -MT virnetmessagetest-testutils.obj -MD -MP -MF $(DEPDIR)/virnetmessagetest-testutils.Tpo -c -o virnetmessagetest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetmessagetest-testutils.Tpo $(DEPDIR)/virnetmessagetest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetmessagetest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetmessagetest_CFLAGS) $(CFLAGS) -c -o virnetmessagetest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virnetserverclienttest-virnetserverclienttest.o: virnetserverclienttest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -MT virnetserverclienttest-virnetserverclienttest.o -MD -MP -MF $(DEPDIR)/virnetserverclienttest-virnetserverclienttest.Tpo -c -o virnetserverclienttest-virnetserverclienttest.o `test -f 'virnetserverclienttest.c' || echo '$(srcdir)/'`virnetserverclienttest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetserverclienttest-virnetserverclienttest.Tpo $(DEPDIR)/virnetserverclienttest-virnetserverclienttest.Po
#	$(AM_V_CC) \
#	source='virnetserverclienttest.c' object='virnetserverclienttest-virnetserverclienttest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -c -o virnetserverclienttest-virnetserverclienttest.o `test -f 'virnetserverclienttest.c' || echo '$(srcdir)/'`virnetserverclienttest.c

virnetserverclienttest-virnetserverclienttest.obj: virnetserverclienttest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -MT virnetserverclienttest-virnetserverclienttest.obj -MD -MP -MF $(DEPDIR)/virnetserverclienttest-virnetserverclienttest.Tpo -c -o virnetserverclienttest-virnetserverclienttest.obj `if test -f 'virnetserverclienttest.c'; then $(CYGPATH_W) 'virnetserverclienttest.c'; else $(CYGPATH_W) '$(srcdir)/virnetserverclienttest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetserverclienttest-virnetserverclienttest.Tpo $(DEPDIR)/virnetserverclienttest-virnetserverclienttest.Po
#	$(AM_V_CC) \
#	source='virnetserverclienttest.c' object='virnetserverclienttest-virnetserverclienttest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -c -o virnetserverclienttest-virnetserverclienttest.obj `if test -f 'virnetserverclienttest.c'; then $(CYGPATH_W) 'virnetserverclienttest.c'; else $(CYGPATH_W) '$(srcdir)/virnetserverclienttest.c'; fi`

virnetserverclienttest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -MT virnetserverclienttest-testutils.o -MD -MP -MF $(DEPDIR)/virnetserverclienttest-testutils.Tpo -c -o virnetserverclienttest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetserverclienttest-testutils.Tpo $(DEPDIR)/virnetserverclienttest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetserverclienttest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -c -o virnetserverclienttest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virnetserverclienttest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -MT virnetserverclienttest-testutils.obj -MD -MP -MF $(DEPDIR)/virnetserverclienttest-testutils.Tpo -c -o virnetserverclienttest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virnetserverclienttest-testutils.Tpo $(DEPDIR)/virnetserverclienttest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virnetserverclienttest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virnetserverclienttest_CFLAGS) $(CFLAGS) -c -o virnetserverclienttest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virpolkittest-virpolkittest.o: virpolkittest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -MT virpolkittest-virpolkittest.o -MD -MP -MF $(DEPDIR)/virpolkittest-virpolkittest.Tpo -c -o virpolkittest-virpolkittest.o `test -f 'virpolkittest.c' || echo '$(srcdir)/'`virpolkittest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virpolkittest-virpolkittest.Tpo $(DEPDIR)/virpolkittest-virpolkittest.Po
#	$(AM_V_CC) \
#	source='virpolkittest.c' object='virpolkittest-virpolkittest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -c -o virpolkittest-virpolkittest.o `test -f 'virpolkittest.c' || echo '$(srcdir)/'`virpolkittest.c

virpolkittest-virpolkittest.obj: virpolkittest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -MT virpolkittest-virpolkittest.obj -MD -MP -MF $(DEPDIR)/virpolkittest-virpolkittest.Tpo -c -o virpolkittest-virpolkittest.obj `if test -f 'virpolkittest.c'; then $(CYGPATH_W) 'virpolkittest.c'; else $(CYGPATH_W) '$(srcdir)/virpolkittest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virpolkittest-virpolkittest.Tpo $(DEPDIR)/virpolkittest-virpolkittest.Po
#	$(AM_V_CC) \
#	source='virpolkittest.c' object='virpolkittest-virpolkittest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -c -o virpolkittest-virpolkittest.obj `if test -f 'virpolkittest.c'; then $(CYGPATH_W) 'virpolkittest.c'; else $(CYGPATH_W) '$(srcdir)/virpolkittest.c'; fi`

virpolkittest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -MT virpolkittest-testutils.o -MD -MP -MF $(DEPDIR)/virpolkittest-testutils.Tpo -c -o virpolkittest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virpolkittest-testutils.Tpo $(DEPDIR)/virpolkittest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virpolkittest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -c -o virpolkittest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virpolkittest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -MT virpolkittest-testutils.obj -MD -MP -MF $(DEPDIR)/virpolkittest-testutils.Tpo -c -o virpolkittest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virpolkittest-testutils.Tpo $(DEPDIR)/virpolkittest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virpolkittest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virpolkittest_CFLAGS) $(CFLAGS) -c -o virpolkittest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virrotatingfiletest-virrotatingfiletest.o: virrotatingfiletest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -MT virrotatingfiletest-virrotatingfiletest.o -MD -MP -MF $(DEPDIR)/virrotatingfiletest-virrotatingfiletest.Tpo -c -o virrotatingfiletest-virrotatingfiletest.o `test -f 'virrotatingfiletest.c' || echo '$(srcdir)/'`virrotatingfiletest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virrotatingfiletest-virrotatingfiletest.Tpo $(DEPDIR)/virrotatingfiletest-virrotatingfiletest.Po
#	$(AM_V_CC) \
#	source='virrotatingfiletest.c' object='virrotatingfiletest-virrotatingfiletest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -c -o virrotatingfiletest-virrotatingfiletest.o `test -f 'virrotatingfiletest.c' || echo '$(srcdir)/'`virrotatingfiletest.c

virrotatingfiletest-virrotatingfiletest.obj: virrotatingfiletest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -MT virrotatingfiletest-virrotatingfiletest.obj -MD -MP -MF $(DEPDIR)/virrotatingfiletest-virrotatingfiletest.Tpo -c -o virrotatingfiletest-virrotatingfiletest.obj `if test -f 'virrotatingfiletest.c'; then $(CYGPATH_W) 'virrotatingfiletest.c'; else $(CYGPATH_W) '$(srcdir)/virrotatingfiletest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virrotatingfiletest-virrotatingfiletest.Tpo $(DEPDIR)/virrotatingfiletest-virrotatingfiletest.Po
#	$(AM_V_CC) \
#	source='virrotatingfiletest.c' object='virrotatingfiletest-virrotatingfiletest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -c -o virrotatingfiletest-virrotatingfiletest.obj `if test -f 'virrotatingfiletest.c'; then $(CYGPATH_W) 'virrotatingfiletest.c'; else $(CYGPATH_W) '$(srcdir)/virrotatingfiletest.c'; fi`

virrotatingfiletest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -MT virrotatingfiletest-testutils.o -MD -MP -MF $(DEPDIR)/virrotatingfiletest-testutils.Tpo -c -o virrotatingfiletest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virrotatingfiletest-testutils.Tpo $(DEPDIR)/virrotatingfiletest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virrotatingfiletest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -c -o virrotatingfiletest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virrotatingfiletest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -MT virrotatingfiletest-testutils.obj -MD -MP -MF $(DEPDIR)/virrotatingfiletest-testutils.Tpo -c -o virrotatingfiletest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virrotatingfiletest-testutils.Tpo $(DEPDIR)/virrotatingfiletest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virrotatingfiletest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virrotatingfiletest_CFLAGS) $(CFLAGS) -c -o virrotatingfiletest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

virsystemdtest-virsystemdtest.o: virsystemdtest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -MT virsystemdtest-virsystemdtest.o -MD -MP -MF $(DEPDIR)/virsystemdtest-virsystemdtest.Tpo -c -o virsystemdtest-virsystemdtest.o `test -f 'virsystemdtest.c' || echo '$(srcdir)/'`virsystemdtest.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virsystemdtest-virsystemdtest.Tpo $(DEPDIR)/virsystemdtest-virsystemdtest.Po
#	$(AM_V_CC) \
#	source='virsystemdtest.c' object='virsystemdtest-virsystemdtest.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -c -o virsystemdtest-virsystemdtest.o `test -f 'virsystemdtest.c' || echo '$(srcdir)/'`virsystemdtest.c

virsystemdtest-virsystemdtest.obj: virsystemdtest.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -MT virsystemdtest-virsystemdtest.obj -MD -MP -MF $(DEPDIR)/virsystemdtest-virsystemdtest.Tpo -c -o virsystemdtest-virsystemdtest.obj `if test -f 'virsystemdtest.c'; then $(CYGPATH_W) 'virsystemdtest.c'; else $(CYGPATH_W) '$(srcdir)/virsystemdtest.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virsystemdtest-virsystemdtest.Tpo $(DEPDIR)/virsystemdtest-virsystemdtest.Po
#	$(AM_V_CC) \
#	source='virsystemdtest.c' object='virsystemdtest-virsystemdtest.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -c -o virsystemdtest-virsystemdtest.obj `if test -f 'virsystemdtest.c'; then $(CYGPATH_W) 'virsystemdtest.c'; else $(CYGPATH_W) '$(srcdir)/virsystemdtest.c'; fi`

virsystemdtest-testutils.o: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -MT virsystemdtest-testutils.o -MD -MP -MF $(DEPDIR)/virsystemdtest-testutils.Tpo -c -o virsystemdtest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c
	$(AM_V_at)$(am__mv) $(DEPDIR)/virsystemdtest-testutils.Tpo $(DEPDIR)/virsystemdtest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virsystemdtest-testutils.o' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -c -o virsystemdtest-testutils.o `test -f 'testutils.c' || echo '$(srcdir)/'`testutils.c

virsystemdtest-testutils.obj: testutils.c
	$(AM_V_CC)$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -MT virsystemdtest-testutils.obj -MD -MP -MF $(DEPDIR)/virsystemdtest-testutils.Tpo -c -o virsystemdtest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`
	$(AM_V_at)$(am__mv) $(DEPDIR)/virsystemdtest-testutils.Tpo $(DEPDIR)/virsystemdtest-testutils.Po
#	$(AM_V_CC) \
#	source='testutils.c' object='virsystemdtest-testutils.obj' libtool=no \
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) \
#	$(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) $(virsystemdtest_CFLAGS) $(CFLAGS) -c -o virsystemdtest-testutils.obj `if test -f 'testutils.c'; then $(CYGPATH_W) 'testutils.c'; else $(CYGPATH_W) '$(srcdir)/testutils.c'; fi`

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	set x; \
	here=`pwd`; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: CTAGS
CTAGS:  $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

check-TESTS: $(TESTS)
	@failed=0; all=0; xfail=0; xpass=0; skip=0; \
	srcdir=$(srcdir); export srcdir; \
	list=' $(TESTS) '; \
	$(am__tty_colors); \
	if test -n "$$list"; then \
	  for tst in $$list; do \
	    if test -f ./$$tst; then dir=./; \
	    elif test -f $$tst; then dir=; \
	    else dir="$(srcdir)/"; fi; \
	    if $(TESTS_ENVIRONMENT) $${dir}$$tst; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xpass=`expr $$xpass + 1`; \
		failed=`expr $$failed + 1`; \
		col=$$red; res=XPASS; \
	      ;; \
	      *) \
		col=$$grn; res=PASS; \
	      ;; \
	      esac; \
	    elif test $$? -ne 77; then \
	      all=`expr $$all + 1`; \
	      case " $(XFAIL_TESTS) " in \
	      *[\ \	]$$tst[\ \	]*) \
		xfail=`expr $$xfail + 1`; \
		col=$$lgn; res=XFAIL; \
	      ;; \
	      *) \
		failed=`expr $$failed + 1`; \
		col=$$red; res=FAIL; \
	      ;; \
	      esac; \
	    else \
	      skip=`expr $$skip + 1`; \
	      col=$$blu; res=SKIP; \
	    fi; \
	    echo "$${col}$$res$${std}: $$tst"; \
	  done; \
	  if test "$$all" -eq 1; then \
	    tests="test"; \
	    All=""; \
	  else \
	    tests="tests"; \
	    All="All "; \
	  fi; \
	  if test "$$failed" -eq 0; then \
	    if test "$$xfail" -eq 0; then \
	      banner="$$All$$all $$tests passed"; \
	    else \
	      if test "$$xfail" -eq 1; then failures=failure; else failures=failures; fi; \
	      banner="$$All$$all $$tests behaved as expected ($$xfail expected $$failures)"; \
	    fi; \
	  else \
	    if test "$$xpass" -eq 0; then \
	      banner="$$failed of $$all $$tests failed"; \
	    else \
	      if test "$$xpass" -eq 1; then passes=pass; else passes=passes; fi; \
	      banner="$$failed of $$all $$tests did not behave as expected ($$xpass unexpected $$passes)"; \
	    fi; \
	  fi; \
	  dashes="$$banner"; \
	  skipped=""; \
	  if test "$$skip" -ne 0; then \
	    if test "$$skip" -eq 1; then \
	      skipped="($$skip test was not run)"; \
	    else \
	      skipped="($$skip tests were not run)"; \
	    fi; \
	    test `echo "$$skipped" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$skipped"; \
	  fi; \
	  report=""; \
	  if test "$$failed" -ne 0 && test -n "$(PACKAGE_BUGREPORT)"; then \
	    report="Please report to $(PACKAGE_BUGREPORT)"; \
	    test `echo "$$report" | wc -c` -le `echo "$$banner" | wc -c` || \
	      dashes="$$report"; \
	  fi; \
	  dashes=`echo "$$dashes" | sed s/./=/g`; \
	  if test "$$failed" -eq 0; then \
	    echo "$$grn$$dashes"; \
	  else \
	    echo "$$red$$dashes"; \
	  fi; \
	  echo "$$banner"; \
	  test -z "$$skipped" || echo "$$skipped"; \
	  test -z "$$report" || echo "$$report"; \
	  echo "$$dashes$$std"; \
	  test "$$failed" -eq 0; \
	else :; fi

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
	$(MAKE) $(AM_MAKEFLAGS) $(check_LTLIBRARIES) $(check_PROGRAMS)
	$(MAKE) $(AM_MAKEFLAGS) check-TESTS
check: check-am
all-am: Makefile $(LTLIBRARIES) $(PROGRAMS)
installdirs:
install: install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:
	-test -z "$(CLEANFILES)" || rm -f $(CLEANFILES)

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-am

clean-am: clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	mostlyclean-am

distclean: distclean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: check-am install-am install-strip

.PHONY: CTAGS GTAGS all all-am check check-TESTS check-am clean \
	clean-checkLTLIBRARIES clean-checkPROGRAMS clean-generic \
	clean-libtool clean-noinstLTLIBRARIES clean-noinstPROGRAMS \
	ctags distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-data \
	install-data-am install-dvi install-dvi-am install-exec \
	install-exec-am install-html install-html-am install-info \
	install-info-am install-man install-pdf install-pdf-am \
	install-ps install-ps-am install-strip installcheck \
	installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags uninstall uninstall-am


check-access: file-access-clean
	VIR_TEST_FILE_ACCESS=1 $(MAKE) $(AM_MAKEFLAGS) check
	$(PERL) check-file-access.pl | sort -u

file-access-clean:
	> test_file_access.txt

VIR_TEST_EXPENSIVE ?= $(VIR_TEST_EXPENSIVE_DEFAULT)
valgrind:
	$(MAKE) check VG="libtool --mode=execute $(VALGRIND)"
#	EXTRA_DIST += virusbtest.c virusbmock.c \
#		virnetdevbandwidthtest.c virnetdevbandwidthmock.c \
#		virtestmock.c

#%.cmx: %.ml
#	ocamlfind ocamlopt $(CILOPTFLAGS) $(CILOPTINCS) $(CILOPTPACKAGES) -c $<

#objectlocking: objectlocking.cmx objectlocking-files.txt
#	ocamlfind ocamlopt $(CILOPTFLAGS) $(CILOPTINCS) $(CILOPTPACKAGES) \
#	  $(CILOPTLIBS) $< -o $@

#objectlocking-files.txt:
#	find $(top_builddir)/src/ -name '*.i' > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
